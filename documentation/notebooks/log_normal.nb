(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[         0,          0]
NotebookDataLength[     83002,       2236]
NotebookOptionsPosition[     74798,       2071]
NotebookOutlinePosition[     75355,       2090]
CellTagsIndexPosition[     75312,       2087]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["Log Normal Trading Function Calculations", "Title",
 CellChangeTimes->{{3.911382811596325*^9, 
  3.9113828340058823`*^9}},ExpressionUUID->"2003d08a-fff7-4f74-8623-\
7a0823c9cafa"],

Cell[CellGroupData[{

Cell["\<\
First, we set up the basic functions we need throughout the notebook.\
\>", "Section",
 CellChangeTimes->{{3.911382862311339*^9, 
  3.91138289581577*^9}},ExpressionUUID->"514be430-48c5-4dc6-92af-\
6b1c3a5b8586"],

Cell[CellGroupData[{

Cell["\<\
Before anything, we should set some environment level variables.\
\>", "Subsection",
 CellChangeTimes->{{3.911387263997834*^9, 
  3.9113872765136137`*^9}},ExpressionUUID->"f16f1652-ed41-4414-8c9b-\
6b6d5d8061ac"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"On", "[", "Assert", "]"}], ";"}], " ", 
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{
    "Asserts", " ", "will", " ", "show", " ", "a", " ", "failure", " ", "if", 
     " ", "they", " ", "fail"}], ",", " ", 
    RowBox[{"and", " ", "nothing", " ", "if", " ", "they", " ", 
     RowBox[{"don", "'"}], "t"}]}], " ", "*)"}]}]], "Code",
 CellChangeTimes->{{3.91138727840687*^9, 3.911387281430051*^9}, {
  3.911387543969853*^9, 3.911387555514419*^9}},
 CellLabel->
  "In[2099]:=",ExpressionUUID->"8255c47c-fa0b-4fdd-8638-752453aca613"]
}, Open  ]],

Cell[CellGroupData[{

Cell["First are the CDF and inverse CDF (PPF) functions.", "Subsection",
 CellChangeTimes->{{3.9113829761574574`*^9, 
  3.9113829863941193`*^9}},ExpressionUUID->"b3dd161e-0b53-4183-b30c-\
be7844f26477"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"\[CapitalPhi]", "[", "x_", "]"}], " ", ":=", " ", 
  RowBox[{"CDF", "[", 
   RowBox[{
    RowBox[{"NormalDistribution", "[", 
     RowBox[{"0", ",", "1"}], "]"}], ",", " ", "x"}], "]"}]}], "\n", 
 RowBox[{
  RowBox[{
   SubscriptBox["\[CapitalPhi]", "inv"], "[", "y_", "]"}], " ", ":=", " ", 
  RowBox[{"Quantile", "[", 
   RowBox[{
    RowBox[{"NormalDistribution", "[", 
     RowBox[{"0", ",", " ", "1"}], "]"}], ",", " ", "y"}], "]"}]}]}], "Code",
 CellChangeTimes->{{3.911382903714142*^9, 3.911383006799996*^9}, {
  3.911385117889493*^9, 3.911385119663499*^9}},
 CellLabel->
  "In[2100]:=",ExpressionUUID->"25d6c1c4-f902-41e0-8746-c63f6b03d94e"]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
Next let\[CloseCurlyQuote]s define some helper functions. These will appear \
often in calculations.\
\>", "Subsection",
 CellChangeTimes->{{3.911383043072701*^9, 3.911383082172174*^9}, {
  3.911383316418652*^9, 
  3.9113833317783127`*^9}},ExpressionUUID->"f601d02f-f91e-4780-a166-\
a78097a54f48"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   SubscriptBox["d", "1"], "[", 
   RowBox[{"S_", ",", "K_", ",", "\[Sigma]_", ",", "\[Tau]_"}], "]"}], " ", ":=",
   " ", 
  FractionBox[
   RowBox[{
    RowBox[{"Log", "[", 
     FractionBox["S", "K"], "]"}], " ", "+", " ", 
    RowBox[{
     FractionBox["1", "2"], 
     SuperscriptBox["\[Sigma]", "2"], "\[Tau]"}]}], 
   RowBox[{"\[Sigma]", 
    RowBox[{"\[Sqrt]", "\[Tau]"}]}]]}], "\n", 
 RowBox[{
  RowBox[{
   SubscriptBox["d", "2"], "[", 
   RowBox[{"S_", ",", "K_", ",", "\[Sigma]_", ",", "\[Tau]_"}], "]"}], " ", ":=",
   " ", 
  FractionBox[
   RowBox[{
    RowBox[{"Log", "[", 
     FractionBox["S", "K"], "]"}], " ", "-", " ", 
    RowBox[{
     FractionBox["1", "2"], 
     SuperscriptBox["\[Sigma]", "2"], "\[Tau]"}]}], 
   RowBox[{"\[Sigma]", 
    RowBox[{"\[Sqrt]", "\[Tau]"}]}]]}]}], "Code",
 CellChangeTimes->{{3.911383086202894*^9, 3.911383096527341*^9}, {
  3.911383144055451*^9, 3.911383310823001*^9}, {3.9113851030677443`*^9, 
  3.91138511600043*^9}},
 CellLabel->
  "In[2102]:=",ExpressionUUID->"d5d16a82-3e60-44ff-affc-b50eb9144304"]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
Now let\[CloseCurlyQuote]s define functions that are more explicitly used for \
the DFMM.\
\>", "Subsection",
 CellChangeTimes->{{3.911383368894425*^9, 3.9113833696600657`*^9}, {
  3.911383542720358*^9, 
  3.911383554344432*^9}},ExpressionUUID->"009a24ad-ebe5-4d73-bdda-\
a7839592332a"],

Cell[CellGroupData[{

Cell["\<\
These are functions used to get initial liquidity given a token amount and a \
price.\
\>", "Subsubsection",
 CellChangeTimes->{{3.911383821691424*^9, 
  3.911383842953394*^9}},ExpressionUUID->"3b15f5e3-f420-4095-899a-\
506c7286cc40"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   SubscriptBox["L", "X"], "[", 
   RowBox[{"x_", ",", "S_", ",", "K_", ",", "\[Sigma]_", ",", "\[Tau]_"}], 
   "]"}], " ", ":=", " ", 
  FractionBox["x", 
   RowBox[{"1", " ", "-", " ", 
    RowBox[{"\[CapitalPhi]", "[", 
     RowBox[{
      SubscriptBox["d", "1"], "[", 
      RowBox[{"S", ",", "K", ",", "\[Sigma]", ",", "\[Tau]"}], "]"}], 
     "]"}]}]]}], "\n", 
 RowBox[{
  RowBox[{
   SubscriptBox["L", "Y"], "[", 
   RowBox[{"y_", ",", "S_", ",", "K_", ",", "\[Sigma]_", ",", "\[Tau]_"}], 
   "]"}], " ", ":=", " ", 
  FractionBox["y", 
   RowBox[{"K", " ", 
    RowBox[{"\[CapitalPhi]", "[", 
     RowBox[{
      SubscriptBox["d", "2"], "[", 
      RowBox[{"S", ",", "K", ",", "\[Sigma]", ",", "\[Tau]"}], "]"}], 
     "]"}]}]]}], "\n", 
 RowBox[{
  RowBox[{"X", "[", 
   RowBox[{"y_", ",", "S_", ",", "K_", ",", "\[Sigma]_", ",", "\[Tau]_"}], 
   "]"}], " ", ":=", " ", 
  RowBox[{
   RowBox[{
    SubscriptBox["L", "Y"], "[", 
    RowBox[{"y", ",", "S", ",", "K", ",", "\[Sigma]", ",", "\[Tau]"}], "]"}], 
   " ", 
   RowBox[{"(", 
    RowBox[{"1", " ", "-", " ", 
     RowBox[{"\[CapitalPhi]", "[", 
      RowBox[{
       SubscriptBox["d", "1"], "[", 
       RowBox[{"S", ",", "K", ",", "\[Sigma]", ",", "\[Tau]"}], "]"}], 
      "]"}]}], ")"}]}]}], "\n", 
 RowBox[{
  RowBox[{"Y", "[", 
   RowBox[{"x_", ",", "S_", ",", "K_", ",", "\[Sigma]_", ",", "\[Tau]_"}], 
   "]"}], " ", ":=", " ", 
  RowBox[{"K", " ", 
   RowBox[{
    SubscriptBox["L", "X"], "[", 
    RowBox[{"x", ",", "S", ",", "K", ",", "\[Sigma]", ",", "\[Tau]"}], "]"}], 
   " ", 
   RowBox[{"\[CapitalPhi]", "[", 
    RowBox[{
     SubscriptBox["d", "2"], "[", 
     RowBox[{"S", ",", "K", ",", "\[Sigma]", ",", "\[Tau]"}], "]"}], 
    "]"}]}]}]}], "Code",
 CellChangeTimes->{{3.911383688783895*^9, 3.911383741794456*^9}, {
  3.911383797950727*^9, 3.911383809912835*^9}, {3.9113838491740713`*^9, 
  3.911383864952888*^9}, {3.9113841779644413`*^9, 3.911384322151863*^9}, {
  3.911384433609087*^9, 3.911384448745434*^9}, {3.9113850554248533`*^9, 
  3.911385099649076*^9}, {3.91138525707533*^9, 3.911385263363533*^9}, {
  3.911385324670476*^9, 3.911385325035862*^9}, {3.911409187909778*^9, 
  3.9114091880800257`*^9}},
 CellLabel->
  "In[2104]:=",ExpressionUUID->"3950a1e9-9c32-45c4-b5ef-404c37d6ef65"]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
These are functions that are used to get prices from either a balance in X or \
a balance in Y.\
\>", "Subsubsection",
 CellChangeTimes->{{3.91138394332069*^9, 
  3.911383960427863*^9}},ExpressionUUID->"6228385e-cfd2-4bd0-97f4-\
58c98a5a994e"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   SubscriptBox["P", "X"], "[", 
   RowBox[{"x_", ",", "L_", ",", "K_", ",", "\[Sigma]_", ",", "\[Tau]_"}], 
   "]"}], " ", ":=", " ", 
  RowBox[{"K", " ", 
   RowBox[{"Exp", "[", 
    RowBox[{
     RowBox[{
      RowBox[{
       SubscriptBox["\[CapitalPhi]", "inv"], "[", 
       RowBox[{"1", " ", "-", " ", 
        FractionBox["x", "L"]}], "]"}], "\[Sigma]"}], " ", "-", " ", 
     RowBox[{
      FractionBox["1", "2"], 
      SuperscriptBox["\[Sigma]", "2"]}]}], "]"}]}]}], "\n", 
 RowBox[{
  RowBox[{
   SubscriptBox["P", "Y"], "[", 
   RowBox[{"y_", ",", "L_", ",", "K_", ",", "\[Sigma]_", ",", "\[Tau]_"}], 
   "]"}], " ", ":=", " ", 
  RowBox[{"K", " ", 
   RowBox[{"Exp", "[", 
    RowBox[{
     RowBox[{
      RowBox[{
       SubscriptBox["\[CapitalPhi]", "inv"], "[", 
       FractionBox["y", 
        RowBox[{"K", " ", "L"}]], "]"}], "\[Sigma]"}], " ", "+", " ", 
     RowBox[{
      FractionBox["1", "2"], 
      SuperscriptBox["\[Sigma]", "2"]}]}], "]"}]}]}]}], "Code",
 CellChangeTimes->{{3.9113839769604807`*^9, 3.911384029460125*^9}, {
  3.911385062781126*^9, 3.911385091502931*^9}},
 CellLabel->
  "In[2108]:=",ExpressionUUID->"cdbca2c9-2426-4adf-8516-6c22e3b352b1"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Then we have the trading function", "Subsubsection",
 CellChangeTimes->{{3.9114107980754547`*^9, 
  3.911410804009096*^9}},ExpressionUUID->"18015876-38da-4fa9-82b7-\
a417d745ef90"],

Cell[BoxData[
 RowBox[{
  RowBox[{"\[CurlyPhi]", "[", 
   RowBox[{
   "x_", ",", "y_", ",", "L_", ",", "K_", ",", "\[Sigma]_", ",", "\[Tau]_"}], 
   "]"}], " ", ":=", " ", 
  RowBox[{
   RowBox[{
    SubscriptBox["\[CapitalPhi]", "inv"], "[", 
    FractionBox["x", "L"], "]"}], "+", 
   RowBox[{
    SubscriptBox["\[CapitalPhi]", "inv"], "[", 
    FractionBox["y", 
     RowBox[{"K", " ", "L"}]], "]"}], "+", 
   RowBox[{"\[Sigma]", 
    RowBox[{"\[Sqrt]", "\[Tau]"}]}]}]}]], "Code",
 CellChangeTimes->{{3.911410806554799*^9, 3.911410882453505*^9}, {
  3.9114109468550673`*^9, 3.9114109866059113`*^9}},
 CellLabel->
  "In[2110]:=",ExpressionUUID->"a65cb5ec-cdac-40e0-bb49-f3d8157592d9"]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
Let\[CloseCurlyQuote]s initialize a pool with some constants and some \
liquidity. \
\>", "Section",
 CellChangeTimes->{{3.911384055956565*^9, 3.911384066810919*^9}, {
  3.911384711690135*^9, 
  3.911384714277852*^9}},ExpressionUUID->"da815218-0c74-4720-a5c9-\
76f45781c5e2"],

Cell[CellGroupData[{

Cell["\<\
First, let\[CloseCurlyQuote]s set the parameters for our curve, including the \
fee parameter \[Gamma]\
\>", "Subsection",
 CellChangeTimes->{{3.911384725040826*^9, 3.911384731518064*^9}, {
  3.9113851982356*^9, 
  3.911385205023809*^9}},ExpressionUUID->"d461a415-44ca-4804-8248-\
6137a0f9449f"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      SubscriptBox["K", "0"], ",", " ", 
      SubscriptBox["\[Sigma]", "0"], ",", " ", 
      SubscriptBox["\[Tau]", "0"], ",", " ", 
      SubscriptBox["\[Gamma]", "0"]}], "}"}], " ", "=", " ", 
    RowBox[{"{", 
     RowBox[{"3", ",", " ", 
      FractionBox["1", "4"], ",", " ", "1", ",", " ", "0.997"}], "}"}]}], 
   ";"}], " "}], "\n", 
 RowBox[{
  RowBox[{"Echo", "[", 
   RowBox[{
    SubscriptBox["K", "0"], ",", " ", 
    "\"\<\!\(\*SubscriptBox[\(K\), \(0\)]\) = \>\""}], "]"}], ";", " ", 
  RowBox[{"Echo", "[", 
   RowBox[{
    SubscriptBox["\[Sigma]", "0"], ",", " ", 
    "\"\<\!\(\*SubscriptBox[\(\[Sigma]\), \(0\)]\) = \>\""}], "]"}], ";", " ", 
  RowBox[{"Echo", "[", 
   RowBox[{
    SubscriptBox["\[Tau]", "0"], ",", " ", 
    "\"\<\!\(\*SubscriptBox[\(\[Tau]\), \(0\)]\) = \>\""}], "]"}], ";", " ", 
  RowBox[{"Echo", "[", 
   RowBox[{
    SubscriptBox["\[Gamma]", "0"], ",", " ", 
    "\"\<\!\(\*SubscriptBox[\(\[Gamma]\), \(0\)]\) = \>\""}], "]"}], 
  ";"}]}], "Code",
 CellChangeTimes->{
  3.91138448247676*^9, {3.9113845136096563`*^9, 3.911384540517331*^9}, {
   3.911384579083336*^9, 3.911384646274679*^9}, {3.911384706054633*^9, 
   3.911384732869401*^9}, {3.911385194438079*^9, 3.9113852384442177`*^9}, 
   3.911387336640081*^9, {3.911408996136958*^9, 3.9114090092659817`*^9}, {
   3.9169341546962433`*^9, 3.916934155785771*^9}, {3.916934920973572*^9, 
   3.916934921366069*^9}, {3.916935004865656*^9, 3.916935006671085*^9}, {
   3.916935097711054*^9, 3.916935099175394*^9}, {3.91693537100875*^9, 
   3.916935393268579*^9}, {3.916935561687649*^9, 3.916935563633135*^9}},
 CellLabel->
  "In[2333]:=",ExpressionUUID->"8d262a91-37a1-41fb-b1b3-ae8191b1ccda"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  TagBox["\<\"\\!\\(\\*SubscriptBox[\\(K\\), \\(0\\)]\\) = \"\>",
   "EchoLabel"], "  ", "3"}]], "Echo",
 CellChangeTimes->{
  3.91693556428861*^9},ExpressionUUID->"7e39ca2f-4a03-4d6a-a514-bec0dbb5f5b5"],

Cell[BoxData[
 RowBox[{
  TagBox["\<\"\\!\\(\\*SubscriptBox[\\(\[Sigma]\\), \\(0\\)]\\) = \"\>",
   "EchoLabel"], "  ", 
  FractionBox["1", "4"]}]], "Echo",
 CellChangeTimes->{
  3.9169355643225317`*^9},ExpressionUUID->"647f9f1c-0e9e-4512-8577-\
e084f4e956ea"],

Cell[BoxData[
 RowBox[{
  TagBox["\<\"\\!\\(\\*SubscriptBox[\\(\[Tau]\\), \\(0\\)]\\) = \"\>",
   "EchoLabel"], "  ", "1"}]], "Echo",
 CellChangeTimes->{
  3.916935564330999*^9},ExpressionUUID->"a06296d0-b193-4824-88a5-\
0719735a9618"],

Cell[BoxData[
 RowBox[{
  TagBox["\<\"\\!\\(\\*SubscriptBox[\\(\[Gamma]\\), \\(0\\)]\\) = \"\>",
   "EchoLabel"], "  ", "0.997`"}]], "Echo",
 CellChangeTimes->{
  3.9169355643528147`*^9},ExpressionUUID->"ab20a4ec-1351-4505-8b2c-\
1604ede7b464"]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
Now, let\[CloseCurlyQuote]s set the initial liquidity by providing an amount \
of X and a price S.\
\>", "Subsection",
 CellChangeTimes->{{3.9113847363117323`*^9, 3.911384755116337*^9}, {
  3.911384849366685*^9, 
  3.9113848505774117`*^9}},ExpressionUUID->"a6874bc0-590c-4cb3-9d20-\
f010a014a154"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      SubscriptBox["x", "0"], ",", 
      SubscriptBox["S", "0"]}], "}"}], " ", "=", " ", 
    RowBox[{"{", 
     RowBox[{"1", ",", " ", "2"}], "}"}]}], ";"}], " "}], "\n", 
 RowBox[{
  RowBox[{"Echo", "[", 
   RowBox[{
    SubscriptBox["x", "0"], ",", " ", 
    "\"\<The initial X-reserve balance is: \!\(\*SubscriptBox[\(x\), \(0\)]\) \
= \>\""}], "]"}], ";", " ", 
  RowBox[{"Echo", "[", 
   RowBox[{
    SubscriptBox["S", "0"], ",", " ", 
    "\"\<\!\(\*SubscriptBox[\(S\), \(0\)]\) = \>\""}], "]"}], ";"}]}], "Code",\

 CellChangeTimes->{{3.911384757671178*^9, 3.911384806225191*^9}, {
   3.911386982132729*^9, 3.911386989059497*^9}, 3.91138734111685*^9, {
   3.9114090196649647`*^9, 3.9114090339697657`*^9}},
 CellLabel->
  "In[2113]:=",ExpressionUUID->"085ca656-cc94-43cf-a8c6-c116e23e4910"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  TagBox["\<\"The initial X-reserve balance is: \
\\!\\(\\*SubscriptBox[\\(x\\), \\(0\\)]\\) = \"\>",
   "EchoLabel"], "  ", "1"}]], "Echo",
 CellChangeTimes->{
  3.916934158105736*^9},ExpressionUUID->"9ef299a3-0641-4f9d-bdef-\
209087f6eea2"],

Cell[BoxData[
 RowBox[{
  TagBox["\<\"\\!\\(\\*SubscriptBox[\\(S\\), \\(0\\)]\\) = \"\>",
   "EchoLabel"], "  ", "2"}]], "Echo",
 CellChangeTimes->{
  3.916934158140974*^9},ExpressionUUID->"213533fd-ff58-4aa6-88be-\
5ad188ce7c6b"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
From this, let\[CloseCurlyQuote]s see what we will get for the initial amount \
of Y and L.\
\>", "Subsubsection",
 CellChangeTimes->{{3.9113848345992517`*^9, 
  3.91138485967836*^9}},ExpressionUUID->"d0f44536-b00f-4974-8c75-\
dd65dd319645"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      SubscriptBox["L", "0"], ",", " ", 
      SubscriptBox["y", "0"]}], "}"}], " ", "=", " ", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{
       SubscriptBox["L", "X"], "[", 
       RowBox[{
        SubscriptBox["x", "0"], ",", 
        SubscriptBox["S", "0"], ",", 
        SubscriptBox["K", "0"], ",", 
        SubscriptBox["\[Sigma]", "0"], ",", 
        SubscriptBox["\[Tau]", "0"]}], "]"}], ",", " ", 
      RowBox[{"Y", "[", 
       RowBox[{
        SubscriptBox["x", "0"], ",", 
        SubscriptBox["S", "0"], ",", 
        SubscriptBox["K", "0"], ",", 
        SubscriptBox["\[Sigma]", "0"], ",", 
        SubscriptBox["\[Tau]", "0"]}], "]"}]}], "}"}]}], ";"}], " "}], "\n", 
 RowBox[{
  RowBox[{"Echo", "[", 
   RowBox[{
    RowBox[{"N", "[", 
     RowBox[{
      SubscriptBox["L", "0"], ",", " ", "18"}], "]"}], ",", " ", 
    "\"\<The initial liquidity is: \!\(\*SubscriptBox[\(L\), \(0\)]\) = \
\>\""}], "]"}], ";", " ", 
  RowBox[{"Echo", "[", 
   RowBox[{
    RowBox[{"N", "[", 
     RowBox[{
      SubscriptBox["y", "0"], ",", " ", "18"}], "]"}], ",", " ", 
    "\"\<The initial Y-reserve balance is: \!\(\*SubscriptBox[\(y\), \(0\)]\) \
= \>\""}], "]"}], ";"}]}], "Code",
 CellChangeTimes->{{3.911384864489366*^9, 3.911384942301722*^9}, {
  3.911384992602735*^9, 3.9113850128379593`*^9}, {3.911385047347066*^9, 
  3.9113850518014383`*^9}, {3.9113851385254107`*^9, 3.9113851753238697`*^9}, {
  3.91138696634296*^9, 3.911386992951726*^9}, {3.911387349621842*^9, 
  3.911387398394403*^9}, {3.911912845565853*^9, 3.9119128460491123`*^9}},
 CellLabel->
  "In[2115]:=",ExpressionUUID->"57112165-db6f-447c-9713-f9c85c6d4828"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  TagBox["\<\"The initial liquidity is: \\!\\(\\*SubscriptBox[\\(L\\), \
\\(0\\)]\\) = \"\>",
   "EchoLabel"], "  ", 
  "1.07205816303780375296378681139341832344`18."}]], "Echo",
 CellChangeTimes->{
  3.916934159752591*^9},ExpressionUUID->"73995023-d219-4765-b252-\
b4a6c7e173fb"],

Cell[BoxData[
 RowBox[{
  TagBox["\<\"The initial Y-reserve balance is: \
\\!\\(\\*SubscriptBox[\\(y\\), \\(0\\)]\\) = \"\>",
   "EchoLabel"], "  ", 
  "0.1297108108904937842903240194995504792`18."}]], "Echo",
 CellChangeTimes->{
  3.9169341597856092`*^9},ExpressionUUID->"0126b474-dd07-4277-ae9b-\
4f98ff7a6f9e"]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Let\[CloseCurlyQuote]s check that the prices are correct after the \
fact.", "Subsubsection",
 CellChangeTimes->{{3.911385351666885*^9, 
  3.91138536037985*^9}},ExpressionUUID->"0dabba71-0908-48dd-b11c-\
9fc06ac2d79b"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Assert", "[", 
  RowBox[{
   RowBox[{
    SubscriptBox["P", "X"], "[", 
    RowBox[{
     SubscriptBox["x", "0"], ",", 
     SubscriptBox["L", "0"], ",", 
     SubscriptBox["K", "0"], ",", 
     SubscriptBox["\[Sigma]", "0"], ",", 
     SubscriptBox["\[Tau]", "0"]}], "]"}], " ", "==", " ", 
   RowBox[{
    SubscriptBox["P", "Y"], "[", 
    RowBox[{
     SubscriptBox["y", "0"], ",", 
     SubscriptBox["L", "0"], ",", 
     SubscriptBox["K", "0"], ",", 
     SubscriptBox["\[Sigma]", "0"], ",", 
     SubscriptBox["\[Tau]", "0"]}], "]"}]}], "]"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"Echo", "[", 
    RowBox[{
     RowBox[{
      SubscriptBox["P", "X"], "[", 
      RowBox[{
       SubscriptBox["x", "0"], ",", 
       SubscriptBox["L", "0"], ",", 
       SubscriptBox["K", "0"], ",", 
       SubscriptBox["\[Sigma]", "0"], ",", 
       SubscriptBox["\[Tau]", "0"]}], "]"}], ",", " ", 
     "\"\<The initial price is: P = \>\""}], "]"}], ";"}], " "}]}], "Code",
 CellChangeTimes->{{3.9113853639105387`*^9, 3.9113854185634947`*^9}, {
   3.9113869483534203`*^9, 3.911386962492029*^9}, {3.911386994813387*^9, 
   3.911387177122032*^9}, {3.911387291516371*^9, 3.911387309281919*^9}, 
   3.911912928324705*^9},
 CellLabel->
  "In[2117]:=",ExpressionUUID->"05df5500-1e66-49a9-afd7-256365f8b6dc"],

Cell[BoxData[
 RowBox[{
  TagBox["\<\"The initial price is: P = \"\>",
   "EchoLabel"], "  ", "2"}]], "Echo",
 CellChangeTimes->{
  3.916934161771638*^9},ExpressionUUID->"8a46f627-49f4-47bc-bc7a-\
209eac0bb607"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
Just to verify that we could have done this the other way, and show the flow, \
let\[CloseCurlyQuote]s do that real fast.\
\>", "Subsubsection",
 CellChangeTimes->{{3.9113853013290577`*^9, 
  3.9113853161239634`*^9}},ExpressionUUID->"6c78f375-83c5-40c5-a26f-\
9dfafb83427b"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     SubscriptBox["L", 
      SubscriptBox["0", "y"]], ",", " ", 
     SubscriptBox["x", 
      SubscriptBox["0", "y"]]}], "}"}], " ", "=", " ", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      SubscriptBox["L", "Y"], "[", 
      RowBox[{
       SubscriptBox["y", "0"], ",", 
       SubscriptBox["S", "0"], ",", 
       SubscriptBox["K", "0"], ",", 
       SubscriptBox["\[Sigma]", "0"], ",", 
       SubscriptBox["\[Tau]", "0"]}], "]"}], ",", " ", 
     RowBox[{"X", "[", 
      RowBox[{
       SubscriptBox["y", "0"], ",", 
       SubscriptBox["S", "0"], ",", 
       SubscriptBox["K", "0"], ",", 
       SubscriptBox["\[Sigma]", "0"], ",", 
       SubscriptBox["\[Tau]", "0"]}], "]"}]}], "}"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"Assert", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      SubscriptBox["L", 
       SubscriptBox["0", "y"]], ",", 
      SubscriptBox["x", 
       SubscriptBox["0", "y"]]}], "}"}], " ", "==", " ", 
    RowBox[{"{", 
     RowBox[{
      SubscriptBox["L", "0"], ",", 
      SubscriptBox["x", "0"]}], "}"}]}], "]"}], ";"}]}], "Code",
 CellChangeTimes->{{3.911387447754344*^9, 3.911387533259612*^9}, {
  3.911409113951961*^9, 3.911409136342054*^9}, {3.911409206127439*^9, 
  3.911409206365666*^9}},
 CellLabel->
  "In[2119]:=",ExpressionUUID->"05cdeb1a-e1b0-40a7-af51-51ab9b75cc2e"]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Swapping", "Section",
 CellChangeTimes->{{3.911387861088531*^9, 
  3.9113878701923523`*^9}},ExpressionUUID->"e0558e89-2c12-471a-af64-\
7b6a1457eb4d"],

Cell[CellGroupData[{

Cell["\<\
Now we need to set up the swap logic. We will use R to denote an arbitrary \
reserve.\
\>", "Subsection",
 CellChangeTimes->{{3.911387873703059*^9, 3.911387883191267*^9}, {
  3.911388058682213*^9, 
  3.911388067027336*^9}},ExpressionUUID->"2f7348b3-443c-4a22-943e-\
943b7962999e"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   SubscriptBox["\[Delta]", "in"], "[", 
   RowBox[{"\[CapitalDelta]_", ",", "\[Gamma]_"}], "]"}], " ", ":=", " ", 
  RowBox[{
   RowBox[{"(", 
    RowBox[{"1", "-", "\[Gamma]"}], ")"}], "\[CapitalDelta]"}]}], "\n", 
 RowBox[{
  RowBox[{
   SubscriptBox["\[Delta]", "Liq"], "[", 
   RowBox[{"\[CapitalDelta]_", ",", "R_", ",", "L_", ",", "\[Gamma]_"}], 
   "]"}], " ", ":=", " ", 
  RowBox[{
   RowBox[{
    SubscriptBox["\[Delta]", "in"], "[", 
    RowBox[{"\[CapitalDelta]", ",", "\[Gamma]"}], "]"}], 
   FractionBox["L", "R"]}]}], "\n", 
 RowBox[{
  RowBox[{
   SubscriptBox["\[CapitalDelta]", "X"], "[", 
   RowBox[{
   "\[CapitalDelta]_", ",", "x_", ",", "y_", ",", "L_", ",", "K_", ",", 
    "\[Sigma]_", ",", "\[Tau]_", ",", "\[Gamma]_"}], "]"}], " ", ":=", " ", 
  RowBox[{
   RowBox[{
    RowBox[{"(", 
     RowBox[{"L", "+", 
      RowBox[{
       SubscriptBox["\[Delta]", "Liq"], "[", 
       RowBox[{"\[CapitalDelta]", ",", "y", ",", "L", ",", "\[Gamma]"}], 
       "]"}]}], ")"}], 
    RowBox[{"\[CapitalPhi]", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"-", "\[Sigma]"}], 
       RowBox[{"\[Sqrt]", "\[Tau]"}]}], "  ", "-", " ", 
      RowBox[{
       SubscriptBox["\[CapitalPhi]", "inv"], "[", 
       FractionBox[
        RowBox[{"y", "+", "\[CapitalDelta]"}], 
        RowBox[{"K", 
         RowBox[{"(", 
          RowBox[{"L", "+", 
           RowBox[{
            SubscriptBox["\[Delta]", "Liq"], "[", 
            RowBox[{"\[CapitalDelta]", ",", "y", ",", "L", ",", "\[Gamma]"}], 
            "]"}]}], ")"}]}]], "]"}]}], "]"}]}], "-", "x"}]}], "\n", 
 RowBox[{
  RowBox[{
   SubscriptBox["\[CapitalDelta]", "Y"], "[", 
   RowBox[{
   "\[CapitalDelta]_", ",", "x_", ",", "y_", ",", "L_", ",", "K_", ",", 
    "\[Sigma]_", ",", "\[Tau]_", ",", "\[Gamma]_"}], "]"}], " ", ":=", " ", 
  RowBox[{
   RowBox[{"K", 
    RowBox[{"(", 
     RowBox[{"L", "+", 
      RowBox[{
       SubscriptBox["\[Delta]", "Liq"], "[", 
       RowBox[{"\[CapitalDelta]", ",", "x", ",", "L", ",", "\[Gamma]"}], 
       "]"}]}], ")"}], 
    RowBox[{"\[CapitalPhi]", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"-", "\[Sigma]"}], 
       RowBox[{"\[Sqrt]", "\[Tau]"}]}], " ", "-", " ", 
      RowBox[{
       SubscriptBox["\[CapitalPhi]", "inv"], "[", 
       FractionBox[
        RowBox[{"x", "+", "\[CapitalDelta]"}], 
        RowBox[{"L", "+", 
         RowBox[{
          SubscriptBox["\[Delta]", "Liq"], "[", 
          RowBox[{"\[CapitalDelta]", ",", "x", ",", "L", ",", "\[Gamma]"}], 
          "]"}]}]], "]"}]}], "]"}]}], "-", "y"}]}]}], "Code",
 CellChangeTimes->{{3.9113879019426517`*^9, 3.91138810608572*^9}, {
  3.911388182414874*^9, 3.911388482660475*^9}, {3.911388787674255*^9, 
  3.911388979350903*^9}, {3.911389141187207*^9, 3.911389159323999*^9}, {
  3.911390630736039*^9, 3.911390698837728*^9}, {3.911408926773992*^9, 
  3.911408926935534*^9}, {3.916935312155489*^9, 3.916935312305293*^9}},
 CellLabel->
  "In[2335]:=",ExpressionUUID->"0716117c-5381-46be-8b57-f2cefa727879"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Arbitrage", "Section",
 CellChangeTimes->{{3.91138759286382*^9, 3.9113876060914783`*^9}, {
  3.911387637205267*^9, 
  3.911387638219921*^9}},ExpressionUUID->"65d2b88d-22b2-481a-935c-\
71bdce9f21f1"],

Cell[TextData[{
 "We will assume there is some external price ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["S", "ext"], TraditionalForm]],ExpressionUUID->
  "cd8c38a7-d91f-4b2c-a735-67538238c600"],
 "that we are given and decide whether or not to perform an arbitrage and, if \
so, to get the optimal trade size. That is, the trade that gives the \
arbitrageur maximal profit."
}], "Text",
 CellChangeTimes->{{3.9113876414292507`*^9, 3.9113877131079063`*^9}, {
  3.911388488238481*^9, 
  3.911388489476202*^9}},ExpressionUUID->"f20cba79-bbb2-4d1b-9349-\
a349e8b0b7a4"],

Cell[CellGroupData[{

Cell[TextData[{
 "We will need the marginal price ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["P", "M"], TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "17089434-c32f-45ea-a26f-0d3ed9139695"],
 " of a swap to compute optimal arbitrages and a profit calculation ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["V", "A"], TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "72aada08-6991-4530-9774-3dd0a302c916"]
}], "Subsubsection",
 CellChangeTimes->{{3.9113884927083406`*^9, 3.911388517540121*^9}, {
  3.911388583492565*^9, 3.911388585552403*^9}, {3.9113886383414087`*^9, 
  3.911388651317487*^9}},ExpressionUUID->"d7131855-64d1-451f-98f3-\
152b4aa9f3a5"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   SubscriptBox["P", "M"], "[", 
   RowBox[{"dX_", ",", "dY_"}], "]"}], " ", ":=", " ", 
  FractionBox[
   RowBox[{"-", "dY"}], "dX"]}], "\n", 
 RowBox[{
  RowBox[{
   SubscriptBox["V", "A"], "[", 
   RowBox[{"Pm_", ",", "Pext_", ",", "\[CapitalDelta]_"}], "]"}], " ", ":=", 
  " ", 
  RowBox[{
   RowBox[{"(", 
    RowBox[{"Pm", " ", "-", " ", "Pext"}], ")"}], 
   "\[CapitalDelta]"}]}]}], "Code",
 CellChangeTimes->{{3.911388520734275*^9, 3.911388754553933*^9}, {
  3.911408038142099*^9, 3.9114080663589067`*^9}, {3.9114081240293818`*^9, 
  3.91140812426967*^9}},
 CellLabel->
  "In[2125]:=",ExpressionUUID->"fadd5b7c-a968-401d-9e42-d6ca30b3a2a6"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Lower External Price:", "Subsection",
 CellChangeTimes->{{3.911387716836122*^9, 3.9113877303598022`*^9}, {
  3.911389282458209*^9, 3.911389285697858*^9}, {3.9119143659239197`*^9, 
  3.911914366787615*^9}},ExpressionUUID->"eed8b815-af5d-458f-8082-\
a956f0fb88b9"],

Cell[CellGroupData[{

Cell[TextData[{
 "We\[CloseCurlyQuote]ll let ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["O", "X"], TraditionalForm]],ExpressionUUID->
  "bea8f527-9f1f-453d-b766-3832796355bb"],
 " be the optimal amount of X token to tender to achieve maximal arbitrage \
profit."
}], "Subsubsection",
 CellChangeTimes->{{3.911389287836197*^9, 3.911389310066874*^9}, {
  3.911389351175222*^9, 
  3.911389351682972*^9}},ExpressionUUID->"b20dcf41-6dfe-404c-8167-\
50b070efca5f"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   SubscriptBox["S", "ext"], " ", "=", " ", "1.8"}], ";", " ", 
  RowBox[{"Assert", "[", 
   RowBox[{
    SubscriptBox["S", "ext"], " ", "<", " ", 
    SubscriptBox["S", "0"]}], "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   SubscriptBox["Prof", "Lower"], "[", "in_", "]"}], " ", ":=", " ", 
  RowBox[{
   SubscriptBox["V", "A"], "[", 
   RowBox[{
    RowBox[{
     SubscriptBox["P", "M"], "[", 
     RowBox[{"in", ",", 
      RowBox[{
       SubscriptBox["\[CapitalDelta]", "Y"], "[", 
       RowBox[{"in", ",", 
        SubscriptBox["x", "0"], ",", 
        SubscriptBox["y", "0"], ",", 
        SubscriptBox["L", "0"], ",", 
        SubscriptBox["K", "0"], ",", 
        SubscriptBox["\[Sigma]", "0"], ",", 
        SubscriptBox["\[Tau]", "0"], ",", 
        SubscriptBox["\[Gamma]", "0"]}], "]"}]}], "]"}], ",", " ", 
    SubscriptBox["S", "ext"], ",", " ", "in"}], "]"}]}], "\n", 
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{
    SubscriptBox["Prof", "Lower"], "[", "v", "]"}], ",", " ", 
   RowBox[{"{", 
    RowBox[{"v", ",", "0", ",", "0.2"}], "}"}]}], "]"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    SubscriptBox["O", "X"], " ", "=", " ", 
    RowBox[{"ArgMax", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{
         SubscriptBox["Prof", "Lower"], "[", "x", "]"}], ",", " ", 
        RowBox[{"0", "<=", "x", "<=", 
         RowBox[{
          SubscriptBox["L", "0"], "-", 
          SubscriptBox["x", "0"]}]}]}], "}"}], ",", " ", "x"}], "]"}]}], 
   ";"}], " "}], "\n", 
 RowBox[{
  RowBox[{"Echo", "[", 
   RowBox[{
    SubscriptBox["O", "X"], ",", " ", 
    "\"\<The optimal amount of X to tender is: \!\(\*SubscriptBox[\(\
\[CapitalDelta]\), \(X\)]\) = \>\""}], "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"Echo", "[", 
   RowBox[{
    RowBox[{"N", "[", 
     RowBox[{
      RowBox[{
       SubscriptBox["\[CapitalDelta]", "Y"], "[", 
       RowBox[{
        SubscriptBox["O", "X"], ",", 
        SubscriptBox["x", "0"], ",", 
        SubscriptBox["y", "0"], ",", 
        SubscriptBox["L", "0"], ",", 
        SubscriptBox["K", "0"], ",", 
        SubscriptBox["\[Sigma]", "0"], ",", 
        SubscriptBox["\[Tau]", "0"], ",", 
        SubscriptBox["\[Gamma]", "0"]}], "]"}], ",", "18"}], "]"}], ",", " ", 
    "\"\<The amount out is: \!\(\*SubscriptBox[\(\[CapitalDelta]\), \(Y\)]\) \
= \>\""}], "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"Echo", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{
       SubscriptBox["x", "0"], " ", "+", " ", 
       SubscriptBox["O", "X"]}], ",", " ", 
      RowBox[{
       SubscriptBox["y", "0"], " ", "+", " ", 
       RowBox[{
        SubscriptBox["\[CapitalDelta]", "Y"], "[", 
        RowBox[{
         SubscriptBox["O", "X"], ",", 
         SubscriptBox["x", "0"], ",", 
         SubscriptBox["y", "0"], ",", 
         SubscriptBox["L", "0"], ",", 
         SubscriptBox["K", "0"], ",", 
         SubscriptBox["\[Sigma]", "0"], ",", 
         SubscriptBox["\[Tau]", "0"], ",", 
         SubscriptBox["\[Gamma]", "0"]}], "]"}]}]}], "}"}], ",", " ", 
    "\"\<The resulting reserves are: (\!\(\*SubscriptBox[\(x\), \(1\)]\),\!\(\
\*SubscriptBox[\(y\), \(1\)]\)) = \>\""}], "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   SubscriptBox["P", "F"], " ", "=", " ", 
   RowBox[{
    SubscriptBox["P", "X"], "[", 
    RowBox[{
     RowBox[{
      SubscriptBox["x", "0"], " ", "+", " ", 
      SubscriptBox["O", "X"]}], ",", " ", 
     RowBox[{
      SubscriptBox["L", "0"], " ", "+", " ", 
      RowBox[{
       SubscriptBox["\[Delta]", "Liq"], "[", 
       RowBox[{
        SubscriptBox["O", "X"], ",", 
        SubscriptBox["x", "0"], ",", 
        SubscriptBox["L", "0"], ",", 
        SubscriptBox["\[Gamma]", "0"]}], "]"}]}], ",", " ", 
     SubscriptBox["K", "0"], ",", " ", 
     SubscriptBox["\[Sigma]", "0"], ",", " ", 
     SubscriptBox["\[Tau]", "0"]}], "]"}]}], ";", " ", 
  RowBox[{"Echo", "[", 
   RowBox[{
    RowBox[{"N", "[", 
     RowBox[{
      SubscriptBox["P", "F"], ",", "18"}], "]"}], ",", " ", 
    "\"\<The final price of the pool is: P = \>\""}], "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"Echo", "[", 
    RowBox[{
     RowBox[{"FullSimplify", "[", 
      RowBox[{"D", "[", 
       RowBox[{
        RowBox[{
         SubscriptBox["V", "A"], "[", 
         RowBox[{
          RowBox[{
           SubscriptBox["P", "M"], "[", 
           RowBox[{"v", ",", 
            RowBox[{
             SubscriptBox["\[CapitalDelta]", "Y"], "[", 
             RowBox[{
             "v", ",", "x", ",", "y", ",", "L", ",", "K", ",", "\[Sigma]", 
              ",", "\[Tau]", ",", "\[Gamma]"}], "]"}]}], "]"}], ",", " ", "S",
           ",", " ", "v"}], "]"}], ",", "v"}], "]"}], "]"}], ",", " ", 
     "\"\<The equation to do root finding with is: \>\""}], "]"}], ";"}], 
  "\n", 
  RowBox[{"(*", " ", 
   RowBox[{
   "Check", " ", "that", " ", "the", " ", "trading", " ", "function", " ", 
    "is", " ", "invariant", " ", "under", " ", "the", " ", "swap"}], " ", 
   "*)"}]}], "\n", 
 RowBox[{
  RowBox[{"Assert", "[", 
   RowBox[{
    RowBox[{"Abs", "[", 
     RowBox[{"\[CurlyPhi]", "[", 
      RowBox[{
       RowBox[{
        SubscriptBox["x", "0"], " ", "+", " ", 
        SubscriptBox["O", "X"]}], ",", " ", 
       RowBox[{
        SubscriptBox["y", "0"], " ", "+", " ", 
        RowBox[{
         SubscriptBox["\[CapitalDelta]", "Y"], "[", 
         RowBox[{
          SubscriptBox["O", "X"], ",", 
          SubscriptBox["x", "0"], ",", 
          SubscriptBox["y", "0"], ",", 
          SubscriptBox["L", "0"], ",", 
          SubscriptBox["K", "0"], ",", 
          SubscriptBox["\[Sigma]", "0"], ",", 
          SubscriptBox["\[Tau]", "0"], ",", 
          SubscriptBox["\[Gamma]", "0"]}], "]"}]}], ",", " ", 
       RowBox[{
        SubscriptBox["L", "0"], " ", "+", " ", 
        RowBox[{
         SubscriptBox["\[Delta]", "Liq"], "[", 
         RowBox[{
          SubscriptBox["O", "X"], ",", 
          SubscriptBox["x", "0"], ",", 
          SubscriptBox["L", "0"], ",", 
          SubscriptBox["\[Gamma]", "0"]}], "]"}]}], ",", " ", 
       SubscriptBox["K", "0"], ",", 
       SubscriptBox["\[Sigma]", "0"], ",", 
       SubscriptBox["\[Tau]", "0"]}], "]"}], "]"}], " ", "<", " ", 
    SuperscriptBox["10", 
     RowBox[{"-", "15"}]]}], "]"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"checkLower", "[", 
    RowBox[{
    "v_", ",", "x_", ",", "y_", ",", "L_", ",", "S_", ",", "K_", ",", 
     "\[Sigma]_", ",", "\[Tau]_", ",", "\[Gamma]_"}], "]"}], ":=", 
   RowBox[{
    RowBox[{"-", "S"}], "+", 
    FractionBox[
     RowBox[{
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{
        RowBox[{"-", 
         FractionBox[
          RowBox[{
           SuperscriptBox["\[Sigma]", "2"], " ", "\[Tau]"}], "2"]}], "+", 
        RowBox[{
         SqrtBox["2"], " ", "\[Sigma]", " ", 
         SqrtBox["\[Tau]"], " ", 
         RowBox[{"InverseErfc", "[", 
          FractionBox[
           RowBox[{"2", " ", "x", " ", 
            RowBox[{"(", 
             RowBox[{"v", "+", "x"}], ")"}]}], 
           RowBox[{"L", " ", 
            RowBox[{"(", 
             RowBox[{"v", "+", "x", "-", 
              RowBox[{"v", " ", "\[Gamma]"}]}], ")"}]}]], "]"}]}]}]], " ", 
      "K", " ", "x", " ", "\[Gamma]"}], 
     RowBox[{"v", "+", "x", "-", 
      RowBox[{"v", " ", "\[Gamma]"}]}]], "+", 
    FractionBox[
     RowBox[{"K", " ", "L", " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "1"}], "+", "\[Gamma]"}], ")"}], " ", 
      RowBox[{"Erfc", "[", 
       RowBox[{
        FractionBox[
         RowBox[{"\[Sigma]", " ", 
          SqrtBox["\[Tau]"]}], 
         SqrtBox["2"]], "-", 
        RowBox[{"InverseErfc", "[", 
         FractionBox[
          RowBox[{"2", " ", "x", " ", 
           RowBox[{"(", 
            RowBox[{"v", "+", "x"}], ")"}]}], 
          RowBox[{"L", " ", 
           RowBox[{"(", 
            RowBox[{"v", "+", "x", "-", 
             RowBox[{"v", " ", "\[Gamma]"}]}], ")"}]}]], "]"}]}], "]"}]}], 
     RowBox[{"2", " ", "x"}]]}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"numOne", "[", 
    RowBox[{
    "v_", ",", "x_", ",", "y_", ",", "L_", ",", "S_", ",", "K_", ",", 
     "\[Sigma]_", ",", "\[Tau]_", ",", "\[Gamma]_"}], "]"}], ":=", 
   RowBox[{
    SuperscriptBox["\[ExponentialE]", 
     RowBox[{
      RowBox[{"-", 
       FractionBox[
        RowBox[{
         SuperscriptBox["\[Sigma]", "2"], " ", "\[Tau]"}], "2"]}], "+", 
      RowBox[{
       SqrtBox["2"], " ", "\[Sigma]", " ", 
       SqrtBox["\[Tau]"], " ", 
       RowBox[{"InverseErfc", "[", 
        FractionBox[
         RowBox[{"2", " ", "x", " ", 
          RowBox[{"(", 
           RowBox[{"v", "+", "x"}], ")"}]}], 
         RowBox[{"L", " ", 
          RowBox[{"(", 
           RowBox[{"v", "+", "x", "-", 
            RowBox[{"v", " ", "\[Gamma]"}]}], ")"}]}]], "]"}]}]}]], " ", "K", 
    " ", "x", " ", "\[Gamma]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"denomOne", "[", 
    RowBox[{
    "v_", ",", "x_", ",", "y_", ",", "L_", ",", "S_", ",", "K_", ",", 
     "\[Sigma]_", ",", "\[Tau]_", ",", "\[Gamma]_"}], "]"}], ":=", 
   RowBox[{"v", "+", "x", "-", 
    RowBox[{"v", " ", "\[Gamma]"}]}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"numTwo", "[", 
    RowBox[{
    "v_", ",", "x_", ",", "y_", ",", "L_", ",", "S_", ",", "K_", ",", 
     "\[Sigma]_", ",", "\[Tau]_", ",", "\[Gamma]_"}], "]"}], ":=", 
   RowBox[{"K", " ", "L", " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", "1"}], "+", "\[Gamma]"}], ")"}], " ", 
    RowBox[{"Erfc", "[", 
     RowBox[{
      FractionBox[
       RowBox[{"\[Sigma]", " ", 
        SqrtBox["\[Tau]"]}], 
       SqrtBox["2"]], "-", 
      RowBox[{"InverseErfc", "[", 
       FractionBox[
        RowBox[{"2", " ", "x", " ", 
         RowBox[{"(", 
          RowBox[{"v", "+", "x"}], ")"}]}], 
        RowBox[{"L", " ", 
         RowBox[{"(", 
          RowBox[{"v", "+", "x", "-", 
           RowBox[{"v", " ", "\[Gamma]"}]}], ")"}]}]], "]"}]}], "]"}]}]}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"denomTwo", "[", 
    RowBox[{
    "v_", ",", "x_", ",", "y_", ",", "L_", ",", "S_", ",", "K_", ",", 
     "\[Sigma]_", ",", "\[Tau]_", ",", "\[Gamma]_"}], "]"}], ":=", " ", 
   RowBox[{"2", " ", "x"}]}], ";"}], "\n"}], "Code",
 CellChangeTimes->{{3.9113877530057907`*^9, 3.911387759870617*^9}, {
   3.911387791900612*^9, 3.911387835019555*^9}, {3.911389040938622*^9, 
   3.911389111156786*^9}, {3.911389254777446*^9, 3.9113892749054213`*^9}, {
   3.911389313552825*^9, 3.9113896479421587`*^9}, {3.911389684738289*^9, 
   3.911389710567501*^9}, {3.911389764399426*^9, 3.911390120184866*^9}, {
   3.911390172200013*^9, 3.9113903097104073`*^9}, {3.9113903414495697`*^9, 
   3.911390422476118*^9}, {3.9113904688729887`*^9, 3.911390469654806*^9}, {
   3.911390530287198*^9, 3.9113905408414717`*^9}, {3.9113907054945307`*^9, 
   3.91139073520191*^9}, {3.91139090146146*^9, 3.911390906904234*^9}, {
   3.911390946256706*^9, 3.911391064802693*^9}, {3.911391222082168*^9, 
   3.9113912438598137`*^9}, {3.9114061934461813`*^9, 3.911406197897942*^9}, {
   3.911409265595838*^9, 3.911409282641177*^9}, {3.9114093384435053`*^9, 
   3.911409346040655*^9}, {3.911409904932541*^9, 3.911409910625359*^9}, 
   3.911410010310408*^9, {3.9114111732761717`*^9, 3.911411210958044*^9}, {
   3.911411248268466*^9, 3.911411313752475*^9}, {3.911413086350491*^9, 
   3.9114131282498713`*^9}, {3.91141319914225*^9, 3.911413480385025*^9}, {
   3.91675072235946*^9, 3.916750736241868*^9}, {3.916750835562142*^9, 
   3.916750853604291*^9}, {3.916933983207768*^9, 3.916933985584363*^9}, {
   3.916934589170532*^9, 3.916934742188787*^9}},
 CellLabel->
  "In[2284]:=",ExpressionUUID->"6bec84e7-f813-4bb5-9a1e-8a3d86e897da"],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    TagBox[
     {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1: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
k7+qd5r9D9u/IM4=
       "]]},
     Annotation[#, "Charting`Private`Tag$525667#1"]& ]}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{0, 0.2}, {0., 0.004682307433582727}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.911413128904565*^9, {3.9114131997369556`*^9, 3.91141320946073*^9}, {
   3.9114132828210793`*^9, 3.911413326100119*^9}, {3.9114133854487333`*^9, 
   3.9114134807046947`*^9}, 3.911915752112822*^9, 3.91675000297103*^9, 
   3.916750752237563*^9, 3.916750796848069*^9, 3.9167508694874163`*^9, 
   3.916934168859129*^9, 3.916934874933084*^9, 3.916934924989484*^9, 
   3.916935019384742*^9, 3.9169353291114883`*^9},
 CellLabel->
  "Out[2286]=",ExpressionUUID->"efd3ef23-2b20-4bef-b8a4-18081a185f53"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  TagBox["\<\"The optimal amount of X to tender is: \\!\\(\\*SubscriptBox[\\(\
\[CapitalDelta]\\), \\(X\\)]\\) = \"\>",
   "EchoLabel"], "  ", "0.04253761659536122`"}]], "Echo",
 CellChangeTimes->{
  3.916935329207852*^9},ExpressionUUID->"36b798cb-3ab7-4391-98a7-\
d56d240a557b"],

Cell[BoxData[
 RowBox[{
  TagBox["\<\"The amount out is: \\!\\(\\*SubscriptBox[\\(\[CapitalDelta]\\), \
\\(Y\\)]\\) = \"\>",
   "EchoLabel"], "  ", 
  RowBox[{"-", "0.08125001799616612`"}]}]], "Echo",
 CellChangeTimes->{
  3.9169353292154922`*^9},ExpressionUUID->"179a969a-7909-46f0-921b-\
cc738d8d2779"],

Cell[BoxData[
 RowBox[{
  TagBox["\<\"The resulting reserves are: (\\!\\(\\*SubscriptBox[\\(x\\), \
\\(1\\)]\\),\\!\\(\\*SubscriptBox[\\(y\\), \\(1\\)]\\)) = \"\>",
   "EchoLabel"], "  ", 
  RowBox[{"{", 
   RowBox[{"1.0425376165953613`", ",", "0.048460792894327656`"}], 
   "}"}]}]], "Echo",
 CellChangeTimes->{
  3.916935329235276*^9},ExpressionUUID->"c2c6e5c0-81d1-420e-a45d-\
ee12b0913d64"],

Cell[BoxData[
 RowBox[{
  TagBox["\<\"The final price of the pool is: P = \"\>",
   "EchoLabel"], "  ", "1.7999999717534698`"}]], "Echo",
 CellChangeTimes->{
  3.916935329245962*^9},ExpressionUUID->"1ed24628-69dd-49b0-87af-\
126cfe39246c"],

Cell[BoxData[
 RowBox[{
  TagBox["\<\"The equation to do root finding with is: \"\>",
   "EchoLabel"], "  ", 
  TemplateBox[{
    RowBox[{
      RowBox[{"-", "S"}], "+", 
      FractionBox[
       RowBox[{
         SuperscriptBox["\[ExponentialE]", 
          RowBox[{
            RowBox[{"-", 
              FractionBox[
               RowBox[{
                 SuperscriptBox["\[Sigma]", "2"], " ", "\[Tau]"}], "2"]}], 
            "+", 
            RowBox[{
              SqrtBox["2"], " ", "\[Sigma]", " ", 
              SqrtBox["\[Tau]"], " ", 
              RowBox[{"InverseErfc", "[", 
                FractionBox[
                 RowBox[{"2", " ", "x", " ", 
                   RowBox[{"(", 
                    RowBox[{"v", "+", "x"}], ")"}]}], 
                 RowBox[{"L", " ", 
                   RowBox[{"(", 
                    RowBox[{"v", "+", "x", "-", 
                    RowBox[{"v", " ", "\[Gamma]"}]}], ")"}]}]], "]"}]}]}]], 
         " ", "K", " ", "x", " ", "\[Gamma]"}], 
       RowBox[{"v", "+", "x", "-", 
         RowBox[{"v", " ", "\[Gamma]"}]}]], "+", 
      FractionBox[
       RowBox[{"K", " ", "L", " ", 
         RowBox[{"(", 
           RowBox[{
             RowBox[{"-", "1"}], "+", "\[Gamma]"}], ")"}], " ", 
         RowBox[{"Erfc", "[", 
           RowBox[{
             FractionBox[
              RowBox[{"\[Sigma]", " ", 
                SqrtBox["\[Tau]"]}], 
              SqrtBox["2"]], "-", 
             RowBox[{"InverseErfc", "[", 
               FractionBox[
                RowBox[{"2", " ", "x", " ", 
                  RowBox[{"(", 
                    RowBox[{"v", "+", "x"}], ")"}]}], 
                RowBox[{"L", " ", 
                  RowBox[{"(", 
                    RowBox[{"v", "+", "x", "-", 
                    RowBox[{"v", " ", "\[Gamma]"}]}], ")"}]}]], "]"}]}], 
           "]"}]}], 
       RowBox[{"2", " ", "x"}]]}], 
    RowBox[{"0", "\[LessEqual]", 
      FractionBox[
       RowBox[{"x", " ", 
         RowBox[{"(", 
           RowBox[{"v", "+", "x"}], ")"}]}], 
       RowBox[{"L", " ", 
         RowBox[{"(", 
           RowBox[{"v", "+", "x", "-", 
             RowBox[{"v", " ", "\[Gamma]"}]}], ")"}]}]], "\[LessEqual]", 
      "1"}]},
   "ConditionalExpression"]}]], "Echo",
 CellChangeTimes->{
  3.91693532968377*^9},ExpressionUUID->"29d9013d-cb47-4d45-928a-7711222d6069"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Raise External Price:", "Subsection",
 CellChangeTimes->{{3.9114058960816593`*^9, 
  3.911405902149222*^9}},ExpressionUUID->"d44a8cc6-b4f0-4204-b250-\
e68ad4e19d99"],

Cell[CellGroupData[{

Cell[TextData[{
 "Let ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["O", "Y"], TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "daf8aba3-0522-4fdc-b0f6-095c37f44dc7"],
 " be the optimal amount of Y token to tender to get max arbitrage profit."
}], "Subsubsection",
 CellChangeTimes->{{3.9114059041043043`*^9, 
  3.9114059228094807`*^9}},ExpressionUUID->"800e047e-b69c-4509-bda4-\
30799fa9a63e"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   SubscriptBox["S", "ext"], " ", "=", " ", "2.2"}], ";", " ", 
  RowBox[{"Assert", "[", 
   RowBox[{
    SubscriptBox["S", "ext"], " ", ">", " ", 
    SubscriptBox["S", "0"]}], "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   SubscriptBox["Prof", "Raise"], "[", "in_", "]"}], " ", ":=", " ", 
  RowBox[{
   SubscriptBox["V", "A"], "[", 
   RowBox[{
    RowBox[{
     SubscriptBox["P", "M"], "[", 
     RowBox[{
      RowBox[{
       SubscriptBox["\[CapitalDelta]", "X"], "[", 
       RowBox[{"in", ",", 
        SubscriptBox["x", "0"], ",", 
        SubscriptBox["y", "0"], ",", 
        SubscriptBox["L", "0"], ",", 
        SubscriptBox["K", "0"], ",", 
        SubscriptBox["\[Sigma]", "0"], ",", 
        SubscriptBox["\[Tau]", "0"], ",", 
        SubscriptBox["\[Gamma]", "0"]}], "]"}], ",", "in"}], "]"}], ",", " ", 
    
    SubscriptBox["S", "ext"], ",", " ", 
    RowBox[{
     SubscriptBox["\[CapitalDelta]", "X"], "[", 
     RowBox[{"in", ",", 
      SubscriptBox["x", "0"], ",", 
      SubscriptBox["y", "0"], ",", 
      SubscriptBox["L", "0"], ",", 
      SubscriptBox["K", "0"], ",", 
      SubscriptBox["\[Sigma]", "0"], ",", 
      SubscriptBox["\[Tau]", "0"], ",", 
      SubscriptBox["\[Gamma]", "0"]}], "]"}]}], "]"}]}], "\n", 
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{
    SubscriptBox["Prof", "Raise"], "[", "v", "]"}], ",", " ", 
   RowBox[{"{", 
    RowBox[{"v", ",", "0", ",", "0.2"}], "}"}]}], "]"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    SubscriptBox["O", "Y"], " ", "=", " ", 
    RowBox[{"ArgMax", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{
         SubscriptBox["Prof", "Raise"], "[", "y", "]"}], ",", " ", 
        RowBox[{"0", "<=", "y", "<=", 
         RowBox[{
          RowBox[{
           SubscriptBox["K", "0"], 
           SubscriptBox["L", "0"]}], "-", 
          SubscriptBox["y", "0"]}]}]}], "}"}], ",", " ", "y"}], "]"}]}], 
   ";"}], " "}], "\n", 
 RowBox[{
  RowBox[{"Echo", "[", 
   RowBox[{
    SubscriptBox["O", "Y"], ",", " ", 
    "\"\<The optimal amount of Y to tender is: \!\(\*SubscriptBox[\(\
\[CapitalDelta]\), \(Y\)]\) = \>\""}], "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"Echo", "[", 
   RowBox[{
    RowBox[{"N", "[", 
     RowBox[{
      RowBox[{
       SubscriptBox["\[CapitalDelta]", "X"], "[", 
       RowBox[{
        SubscriptBox["O", "Y"], ",", 
        SubscriptBox["x", "0"], ",", 
        SubscriptBox["y", "0"], ",", 
        SubscriptBox["L", "0"], ",", 
        SubscriptBox["K", "0"], ",", 
        SubscriptBox["\[Sigma]", "0"], ",", 
        SubscriptBox["\[Tau]", "0"], ",", 
        SubscriptBox["\[Gamma]", "0"]}], "]"}], ",", "18"}], "]"}], ",", " ", 
    "\"\<The amount out is: \!\(\*SubscriptBox[\(\[CapitalDelta]\), \(X\)]\) \
= \>\""}], "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"Echo", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{
       SubscriptBox["x", "0"], " ", "+", " ", 
       RowBox[{
        SubscriptBox["\[CapitalDelta]", "X"], "[", 
        RowBox[{
         SubscriptBox["O", "Y"], ",", 
         SubscriptBox["x", "0"], ",", 
         SubscriptBox["y", "0"], ",", 
         SubscriptBox["L", "0"], ",", 
         SubscriptBox["K", "0"], ",", 
         SubscriptBox["\[Sigma]", "0"], ",", 
         SubscriptBox["\[Tau]", "0"], ",", 
         SubscriptBox["\[Gamma]", "0"]}], "]"}]}], ",", " ", 
      RowBox[{
       SubscriptBox["y", "0"], " ", "+", " ", 
       SubscriptBox["O", "Y"]}]}], "}"}], ",", " ", 
    "\"\<The resulting reserves are: (\!\(\*SubscriptBox[\(x\), \(1\)]\),\!\(\
\*SubscriptBox[\(y\), \(1\)]\)) = \>\""}], "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   SubscriptBox["P", "F"], " ", "=", " ", 
   RowBox[{
    SubscriptBox["P", "Y"], "[", 
    RowBox[{
     RowBox[{
      SubscriptBox["y", "0"], " ", "+", " ", 
      SubscriptBox["O", "Y"]}], ",", " ", 
     RowBox[{
      SubscriptBox["L", "0"], " ", "+", " ", 
      RowBox[{
       SubscriptBox["\[Delta]", "Liq"], "[", 
       RowBox[{
        SubscriptBox["O", "Y"], ",", 
        SubscriptBox["y", "0"], ",", 
        SubscriptBox["L", "0"], ",", 
        SubscriptBox["\[Gamma]", "0"]}], "]"}]}], ",", " ", 
     SubscriptBox["K", "0"], ",", " ", 
     SubscriptBox["\[Sigma]", "0"], ",", " ", 
     SubscriptBox["\[Tau]", "0"]}], "]"}]}], ";", " ", 
  RowBox[{"Echo", "[", 
   RowBox[{
    RowBox[{"N", "[", 
     RowBox[{
      SubscriptBox["P", "F"], ",", " ", "18"}], "]"}], ",", " ", 
    "\"\<The final price of the pool is: P = \>\""}], "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"Echo", "[", 
    RowBox[{
     RowBox[{"FullSimplify", "[", 
      RowBox[{"D", "[", 
       RowBox[{
        RowBox[{
         SubscriptBox["V", "A"], "[", 
         RowBox[{
          RowBox[{
           SubscriptBox["P", "M"], "[", 
           RowBox[{
            RowBox[{
             SubscriptBox["\[CapitalDelta]", "X"], "[", 
             RowBox[{
             "v", ",", "x", ",", "y", ",", "L", ",", "K", ",", "\[Sigma]", 
              ",", "\[Tau]", ",", "\[Gamma]"}], "]"}], ",", "v"}], "]"}], ",",
           " ", "S", ",", " ", 
          RowBox[{
           SubscriptBox["\[CapitalDelta]", "X"], "[", 
           RowBox[{
           "v", ",", "x", ",", "y", ",", "L", ",", "K", ",", "\[Sigma]", ",", 
            "\[Tau]", ",", "\[Gamma]"}], "]"}]}], "]"}], ",", "v"}], "]"}], 
      "]"}], ",", " ", "\"\<The equation to do root finding with is: \>\""}], 
    "]"}], ";"}], "\n", 
  RowBox[{"(*", " ", 
   RowBox[{
   "Check", " ", "that", " ", "the", " ", "trading", " ", "function", " ", 
    "is", " ", "invariant", " ", "under", " ", "the", " ", "swap"}], " ", 
   "*)"}]}], "\n", 
 RowBox[{"Assert", "[", 
  RowBox[{
   RowBox[{"Abs", "[", 
    RowBox[{"\[CurlyPhi]", "[", 
     RowBox[{
      RowBox[{
       SubscriptBox["x", "0"], " ", "+", " ", 
       RowBox[{
        SubscriptBox["\[CapitalDelta]", "X"], "[", 
        RowBox[{
         SubscriptBox["O", "Y"], ",", 
         SubscriptBox["x", "0"], ",", 
         SubscriptBox["y", "0"], ",", 
         SubscriptBox["L", "0"], ",", 
         SubscriptBox["K", "0"], ",", 
         SubscriptBox["\[Sigma]", "0"], ",", 
         SubscriptBox["\[Tau]", "0"], ",", 
         SubscriptBox["\[Gamma]", "0"]}], "]"}]}], ",", " ", 
      RowBox[{
       SubscriptBox["y", "0"], " ", "+", " ", 
       SubscriptBox["O", "Y"]}], ",", " ", 
      RowBox[{
       SubscriptBox["L", "0"], " ", "+", " ", 
       RowBox[{
        SubscriptBox["\[Delta]", "Liq"], "[", 
        RowBox[{
         SubscriptBox["O", "Y"], ",", 
         SubscriptBox["y", "0"], ",", 
         SubscriptBox["L", "0"], ",", 
         SubscriptBox["\[Gamma]", "0"]}], "]"}]}], ",", " ", 
      SubscriptBox["K", "0"], ",", 
      SubscriptBox["\[Sigma]", "0"], ",", 
      SubscriptBox["\[Tau]", "0"]}], "]"}], "]"}], " ", "<", " ", 
   SuperscriptBox["10", 
    RowBox[{"-", "14"}]]}], "]"}]}], "Code",
 CellChangeTimes->CompressedData["
1:eJwdxU8oQ3EAB/D3noupJanNLIfVVqR2UsRoz5jZgfy5aIqsWY1hS4sUl7H0
1lqp+bd2GFFqK5JsJXI2RSKhXWS1vK30/Gll/L7v8OmjGpvutzEURSkIPKOS
ah1qnk2aAkasTlp68XOivg9fppqG8ej1lvgbHXPjxYJzVjy83D5BtrxLDViy
0dqFGzxWE2YjnYNYmP8ZwXHlnRXbAysOnNsM+nG37TiEo6tVTzgkrL3gRFqf
weO6/W9sPN/9xVMLH9QkufaeusXe4sUDLjt1pZ3kI457xW16utqq4dlgiUI8
y/LZbS3Pmg1zeezZaaHDZGNuicG5oaLrk8ybbtw4Is/7sDDg8+O/FLOO6UOJ
eEfdQQQ/lsbFZebyPRxtrhE/iXroL7LmKsbgnsKZDHsrlHJMcfZGLHCVOvwP
oUzDRw==
  "],ExpressionUUID->"7ca95c98-841f-4a4d-8646-7ee5087c0cbe"],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    TagBox[
     {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1: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
v4q7cUOE6/v044/0sen/AfajOKI=
       "]]},
     Annotation[#, "Charting`Private`Tag$571273#1"]& ]}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{0, 0.2}, {-0.004859349023965807, 0.0012011213985949694`}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.911408195557987*^9, 3.911408316023435*^9, {3.9114083708396797`*^9, 
   3.9114083846313763`*^9}, 3.9114084326549387`*^9, 3.911408469000113*^9, 
   3.911408932881949*^9, {3.911409373307332*^9, 3.911409389518962*^9}, 
   3.911409537230049*^9, {3.9114095872537603`*^9, 3.911409597626522*^9}, 
   3.911409645954843*^9, {3.911409712176511*^9, 3.9114097177243147`*^9}, 
   3.911411391617824*^9, 3.9114135410605183`*^9, {3.911915729507061*^9, 
   3.911915754860406*^9}, 3.916750029455141*^9, 3.916750871564724*^9, {
   3.916934208180336*^9, 3.916934244594982*^9}, 3.916934329037619*^9, 
   3.9169343899640503`*^9, 3.9169344533441687`*^9, 3.916934942974242*^9, 
   3.916935028997834*^9, 3.9169351113010406`*^9, {3.916935353428577*^9, 
   3.9169353971969*^9}, {3.91693561805064*^9, 3.9169356367775507`*^9}},
 CellLabel->
  "Out[2362]=",ExpressionUUID->"b7b8040a-272c-44b3-bc35-f3846b751c4c"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  TagBox["\<\"The optimal amount of Y to tender is: \\!\\(\\*SubscriptBox[\\(\
\[CapitalDelta]\\), \\(Y\\)]\\) = \"\>",
   "EchoLabel"], "  ", "0.055478445741791206`"}]], "Echo",
 CellChangeTimes->{
  3.916935636871546*^9},ExpressionUUID->"85d4f0d0-1ab5-4e38-873f-\
a2be9e4e4a4e"],

Cell[BoxData[
 RowBox[{
  TagBox["\<\"The amount out is: \\!\\(\\*SubscriptBox[\\(\[CapitalDelta]\\), \
\\(X\\)]\\) = \"\>",
   "EchoLabel"], "  ", 
  RowBox[{"-", "0.02576343964923755`"}]}]], "Echo",
 CellChangeTimes->{
  3.916935636879469*^9},ExpressionUUID->"c6fd5407-666a-4795-9e69-\
70a6f1d97104"],

Cell[BoxData[
 RowBox[{
  TagBox["\<\"The resulting reserves are: (\\!\\(\\*SubscriptBox[\\(x\\), \
\\(1\\)]\\),\\!\\(\\*SubscriptBox[\\(y\\), \\(1\\)]\\)) = \"\>",
   "EchoLabel"], "  ", 
  RowBox[{"{", 
   RowBox[{"0.9742365603507624`", ",", "0.18518925663228497`"}], 
   "}"}]}]], "Echo",
 CellChangeTimes->{
  3.916935636900536*^9},ExpressionUUID->"9e59bfa7-6ed9-4c08-a629-\
698d24122c8a"],

Cell[BoxData[
 RowBox[{
  TagBox["\<\"The final price of the pool is: P = \"\>",
   "EchoLabel"], "  ", "2.0872534752270493`"}]], "Echo",
 CellChangeTimes->{
  3.9169356369080477`*^9},ExpressionUUID->"e1f3c8e6-f9a9-4c14-adba-\
526ffb1a5d49"],

Cell[BoxData[
 RowBox[{
  TagBox["\<\"The equation to do root finding with is: \"\>",
   "EchoLabel"], "  ", 
  TemplateBox[{
    RowBox[{
      RowBox[{"-", "1"}], "+", 
      FractionBox[
       RowBox[{
         SuperscriptBox["\[ExponentialE]", 
          RowBox[{
            RowBox[{"-", 
              FractionBox[
               RowBox[{
                 SuperscriptBox["\[Sigma]", "2"], " ", "\[Tau]"}], "2"]}], 
            "+", 
            RowBox[{
              SqrtBox["2"], " ", "\[Sigma]", " ", 
              SqrtBox["\[Tau]"], " ", 
              RowBox[{"InverseErfc", "[", 
                RowBox[{"-", 
                  FractionBox[
                   RowBox[{"2", " ", "y", " ", 
                    RowBox[{"(", 
                    RowBox[{"v", "+", "y"}], ")"}]}], 
                   RowBox[{
                    RowBox[{
                    RowBox[{"-", "K"}], " ", "L", " ", 
                    RowBox[{"(", 
                    RowBox[{"v", "+", "y"}], ")"}]}], "+", 
                    RowBox[{"K", " ", "L", " ", "v", " ", "\[Gamma]"}]}]]}], 
                "]"}]}]}]], " ", "S", " ", "y", " ", "\[Gamma]"}], 
       RowBox[{"K", " ", 
         RowBox[{"(", 
           RowBox[{"v", "+", "y", "-", 
             RowBox[{"v", " ", "\[Gamma]"}]}], ")"}]}]], "+", 
      FractionBox[
       RowBox[{"L", " ", "S", " ", 
         RowBox[{"(", 
           RowBox[{
             RowBox[{"-", "1"}], "+", "\[Gamma]"}], ")"}], " ", 
         RowBox[{"Erfc", "[", 
           RowBox[{
             FractionBox[
              RowBox[{"\[Sigma]", " ", 
                SqrtBox["\[Tau]"]}], 
              SqrtBox["2"]], "-", 
             RowBox[{"InverseErfc", "[", 
               RowBox[{"-", 
                 FractionBox[
                  RowBox[{"2", " ", "y", " ", 
                    RowBox[{"(", 
                    RowBox[{"v", "+", "y"}], ")"}]}], 
                  RowBox[{
                    RowBox[{
                    RowBox[{"-", "K"}], " ", "L", " ", 
                    RowBox[{"(", 
                    RowBox[{"v", "+", "y"}], ")"}]}], "+", 
                    RowBox[{"K", " ", "L", " ", "v", " ", "\[Gamma]"}]}]]}], 
               "]"}]}], "]"}]}], 
       RowBox[{"2", " ", "y"}]]}], 
    RowBox[{"0", "\[LessEqual]", 
      FractionBox[
       RowBox[{"y", " ", 
         RowBox[{"(", 
           RowBox[{"v", "+", "y"}], ")"}]}], 
       RowBox[{"K", " ", "L", " ", 
         RowBox[{"(", 
           RowBox[{"v", "+", "y", "-", 
             RowBox[{"v", " ", "\[Gamma]"}]}], ")"}]}]], "\[LessEqual]", 
      "1"}]},
   "ConditionalExpression"]}]], "Echo",
 CellChangeTimes->{
  3.916935637509555*^9},ExpressionUUID->"edadfdd6-49b8-4101-854f-\
5623688d3c75"]
}, Open  ]],

Cell[BoxData["1.1102230246251565`*^-15"], "Output",
 CellChangeTimes->{
  3.911408195557987*^9, 3.911408316023435*^9, {3.9114083708396797`*^9, 
   3.9114083846313763`*^9}, 3.9114084326549387`*^9, 3.911408469000113*^9, 
   3.911408932881949*^9, {3.911409373307332*^9, 3.911409389518962*^9}, 
   3.911409537230049*^9, {3.9114095872537603`*^9, 3.911409597626522*^9}, 
   3.911409645954843*^9, {3.911409712176511*^9, 3.9114097177243147`*^9}, 
   3.911411391617824*^9, 3.9114135410605183`*^9, {3.911915729507061*^9, 
   3.911915754860406*^9}, 3.916750029455141*^9, 3.916750871564724*^9, {
   3.916934208180336*^9, 3.916934244594982*^9}, 3.916934329037619*^9, 
   3.9169343899640503`*^9, 3.9169344533441687`*^9, 3.916934942974242*^9, 
   3.916935028997834*^9, 3.9169351113010406`*^9, {3.916935353428577*^9, 
   3.9169353971969*^9}, {3.91693561805064*^9, 3.916935637516856*^9}},
 CellLabel->
  "Out[2369]=",ExpressionUUID->"a332ae98-900a-47f4-bf4d-29be445374ce"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Parameter Updates", "Section",
 CellChangeTimes->{{3.9114106614664173`*^9, 
  3.911410663603334*^9}},ExpressionUUID->"b9760121-93f2-4105-bc65-\
e6b3dbe04aec"],

Cell[CellGroupData[{

Cell["\<\
We want to let parameters change, then determine the new L from them.\
\>", "Subsection",
 CellChangeTimes->{{3.9114115124928417`*^9, 
  3.911411520281617*^9}},ExpressionUUID->"bf3ecf5a-6ea2-4f9a-a236-\
2d3956e9c134"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     SubscriptBox["K", "1"], ",", 
     SubscriptBox["\[Sigma]", "1"], ",", 
     SubscriptBox["\[Tau]", "1"]}], "}"}], " ", "=", " ", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      SubscriptBox["K", "0"], " ", "+", " ", 
      FractionBox["1", "10"]}], ",", " ", 
     RowBox[{
      SubscriptBox["\[Sigma]", "0"], " ", "-", " ", 
      FractionBox["1", "20"]}], ",", " ", 
     SubscriptBox["\[Tau]", "0"]}], "}"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   SubscriptBox["L", "1"], " ", "=", " ", 
   RowBox[{"L", " ", "/.", " ", 
    RowBox[{"FindRoot", "[", 
     RowBox[{
      RowBox[{"\[CurlyPhi]", "[", 
       RowBox[{
        SubscriptBox["x", "0"], ",", 
        SubscriptBox["y", "0"], ",", "L", ",", 
        SubscriptBox["K", "1"], ",", 
        SubscriptBox["\[Sigma]", "1"], ",", 
        SubscriptBox["\[Tau]", "1"]}], "]"}], ",", " ", 
      RowBox[{"{", 
       RowBox[{"L", ",", 
        SubscriptBox["L", "0"]}], "}"}]}], "]"}]}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"Echo", "[", 
   RowBox[{
    RowBox[{"N", "[", 
     RowBox[{
      SubscriptBox["L", "0"], ",", "18"}], "]"}], ",", " ", 
    "\"\<The original liquidity was: \!\(\*SubscriptBox[\(L\), \(0\)]\) = \
\>\""}], "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"Echo", "[", 
   RowBox[{
    RowBox[{"N", "[", 
     RowBox[{
      SubscriptBox["L", "1"], ",", "18"}], "]"}], ",", " ", 
    "\"\<The new liquidity after parameter changes is: \!\(\*SubscriptBox[\(L\
\), \(1\)]\) = \>\""}], "]"}], ";"}]}], "Code",
 CellChangeTimes->{{3.911411526467024*^9, 3.911411558889496*^9}, {
  3.911411603270329*^9, 3.911411726104031*^9}, {3.911411854447959*^9, 
  3.911411871785728*^9}, {3.911412038711419*^9, 3.9114121340202703`*^9}, {
  3.911412179397016*^9, 3.91141220168312*^9}, {3.911412234164196*^9, 
  3.9114122397709723`*^9}, {3.911412325036952*^9, 3.9114123356623907`*^9}, {
  3.91141236997156*^9, 3.911412427698132*^9}, {3.911412458150606*^9, 
  3.911412466280922*^9}, {3.9114126475927057`*^9, 3.9114126927861547`*^9}},
 CellLabel->
  "In[477]:=",ExpressionUUID->"88153533-d3ba-42e3-8671-5c87d6eba466"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  TagBox["\<\"The original liquidity was: \\!\\(\\*SubscriptBox[\\(L\\), \\(0\
\\)]\\) = \"\>",
   "EchoLabel"], "  ", 
  "1.07205816303780375296378578465914117862`18."}]], "Echo",
 CellChangeTimes->{
  3.911412693179192*^9},ExpressionUUID->"9c86a598-6ad7-4cdc-b7d3-\
f17754fbb4f8"],

Cell[BoxData[
 RowBox[{
  TagBox["\<\"The new liquidity after parameter changes is: \
\\!\\(\\*SubscriptBox[\\(L\\), \\(1\\)]\\) = \"\>",
   "EchoLabel"], "  ", "1.0633573081332175`"}]], "Echo",
 CellChangeTimes->{
  3.9114126932060432`*^9},ExpressionUUID->"edb1d49d-7246-436e-85d1-\
f3028622cb8d"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]]
},
WindowSize->{1961, 2083},
WindowMargins->{{Automatic, 1482}, {Automatic, 12}},
PrintingCopies->1,
PrintingPageRange->{1, Automatic},
FrontEndVersion->"13.2 for Mac OS X ARM (64-bit) (January 31, 2023)",
StyleDefinitions->FrontEnd`FileName[{$RootDirectory, "Users", "colin", 
   "Documents"}, "DarkMode.nb", CharacterEncoding -> "UTF-8"],
ExpressionUUID->"13daad44-0d0d-4117-a120-aa865447a233"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[422, 15, 185, 3, 194, "Title",ExpressionUUID->"2003d08a-fff7-4f74-8623-7a0823c9cafa"],
Cell[CellGroupData[{
Cell[632, 22, 221, 5, 134, "Section",ExpressionUUID->"514be430-48c5-4dc6-92af-6b1c3a5b8586"],
Cell[CellGroupData[{
Cell[878, 31, 222, 5, 107, "Subsection",ExpressionUUID->"f16f1652-ed41-4414-8c9b-6b6d5d8061ac"],
Cell[1103, 38, 579, 14, 69, "Code",ExpressionUUID->"8255c47c-fa0b-4fdd-8638-752453aca613"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1719, 57, 202, 3, 107, "Subsection",ExpressionUUID->"b3dd161e-0b53-4183-b30c-be7844f26477"],
Cell[1924, 62, 685, 17, 111, "Code",ExpressionUUID->"25d6c1c4-f902-41e0-8746-c63f6b03d94e"]
}, Open  ]],
Cell[CellGroupData[{
Cell[2646, 84, 307, 7, 107, "Subsection",ExpressionUUID->"f601d02f-f91e-4780-a166-a78097a54f48"],
Cell[2956, 93, 1094, 33, 205, "Code",ExpressionUUID->"d5d16a82-3e60-44ff-affc-b50eb9144304"]
}, Open  ]],
Cell[CellGroupData[{
Cell[4087, 131, 296, 7, 107, "Subsection",ExpressionUUID->"009a24ad-ebe5-4d73-bdda-a7839592332a"],
Cell[CellGroupData[{
Cell[4408, 142, 244, 6, 89, "Subsubsection",ExpressionUUID->"3b15f5e3-f420-4095-899a-506c7286cc40"],
Cell[4655, 150, 2313, 63, 244, "Code",ExpressionUUID->"3950a1e9-9c32-45c4-b5ef-404c37d6ef65"]
}, Open  ]],
Cell[CellGroupData[{
Cell[7005, 218, 253, 6, 89, "Subsubsection",ExpressionUUID->"6228385e-cfd2-4bd0-97f4-58c98a5a994e"],
Cell[7261, 226, 1220, 36, 153, "Code",ExpressionUUID->"cdbca2c9-2426-4adf-8516-6c22e3b352b1"]
}, Open  ]],
Cell[CellGroupData[{
Cell[8518, 267, 186, 3, 89, "Subsubsection",ExpressionUUID->"18015876-38da-4fa9-82b7-a417d745ef90"],
Cell[8707, 272, 686, 19, 85, "Code",ExpressionUUID->"a65cb5ec-cdac-40e0-bb49-f3d8157592d9"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[9454, 298, 285, 7, 134, "Section",ExpressionUUID->"da815218-0c74-4720-a5c9-76f45781c5e2"],
Cell[CellGroupData[{
Cell[9764, 309, 305, 7, 107, "Subsection",ExpressionUUID->"d461a415-44ca-4804-8248-6137a0f9449f"],
Cell[CellGroupData[{
Cell[10094, 320, 1762, 42, 134, "Code",ExpressionUUID->"8d262a91-37a1-41fb-b1b3-ae8191b1ccda"],
Cell[CellGroupData[{
Cell[11881, 366, 227, 5, 50, "Echo",ExpressionUUID->"7e39ca2f-4a03-4d6a-a514-bec0dbb5f5b5"],
Cell[12111, 373, 260, 7, 68, "Echo",ExpressionUUID->"647f9f1c-0e9e-4512-8577-e084f4e956ea"],
Cell[12374, 382, 235, 6, 50, "Echo",ExpressionUUID->"a06296d0-b193-4824-88a5-0719735a9618"],
Cell[12612, 390, 244, 6, 50, "Echo",ExpressionUUID->"ab20a4ec-1351-4505-8b2c-1604ede7b464"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[12917, 403, 307, 7, 107, "Subsection",ExpressionUUID->"a6874bc0-590c-4cb3-9d20-f010a014a154"],
Cell[CellGroupData[{
Cell[13249, 414, 878, 25, 111, "Code",ExpressionUUID->"085ca656-cc94-43cf-a8c6-c116e23e4910"],
Cell[CellGroupData[{
Cell[14152, 443, 266, 7, 50, "Echo",ExpressionUUID->"9ef299a3-0641-4f9d-bdef-209087f6eea2"],
Cell[14421, 452, 230, 6, 50, "Echo",ExpressionUUID->"213533fd-ff58-4aa6-88be-5ad188ce7c6b"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[14700, 464, 251, 6, 89, "Subsubsection",ExpressionUUID->"d0f44536-b00f-4974-8c75-dd65dd319645"],
Cell[CellGroupData[{
Cell[14976, 474, 1720, 46, 111, "Code",ExpressionUUID->"57112165-db6f-447c-9713-f9c85c6d4828"],
Cell[CellGroupData[{
Cell[16721, 524, 304, 8, 50, "Echo",ExpressionUUID->"73995023-d219-4765-b252-b4a6c7e173fb"],
Cell[17028, 534, 313, 8, 50, "Echo",ExpressionUUID->"0126b474-dd07-4277-ae9b-4f98ff7a6f9e"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[17402, 549, 224, 4, 89, "Subsubsection",ExpressionUUID->"0dabba71-0908-48dd-b11c-9fc06ac2d79b"],
Cell[CellGroupData[{
Cell[17651, 557, 1320, 37, 111, "Code",ExpressionUUID->"05df5500-1e66-49a9-afd7-256365f8b6dc"],
Cell[18974, 596, 211, 6, 50, "Echo",ExpressionUUID->"8a46f627-49f4-47bc-bc7a-209eac0bb607"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[19234, 608, 284, 6, 89, "Subsubsection",ExpressionUUID->"6c78f375-83c5-40c5-a26f-9dfafb83427b"],
Cell[19521, 616, 1388, 43, 128, "Code",ExpressionUUID->"05cdeb1a-e1b0-40a7-af51-51ab9b75cc2e"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[20970, 666, 155, 3, 134, "Section",ExpressionUUID->"e0558e89-2c12-471a-af64-7b6a1457eb4d"],
Cell[CellGroupData[{
Cell[21150, 673, 290, 7, 107, "Subsection",ExpressionUUID->"2f7348b3-443c-4a22-943e-943b7962999e"],
Cell[21443, 682, 3034, 82, 278, "Code",ExpressionUUID->"0716117c-5381-46be-8b57-f2cefa727879"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[24526, 770, 204, 4, 134, "Section",ExpressionUUID->"65d2b88d-22b2-481a-935c-71bdce9f21f1"],
Cell[24733, 776, 568, 13, 107, "Text",ExpressionUUID->"f20cba79-bbb2-4d1b-9349-a349e8b0b7a4"],
Cell[CellGroupData[{
Cell[25326, 793, 692, 17, 89, "Subsubsection",ExpressionUUID->"d7131855-64d1-451f-98f3-152b4aa9f3a5"],
Cell[26021, 812, 685, 20, 137, "Code",ExpressionUUID->"fadd5b7c-a968-401d-9e42-d6ca30b3a2a6"]
}, Open  ]],
Cell[CellGroupData[{
Cell[26743, 837, 268, 4, 107, "Subsection",ExpressionUUID->"eed8b815-af5d-458f-8082-a956f0fb88b9"],
Cell[CellGroupData[{
Cell[27036, 845, 460, 12, 89, "Subsubsection",ExpressionUUID->"b20dcf41-6dfe-404c-8167-50b070efca5f"],
Cell[CellGroupData[{
Cell[27521, 861, 11754, 324, 907, "Code",ExpressionUUID->"6bec84e7-f813-4bb5-9a1e-8a3d86e897da"],
Cell[39278, 1187, 7221, 138, 471, "Output",ExpressionUUID->"efd3ef23-2b20-4bef-b8a4-18081a185f53"],
Cell[CellGroupData[{
Cell[46524, 1329, 303, 7, 50, "Echo",ExpressionUUID->"36b798cb-3ab7-4391-98a7-d56d240a557b"],
Cell[46830, 1338, 304, 8, 50, "Echo",ExpressionUUID->"179a969a-7909-46f0-921b-cc738d8d2779"],
Cell[47137, 1348, 394, 10, 50, "Echo",ExpressionUUID->"c2c6e5c0-81d1-420e-a45d-ee12b0913d64"],
Cell[47534, 1360, 239, 6, 50, "Echo",ExpressionUUID->"1ed24628-69dd-49b0-87af-126cfe39246c"],
Cell[47776, 1368, 2352, 65, 164, "Echo",ExpressionUUID->"29d9013d-cb47-4d45-928a-7711222d6069"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[50201, 1441, 171, 3, 107, "Subsection",ExpressionUUID->"d44a8cc6-b4f0-4204-b250-e68ad4e19d99"],
Cell[CellGroupData[{
Cell[50397, 1448, 413, 11, 89, "Subsubsection",ExpressionUUID->"800e047e-b69c-4509-bda4-30799fa9a63e"],
Cell[CellGroupData[{
Cell[50835, 1463, 7449, 211, 488, "Code",ExpressionUUID->"7ca95c98-841f-4a4d-8646-7ee5087c0cbe"],
Cell[58287, 1676, 8192, 152, 455, "Output",ExpressionUUID->"b7b8040a-272c-44b3-bc35-f3846b751c4c"],
Cell[CellGroupData[{
Cell[66504, 1832, 304, 7, 50, "Echo",ExpressionUUID->"85d4f0d0-1ab5-4e38-873f-a2be9e4e4a4e"],
Cell[66811, 1841, 302, 8, 50, "Echo",ExpressionUUID->"c6fd5407-666a-4795-9e69-70a6f1d97104"],
Cell[67116, 1851, 393, 10, 50, "Echo",ExpressionUUID->"9e59bfa7-6ed9-4c08-a629-698d24122c8a"],
Cell[67512, 1863, 241, 6, 50, "Echo",ExpressionUUID->"e1f3c8e6-f9a9-4c14-adba-526ffb1a5d49"],
Cell[67756, 1871, 2717, 74, 166, "Echo",ExpressionUUID->"edadfdd6-49b8-4101-854f-5623688d3c75"]
}, Open  ]],
Cell[70488, 1948, 955, 14, 73, "Output",ExpressionUUID->"a332ae98-900a-47f4-bf4d-29be445374ce"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[71516, 1970, 164, 3, 134, "Section",ExpressionUUID->"b9760121-93f2-4105-bc65-e6b3dbe04aec"],
Cell[CellGroupData[{
Cell[71705, 1977, 227, 5, 107, "Subsection",ExpressionUUID->"bf3ecf5a-6ea2-4f9a-a236-2d3956e9c134"],
Cell[CellGroupData[{
Cell[71957, 1986, 2145, 57, 217, "Code",ExpressionUUID->"88153533-d3ba-42e3-8671-5c87d6eba466"],
Cell[CellGroupData[{
Cell[74127, 2047, 306, 8, 50, "Echo",ExpressionUUID->"9c86a598-6ad7-4cdc-b7d3-f17754fbb4f8"],
Cell[74436, 2057, 298, 7, 50, "Echo",ExpressionUUID->"edb1d49d-7246-436e-85d1-f3028622cb8d"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}
]
*)


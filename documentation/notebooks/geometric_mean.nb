(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='WolframDesktop 13.2' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       161,          7]
NotebookDataLength[     98717,       2662]
NotebookOptionsPosition[     89901,       2504]
NotebookOutlinePosition[     90456,       2523]
CellTagsIndexPosition[     90413,       2520]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["Geometric Mean Trading Function Calculations", "Title",
 CellChangeTimes->{{3.911911510375986*^9, 
  3.9119115202551813`*^9}},ExpressionUUID->"464b00f2-edbc-4299-9ebc-\
bbbbadc48e36"],

Cell[CellGroupData[{

Cell["First, we set up the workspace", "Section",
 CellChangeTimes->{{3.9119115280235243`*^9, 
  3.911911535817244*^9}},ExpressionUUID->"7647c4f8-4fe4-4b60-9236-\
0948b016bc8d"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"On", "[", "Assert", "]"}], ";"}], " ", 
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{
    "Asserts", " ", "will", " ", "show", " ", "a", " ", "failure", " ", "if", 
     " ", "they", " ", "fail"}], ",", " ", 
    RowBox[{"and", " ", "nothing", " ", "if", " ", "they", " ", 
     RowBox[{"don", "'"}], "t"}]}], " ", "*)"}]}]], "Code",
 CellChangeTimes->{{3.9119115610079527`*^9, 3.91191157715276*^9}},
 CellLabel->
  "In[429]:=",ExpressionUUID->"90a85ca4-15ef-43a6-a1c9-9ded2b5b4873"],

Cell[CellGroupData[{

Cell["Let\[CloseCurlyQuote]s define the functions for the DFMM.", "Subsection",
 CellChangeTimes->{{3.9119116219881563`*^9, 
  3.911911629097294*^9}},ExpressionUUID->"2a9c67df-985b-48b8-9ff4-\
a81c2ce2cf78"],

Cell[CellGroupData[{

Cell["\<\
Functions to get initial liquidity given a token amount and a price.\
\>", "Subsubsection",
 CellChangeTimes->{{3.911911635661106*^9, 
  3.911911650465029*^9}},ExpressionUUID->"a33110f6-a0d7-448f-8bd8-\
0f79efb458dd"],

Cell[TextData[{
 "We will assume for this whole document that ",
 Cell[BoxData[
  FormBox[
   RowBox[{"w", "=", 
    SubscriptBox["w", "X"]}], TraditionalForm]],ExpressionUUID->
  "477424ec-0032-438b-aee2-6d6a473201b1"],
 " and ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["w", "X"], "=", 
    RowBox[{"1", "-", 
     SubscriptBox["w", "Y"]}]}], TraditionalForm]],ExpressionUUID->
  "e8d1d46e-b904-454c-99fc-b2a495220d0d"],
 " for simplicity"
}], "Text",
 CellChangeTimes->{{3.911911717758877*^9, 3.9119117406902027`*^9}, {
  3.911912327913166*^9, 
  3.911912333780533*^9}},ExpressionUUID->"9a6a4459-0d52-4b73-811d-\
1f5b6974a4d1"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   SubscriptBox["L", "X"], "[", 
   RowBox[{"x_", ",", "S_", ",", "w_"}], "]"}], ":=", 
  RowBox[{"x", 
   SuperscriptBox[
    RowBox[{"(", 
     RowBox[{
      FractionBox[
       RowBox[{"1", "-", "w"}], "w"], "S"}], ")"}], 
    RowBox[{"1", "-", "w"}]]}]}], "\n", 
 RowBox[{
  RowBox[{
   SubscriptBox["L", "Y"], "[", 
   RowBox[{"y_", ",", "S_", ",", "w_"}], "]"}], ":=", 
  RowBox[{"y", 
   SuperscriptBox[
    RowBox[{"(", 
     RowBox[{
      FractionBox["w", 
       RowBox[{"1", "-", "w"}]], 
      FractionBox["1", "S"]}], ")"}], "w"]}]}], "\n", 
 RowBox[{
  RowBox[{"X", "[", 
   RowBox[{"y_", ",", "S_", ",", "w_"}], "]"}], ":=", 
  RowBox[{
   FractionBox["w", 
    RowBox[{"1", "-", "w"}]], 
   FractionBox["1", "S"], "y"}]}], "\n", 
 RowBox[{
  RowBox[{"Y", "[", 
   RowBox[{"x_", ",", "S_", ",", "w_"}], "]"}], ":=", 
  RowBox[{
   FractionBox[
    RowBox[{"1", "-", "w"}], "w"], "S", " ", "x"}]}]}], "Code",
 CellChangeTimes->{{3.911911651706427*^9, 3.9119117138210907`*^9}, {
  3.911911789108042*^9, 3.911911844681787*^9}, {3.911911892241302*^9, 
  3.911911901341136*^9}, {3.91191211289227*^9, 3.911912147909412*^9}, {
  3.911912238579266*^9, 3.911912318380584*^9}, {3.9119123799914913`*^9, 
  3.911912447202764*^9}, {3.9119132862667913`*^9, 3.911913339991631*^9}, {
  3.911913462657144*^9, 3.9119134680216084`*^9}},
 CellLabel->
  "In[430]:=",ExpressionUUID->"7253b091-e52f-418b-a1c8-287d88022e6a"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "This is the price function (we could write this out as ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["P", "X"], TraditionalForm]],ExpressionUUID->
  "2101af69-5077-45c8-b151-8649e17c5f95"],
 " and ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["P", "Y"], TraditionalForm]],ExpressionUUID->
  "b5427b3a-6ad2-4ac3-884c-35e3a778bde4"],
 " if needed)"
}], "Subsubsection",
 CellChangeTimes->{{3.911912491041603*^9, 3.911912499928299*^9}, {
  3.911912547710608*^9, 
  3.911912559677248*^9}},ExpressionUUID->"c79752c3-b802-42fd-9612-\
2c9ed31365e8"],

Cell[BoxData[
 RowBox[{
  RowBox[{"P", "[", 
   RowBox[{"x_", ",", "y_", ",", "w_"}], "]"}], ":=", 
  RowBox[{
   FractionBox["w", 
    RowBox[{"1", "-", "w"}]], 
   FractionBox["y", "x"]}]}]], "Code",
 CellChangeTimes->{{3.911912501940172*^9, 3.911912546049423*^9}, {
  3.911912581390644*^9, 3.911912592262026*^9}},
 CellLabel->
  "In[434]:=",ExpressionUUID->"18a899a0-963a-45c4-a7a0-9fbeda760047"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Then we have the trading function", "Subsubsection",
 CellChangeTimes->{{3.9119125999574957`*^9, 
  3.9119126032787*^9}},ExpressionUUID->"ccc19f67-4212-4173-8f38-591d9c869a78"],

Cell[BoxData[
 RowBox[{
  RowBox[{"\[CurlyPhi]", "[", 
   RowBox[{"x_", ",", "y_", ",", "L_", ",", "w_"}], "]"}], ":=", 
  RowBox[{
   RowBox[{
    SuperscriptBox["x", "w"], 
    SuperscriptBox["y", 
     RowBox[{"1", "-", "w"}]]}], "-", "L"}]}]], "Code",
 CellChangeTimes->{{3.911912609075673*^9, 3.911912634724598*^9}},
 CellLabel->
  "In[435]:=",ExpressionUUID->"25e959b2-4561-4b40-a658-c7cf56341acc"]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
Let\[CloseCurlyQuote]s initialize a pool with some constants and some \
liquidity.\
\>", "Section",
 CellChangeTimes->{{3.9119126417440157`*^9, 
  3.911912651277295*^9}},ExpressionUUID->"8ecbbf5d-d7c2-4753-8dae-\
ccd81d3ed5db"],

Cell[CellGroupData[{

Cell["\<\
First, let\[CloseCurlyQuote]s set the parameters for our curve, including the \
fee parameter \[Gamma]\
\>", "Subsection",
 CellChangeTimes->{{3.91191265333202*^9, 
  3.911912664215665*^9}},ExpressionUUID->"3778290c-33c8-4669-bd57-\
a54efc82c76a"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     SubscriptBox["w", "0"], ",", " ", 
     SubscriptBox["\[Gamma]", "0"]}], "}"}], " ", "=", " ", 
   RowBox[{"{", 
    RowBox[{
     FractionBox["1", "2"], ",", ".997"}], "}"}]}], ";"}], "\n", 
 RowBox[{"Assert", "[", 
  RowBox[{"0", "<=", 
   SubscriptBox["w", "0"], "<=", "1"}], "]"}], "\n", 
 RowBox[{
  RowBox[{"Echo", "[", 
   RowBox[{
    SubscriptBox["w", "0"], ",", " ", 
    "\"\<\!\(\*SubscriptBox[\(w\), \(0\)]\) = \>\""}], "]"}], ";", " ", 
  RowBox[{"Echo", "[", 
   RowBox[{
    SubscriptBox["\[Gamma]", "0"], ",", " ", 
    "\"\<\!\(\*SubscriptBox[\(\[Gamma]\), \(0\)]\) = \>\""}], "]"}], 
  ";"}]}], "Code",
 CellChangeTimes->{{3.9119126661143427`*^9, 3.911912745472548*^9}, {
  3.913751197438278*^9, 3.913751203946327*^9}, {3.916755641867735*^9, 
  3.916755653408431*^9}, {3.916758352270589*^9, 3.916758352990745*^9}, {
  3.916758461710663*^9, 3.916758485200482*^9}, {3.9167630696181583`*^9, 
  3.9167630711333857`*^9}},
 CellLabel->
  "In[557]:=",ExpressionUUID->"a277fd9d-36f8-4eee-9601-665001bbe972"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  TagBox["\<\"\\!\\(\\*SubscriptBox[\\(w\\), \\(0\\)]\\) = \"\>",
   "EchoLabel"], "  ", 
  FractionBox["1", "2"]}]], "Echo",
 CellChangeTimes->{
  3.916763082043717*^9},ExpressionUUID->"df661e36-30a6-48cc-a597-\
bd774623ab42"],

Cell[BoxData[
 RowBox[{
  TagBox["\<\"\\!\\(\\*SubscriptBox[\\(\[Gamma]\\), \\(0\\)]\\) = \"\>",
   "EchoLabel"], "  ", "0.997`"}]], "Echo",
 CellChangeTimes->{
  3.916763082083599*^9},ExpressionUUID->"21007e40-6f01-4035-bf01-\
c7cad4e18f67"]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
Now, let\[CloseCurlyQuote]s set the initial liquidity by providing an amount \
of X and a price S.\
\>", "Subsection",
 CellChangeTimes->{{3.911912758416833*^9, 
  3.911912770460993*^9}},ExpressionUUID->"0e4b0b5f-de16-4a42-af35-\
cb7f8c5a845c"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      SubscriptBox["x", "0"], ",", 
      SubscriptBox["S", "0"]}], "}"}], " ", "=", " ", 
    RowBox[{"{", 
     RowBox[{"1", ",", " ", "1"}], "}"}]}], ";"}], " "}], "\n", 
 RowBox[{
  RowBox[{"Echo", "[", 
   RowBox[{
    SubscriptBox["x", "0"], ",", " ", 
    "\"\<The initial X-reserve balance is: \!\(\*SubscriptBox[\(x\), \(0\)]\) \
= \>\""}], "]"}], ";", " ", 
  RowBox[{"Echo", "[", 
   RowBox[{
    SubscriptBox["S", "0"], ",", " ", 
    "\"\<\!\(\*SubscriptBox[\(S\), \(0\)]\) = \>\""}], "]"}], ";"}]}], "Code",\

 CellChangeTimes->{{3.91375121715248*^9, 3.913751217262199*^9}, {
  3.9167584720251627`*^9, 3.916758473473184*^9}, {3.916763078664383*^9, 
  3.916763079312771*^9}},
 CellLabel->
  "In[560]:=",ExpressionUUID->"fabf4afc-21e6-47a6-b63d-ba788b915987"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  TagBox["\<\"The initial X-reserve balance is: \
\\!\\(\\*SubscriptBox[\\(x\\), \\(0\\)]\\) = \"\>",
   "EchoLabel"], "  ", "1"}]], "Echo",
 CellChangeTimes->{
  3.9167630832909317`*^9},ExpressionUUID->"c143bf05-8e12-4a3a-bc97-\
610417424ae5"],

Cell[BoxData[
 RowBox[{
  TagBox["\<\"\\!\\(\\*SubscriptBox[\\(S\\), \\(0\\)]\\) = \"\>",
   "EchoLabel"], "  ", "1"}]], "Echo",
 CellChangeTimes->{
  3.9167630833243856`*^9},ExpressionUUID->"dc2331f0-98a2-40a7-96bf-\
eea15ea53e75"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
From this, let\[CloseCurlyQuote]s see what we will get for the initial amount \
of Y and L.\
\>", "Subsubsection",
 CellChangeTimes->{{3.911912799855054*^9, 
  3.911912808975162*^9}},ExpressionUUID->"d14796ee-6661-403b-a067-\
2e1c5a6c6211"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      SubscriptBox["L", "0"], ",", " ", 
      SubscriptBox["y", "0"]}], "}"}], " ", "=", " ", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{
       SubscriptBox["L", "X"], "[", 
       RowBox[{
        SubscriptBox["x", "0"], ",", 
        SubscriptBox["S", "0"], ",", 
        SubscriptBox["w", "0"]}], "]"}], ",", " ", 
      RowBox[{"Y", "[", 
       RowBox[{
        SubscriptBox["x", "0"], ",", 
        SubscriptBox["S", "0"], ",", 
        SubscriptBox["w", "0"]}], "]"}]}], "}"}]}], ";"}], " "}], "\n", 
 RowBox[{
  RowBox[{"Echo", "[", 
   RowBox[{
    RowBox[{"N", "[", 
     RowBox[{
      SubscriptBox["L", "0"], ",", " ", "18"}], "]"}], ",", " ", 
    "\"\<The initial liquidity is: \!\(\*SubscriptBox[\(L\), \(0\)]\) = \
\>\""}], "]"}], ";", " ", 
  RowBox[{"Echo", "[", 
   RowBox[{
    RowBox[{"N", "[", 
     RowBox[{
      SubscriptBox["y", "0"], ",", " ", "18"}], "]"}], ",", " ", 
    "\"\<The initial Y-reserve balance is: \!\(\*SubscriptBox[\(y\), \(0\)]\) \
= \>\""}], "]"}], ";"}]}], "Code",
 CellChangeTimes->{{3.911912822320621*^9, 3.911912827848645*^9}, {
  3.911912883452937*^9, 3.9119128835495768`*^9}},
 CellLabel->
  "In[441]:=",ExpressionUUID->"ee083f7c-4161-4e24-8675-42d8b5ffacbe"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  TagBox["\<\"The initial liquidity is: \\!\\(\\*SubscriptBox[\\(L\\), \
\\(0\\)]\\) = \"\>",
   "EchoLabel"], "  ", "1.`18."}]], "Echo",
 CellChangeTimes->{
  3.916758365613244*^9},ExpressionUUID->"3aa24ba0-9c78-4282-89d4-\
c2141eccdf7b"],

Cell[BoxData[
 RowBox[{
  TagBox["\<\"The initial Y-reserve balance is: \
\\!\\(\\*SubscriptBox[\\(y\\), \\(0\\)]\\) = \"\>",
   "EchoLabel"], "  ", "1.`18."}]], "Echo",
 CellChangeTimes->{
  3.9167583656532717`*^9},ExpressionUUID->"27235353-104c-4fcc-a264-\
3f291e61a0d0"]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Let\[CloseCurlyQuote]s check that the prices are correct after the \
fact.", "Subsubsection",
 CellChangeTimes->{{3.911912905875383*^9, 
  3.911912912599833*^9}},ExpressionUUID->"0a95fd1e-5759-46f5-b752-\
6b4f74d4268c"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Assert", "[", 
  RowBox[{
   RowBox[{"P", "[", 
    RowBox[{
     SubscriptBox["x", "0"], ",", 
     SubscriptBox["y", "0"], ",", 
     SubscriptBox["w", "0"]}], "]"}], " ", "==", " ", 
   SubscriptBox["S", "0"]}], "]"}], "\n", 
 RowBox[{
  RowBox[{"Echo", "[", 
   RowBox[{
    RowBox[{"P", "[", 
     RowBox[{
      SubscriptBox["x", "0"], ",", 
      SubscriptBox["y", "0"], ",", 
      SubscriptBox["w", "0"]}], "]"}], ",", " ", 
    "\"\<The initial price is: P = \>\""}], "]"}], ";"}]}], "Code",
 CellChangeTimes->{{3.911912932500325*^9, 3.911912980651959*^9}},
 CellLabel->
  "In[443]:=",ExpressionUUID->"9b2bc5ef-d095-45dd-ac2b-15f02684ac4f"],

Cell[BoxData[
 RowBox[{
  TagBox["\<\"The initial price is: P = \"\>",
   "EchoLabel"], "  ", "1"}]], "Echo",
 CellChangeTimes->{
  3.916758367596223*^9},ExpressionUUID->"e996b162-e3c1-4a32-8fea-\
9b52421710d1"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
Just to verify that we could have done this the other way, and show the flow, \
let\[CloseCurlyQuote]s do that real fast.\
\>", "Subsubsection",
 CellChangeTimes->{{3.911913367118602*^9, 
  3.911913377190076*^9}},ExpressionUUID->"f59add3e-9736-413f-b760-\
d953f4b2de71"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     SubscriptBox["L", 
      SubscriptBox["0", "y"]], ",", " ", 
     SubscriptBox["x", 
      SubscriptBox["0", "y"]]}], "}"}], " ", "=", " ", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      SubscriptBox["L", "Y"], "[", 
      RowBox[{
       SubscriptBox["y", "0"], ",", 
       SubscriptBox["S", "0"], ",", 
       SubscriptBox["w", "0"]}], "]"}], ",", " ", 
     RowBox[{"X", "[", 
      RowBox[{
       SubscriptBox["y", "0"], ",", 
       SubscriptBox["S", "0"], ",", 
       SubscriptBox["w", "0"]}], "]"}]}], "}"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"Assert", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      SubscriptBox["L", 
       SubscriptBox["0", "y"]], ",", 
      SubscriptBox["x", 
       SubscriptBox["0", "y"]]}], "}"}], " ", "==", " ", 
    RowBox[{"{", 
     RowBox[{
      SubscriptBox["L", "0"], ",", 
      SubscriptBox["x", "0"]}], "}"}]}], "]"}], ";"}]}], "Code",
 CellChangeTimes->{{3.911913388555017*^9, 3.911913437262168*^9}, 
   3.9119134968996763`*^9},
 CellLabel->
  "In[445]:=",ExpressionUUID->"5ace6d65-c46d-491e-a7b3-d364ee7f21fb"]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Swapping", "Section",
 CellChangeTimes->{{3.911913506803228*^9, 
  3.911913507641082*^9}},ExpressionUUID->"0aa1aa4a-a222-4348-9a33-\
bdcf246c0ec1"],

Cell[CellGroupData[{

Cell["Now we need to set up the swap logic.", "Subsection",
 CellChangeTimes->{{3.911913509615294*^9, 3.911913519388177*^9}, 
   3.911913612736845*^9},ExpressionUUID->"a09de9d8-3ec0-4d13-8819-\
089fc369fa6e"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   SubscriptBox["\[Delta]", "in"], "[", 
   RowBox[{"\[CapitalDelta]_", ",", "\[Gamma]_"}], "]"}], " ", ":=", " ", 
  RowBox[{
   RowBox[{"(", 
    RowBox[{"1", "-", "\[Gamma]"}], ")"}], "\[CapitalDelta]"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    SubscriptBox["\[Delta]", "LiqX"], "[", 
    RowBox[{
    "\[CapitalDelta]_", ",", "x_", ",", "y_", ",", "w_", ",", "\[Gamma]_"}], 
    "]"}], " ", ":=", " ", 
   RowBox[{
    RowBox[{
     SubscriptBox["\[Delta]", "in"], "[", 
     RowBox[{"\[CapitalDelta]", ",", "\[Gamma]"}], "]"}], 
    SuperscriptBox[
     RowBox[{"(", 
      FractionBox["y", "x"], ")"}], 
     RowBox[{"1", "-", "w"}]]}]}], " "}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    SubscriptBox["\[Delta]", "LiqY"], "[", 
    RowBox[{
    "\[CapitalDelta]_", ",", "x_", ",", "y_", ",", "w_", ",", "\[Gamma]_"}], 
    "]"}], " ", ":=", " ", 
   RowBox[{
    RowBox[{
     SubscriptBox["\[Delta]", "in"], "[", 
     RowBox[{"\[CapitalDelta]", ",", "\[Gamma]"}], "]"}], 
    SuperscriptBox[
     RowBox[{"(", 
      FractionBox["x", "y"], ")"}], "w"]}]}], " ", 
  RowBox[{"(*", " ", 
   RowBox[{"CAN", " ", "MAKE", " ", "THIS", " ", 
    RowBox[{"EASIER", "!"}], " ", 
    RowBox[{"(", 
     RowBox[{"delta_y", " ", "/", " ", "Y"}], " ", ")"}], "*", "L", " ", 
    "which", " ", "is", " ", "the", " ", "same", " ", "as", " ", "the", " ", 
    "LN", " ", "one"}], "*)"}]}], "\n", 
 RowBox[{
  RowBox[{
   SubscriptBox["\[CapitalDelta]", "X"], "[", 
   RowBox[{
   "\[CapitalDelta]_", ",", "x_", ",", "y_", ",", "L_", ",", "w_", ",", 
    "\[Gamma]_"}], "]"}], " ", ":=", " ", 
  RowBox[{
   SuperscriptBox[
    RowBox[{"(", 
     FractionBox[
      RowBox[{"L", "+", 
       RowBox[{
        SubscriptBox["\[Delta]", "LiqY"], "[", 
        RowBox[{
        "\[CapitalDelta]", ",", "x", ",", "y", ",", "w", ",", "\[Gamma]"}], 
        "]"}]}], 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{"y", "+", "\[CapitalDelta]"}], ")"}], 
       RowBox[{"1", "-", "w"}]]], ")"}], 
    FractionBox["1", "w"]], "-", "x"}]}], "\n", 
 RowBox[{
  RowBox[{
   SubscriptBox["\[CapitalDelta]", "Y"], "[", 
   RowBox[{
   "\[CapitalDelta]_", ",", "x_", ",", "y_", ",", "L_", ",", "w_", ",", 
    "\[Gamma]_"}], "]"}], " ", ":=", " ", 
  RowBox[{
   SuperscriptBox[
    RowBox[{"(", 
     FractionBox[
      RowBox[{"L", "+", 
       RowBox[{
        SubscriptBox["\[Delta]", "LiqX"], "[", 
        RowBox[{
        "\[CapitalDelta]", ",", "x", ",", "y", ",", "w", ",", "\[Gamma]"}], 
        "]"}]}], 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{"x", "+", "\[CapitalDelta]"}], ")"}], "w"]], ")"}], 
    FractionBox["1", 
     RowBox[{"1", "-", "w"}]]], "-", "y"}]}]}], "Code",
 CellChangeTimes->{{3.911913527155746*^9, 3.9119135334049797`*^9}, {
   3.911913609956356*^9, 3.911913618625647*^9}, {3.9119138718346777`*^9, 
   3.911914007786831*^9}, {3.911914050154006*^9, 3.911914216429152*^9}, 
   3.911914432257678*^9, {3.911914740377337*^9, 3.911914765079064*^9}, {
   3.9119148556108437`*^9, 3.91191486213737*^9}, {3.91191511989001*^9, 
   3.911915138754508*^9}, {3.911915179500216*^9, 3.911915240429996*^9}, {
   3.9137510946925173`*^9, 3.913751129833908*^9}, {3.913751233158678*^9, 
   3.913751361923436*^9}, {3.913803336011858*^9, 3.9138033400453243`*^9}, {
   3.916750092177647*^9, 3.916750092710829*^9}},
 CellLabel->
  "In[447]:=",ExpressionUUID->"6c9eba4a-50a0-4c93-b07c-3139817809de"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Arbitrage", "Section",
 CellChangeTimes->{{3.9119142472576113`*^9, 
  3.911914255664398*^9}},ExpressionUUID->"2af33c95-75fa-4c2a-987e-\
0c0efa8a1771"],

Cell[TextData[{
 "We will assume there is some external price ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["S", "ext"], TraditionalForm]],ExpressionUUID->
  "8e70a992-445b-45fa-8ff6-75d441c5609b"],
 " that we are given and decide whether or not to perform an arbitrage and, \
if so, to get the optimal trade size. That is, the trade that gives the \
arbitrageur maximal profit."
}], "Text",
 CellChangeTimes->{{3.911914264985302*^9, 
  3.91191432874524*^9}},ExpressionUUID->"72430652-d39e-479e-8fb5-\
8c2568d7c943"],

Cell[CellGroupData[{

Cell[TextData[{
 "We will need the marginal price ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["P", "M"], TraditionalForm]],ExpressionUUID->
  "99042f72-0eb5-4f69-870e-9076c4359cec"],
 " of a swap to compute the optimal arbitrages and a profit calculation ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["V", "A"], TraditionalForm]],ExpressionUUID->
  "8e6910c5-e4d2-40af-b100-2c1e2d5d76b5"]
}], "Subsubsection",
 CellChangeTimes->{{3.911914330823928*^9, 
  3.9119143508811502`*^9}},ExpressionUUID->"a8656622-88c3-4ada-82e5-\
d33556722b56"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   SubscriptBox["P", "M"], "[", 
   RowBox[{"dX_", ",", "dY_"}], "]"}], " ", ":=", " ", 
  FractionBox[
   RowBox[{"-", "dY"}], "dX"]}], "\n", 
 RowBox[{
  RowBox[{
   SubscriptBox["V", "A"], "[", 
   RowBox[{"Pm_", ",", "Pext_", ",", "\[CapitalDelta]_"}], "]"}], " ", ":=", 
  " ", 
  RowBox[{
   RowBox[{"(", 
    RowBox[{"Pm", " ", "-", " ", "Pext"}], ")"}], 
   "\[CapitalDelta]"}]}]}], "Code",
 CellLabel->
  "In[452]:=",ExpressionUUID->"8864b3f3-1b36-4dcd-99b8-7a357f5a3a30"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Lower External Price:", "Subsection",
 CellChangeTimes->{{3.911914361205379*^9, 
  3.9119143742418222`*^9}},ExpressionUUID->"f9739415-ba82-4653-b842-\
33b37c1cd286"],

Cell[CellGroupData[{

Cell[TextData[{
 "We will let ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["O", "X"], TraditionalForm]],ExpressionUUID->
  "02f62581-159d-4887-b98d-1428c55170a9"],
 " be the optimal amount of X token to tender to achieve the maximal \
arbitrage profit."
}], "Subsubsection",
 CellChangeTimes->{{3.911914379462582*^9, 
  3.911914392960053*^9}},ExpressionUUID->"905228e2-efe5-43aa-9780-\
0b193149ea3d"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   SubscriptBox["S", "ext"], " ", "=", " ", "0.8"}], ";", " ", 
  RowBox[{"Assert", "[", 
   RowBox[{
    SubscriptBox["S", "ext"], " ", "<", " ", 
    SubscriptBox["S", "0"]}], "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   SubscriptBox["Prof", "Lower"], "[", "in_", "]"}], " ", ":=", " ", 
  RowBox[{
   SubscriptBox["V", "A"], "[", 
   RowBox[{
    RowBox[{
     SubscriptBox["P", "M"], "[", 
     RowBox[{"in", ",", 
      RowBox[{
       SubscriptBox["\[CapitalDelta]", "Y"], "[", 
       RowBox[{"in", ",", 
        SubscriptBox["x", "0"], ",", 
        SubscriptBox["y", "0"], ",", 
        SubscriptBox["L", "0"], ",", 
        SubscriptBox["w", "0"], ",", 
        SubscriptBox["\[Gamma]", "0"]}], "]"}]}], "]"}], ",", " ", 
    SubscriptBox["S", "ext"], ",", " ", "in"}], "]"}]}], "\n", 
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{
    SubscriptBox["Prof", "Lower"], "[", "v", "]"}], ",", " ", 
   RowBox[{"{", 
    RowBox[{"v", ",", "0", ",", "0.2"}], "}"}]}], "]"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    SubscriptBox["O", "X"], " ", "=", " ", 
    RowBox[{"N", "[", 
     RowBox[{
      RowBox[{"ArgMax", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{
           SubscriptBox["Prof", "Lower"], "[", "x", "]"}], ",", " ", 
          RowBox[{"0", "<=", "x", "<=", "5"}]}], "}"}], ",", " ", "x"}], 
       "]"}], ",", "18"}], "]"}]}], ";"}], " "}], "\n", 
 RowBox[{
  RowBox[{"Echo", "[", 
   RowBox[{
    RowBox[{"N", "[", 
     RowBox[{
      SubscriptBox["O", "X"], ",", "18"}], "]"}], ",", " ", 
    "\"\<The optimal amount of X to tender is: \!\(\*SubscriptBox[\(\
\[CapitalDelta]\), \(X\)]\) = \>\""}], "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"Echo", "[", 
   RowBox[{
    RowBox[{"N", "[", 
     RowBox[{
      RowBox[{
       SubscriptBox["\[CapitalDelta]", "Y"], "[", 
       RowBox[{
        SubscriptBox["O", "X"], ",", 
        SubscriptBox["x", "0"], ",", 
        SubscriptBox["y", "0"], ",", 
        SubscriptBox["L", "0"], ",", 
        SubscriptBox["w", "0"], ",", 
        SubscriptBox["\[Gamma]", "0"]}], "]"}], ",", "18"}], "]"}], ",", " ", 
    "\"\<The amount out is: \!\(\*SubscriptBox[\(\[CapitalDelta]\), \(Y\)]\) \
= \>\""}], "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"Echo", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{
       SubscriptBox["x", "0"], " ", "+", " ", 
       SubscriptBox["O", "X"]}], ",", " ", 
      RowBox[{
       SubscriptBox["y", "0"], " ", "+", " ", 
       RowBox[{
        SubscriptBox["\[CapitalDelta]", "Y"], "[", 
        RowBox[{
         SubscriptBox["O", "X"], ",", 
         SubscriptBox["x", "0"], ",", 
         SubscriptBox["y", "0"], ",", 
         SubscriptBox["L", "0"], ",", 
         SubscriptBox["w", "0"], ",", 
         SubscriptBox["\[Gamma]", "0"]}], "]"}]}]}], "}"}], ",", " ", 
    "\"\<The resulting reserves are: (\!\(\*SubscriptBox[\(x\), \(1\)]\),\!\(\
\*SubscriptBox[\(y\), \(1\)]\)) = \>\""}], "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"Echo", "[", 
   RowBox[{
    RowBox[{
     SubscriptBox["P", "M"], "[", 
     RowBox[{
      SubscriptBox["O", "X"], ",", 
      RowBox[{
       SubscriptBox["\[CapitalDelta]", "Y"], "[", 
       RowBox[{
        SubscriptBox["O", "X"], ",", 
        SubscriptBox["x", "0"], ",", 
        SubscriptBox["y", "0"], ",", 
        SubscriptBox["L", "0"], ",", 
        SubscriptBox["w", "0"], ",", 
        SubscriptBox["\[Gamma]", "0"]}], "]"}]}], "]"}], ",", " ", 
    "\"\<The marginal price paid was: \!\(\*SubscriptBox[\(P\), \(M\)]\) = \>\
\""}], "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   SubscriptBox["P", "F"], " ", "=", " ", 
   RowBox[{"P", "[", 
    RowBox[{
     RowBox[{
      SubscriptBox["x", "0"], " ", "+", " ", 
      SubscriptBox["O", "X"]}], ",", " ", 
     RowBox[{
      SubscriptBox["y", "0"], "+", 
      RowBox[{
       SubscriptBox["\[CapitalDelta]", "Y"], "[", 
       RowBox[{
        SubscriptBox["O", "X"], ",", 
        SubscriptBox["x", "0"], ",", 
        SubscriptBox["y", "0"], ",", 
        SubscriptBox["L", "0"], ",", 
        SubscriptBox["w", "0"], ",", 
        SubscriptBox["\[Gamma]", "0"]}], "]"}]}], ",", " ", 
     SubscriptBox["w", "0"]}], "]"}]}], ";", " ", 
  RowBox[{"Echo", "[", 
   RowBox[{
    RowBox[{"N", "[", 
     RowBox[{
      SubscriptBox["P", "F"], ",", "18"}], "]"}], ",", " ", 
    "\"\<The final price of the pool is: P = \>\""}], "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"diffLower", "[", "v_", "]"}], ":=", 
   RowBox[{"D", "[", 
    RowBox[{
     RowBox[{
      SubscriptBox["V", "A"], "[", 
      RowBox[{
       RowBox[{
        SubscriptBox["P", "M"], "[", 
        RowBox[{"v", ",", 
         RowBox[{
          SubscriptBox["\[CapitalDelta]", "Y"], "[", 
          RowBox[{
          "v", ",", "x", ",", "y", ",", "L", ",", "w", ",", "\[Gamma]"}], 
          "]"}]}], "]"}], ",", " ", "S", ",", " ", "v"}], "]"}], ",", " ", 
     "v"}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"Echo", "[", 
   RowBox[{
    RowBox[{"FullSimplify", "[", 
     RowBox[{"diffLower", "[", "v", "]"}], "]"}], ",", " ", 
    "\"\<The equation to do root finding with is: \>\""}], "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"Echo", "[", 
    RowBox[{
     RowBox[{"diffLower", "[", 
      SubscriptBox["O", "X"], "]"}], ",", " ", 
     "\"\<The value for diffLower[\!\(\*SubscriptBox[\(O\), \(X\)]\)] = \
\>\""}], "]"}], ";"}], "\n", 
  RowBox[{"(*", " ", 
   RowBox[{
   "Check", " ", "that", " ", "the", " ", "trading", " ", "function", " ", 
    "is", " ", "invariant", " ", "under", " ", "the", " ", "swap"}], " ", 
   "*)"}]}], "\n", 
 RowBox[{
  RowBox[{"Assert", "[", 
   RowBox[{
    RowBox[{"Abs", "[", 
     RowBox[{"\[CurlyPhi]", "[", 
      RowBox[{
       RowBox[{
        SubscriptBox["x", "0"], " ", "+", " ", 
        SubscriptBox["O", "X"]}], ",", " ", 
       RowBox[{
        SubscriptBox["y", "0"], " ", "+", " ", 
        RowBox[{
         SubscriptBox["\[CapitalDelta]", "Y"], "[", 
         RowBox[{
          SubscriptBox["O", "X"], ",", 
          SubscriptBox["x", "0"], ",", 
          SubscriptBox["y", "0"], ",", 
          SubscriptBox["L", "0"], ",", 
          SubscriptBox["w", "0"], ",", 
          SubscriptBox["\[Gamma]", "0"]}], "]"}]}], ",", " ", 
       RowBox[{
        SubscriptBox["L", "0"], " ", "+", " ", 
        RowBox[{
         SubscriptBox["\[Delta]", "LiqX"], "[", 
         RowBox[{
          SubscriptBox["O", "X"], ",", 
          SubscriptBox["x", "0"], ",", 
          SubscriptBox["y", "0"], ",", 
          SubscriptBox["w", "0"], ",", 
          SubscriptBox["\[Gamma]", "0"]}], "]"}]}], ",", " ", 
       SubscriptBox["w", "0"]}], "]"}], "]"}], " ", "<", " ", 
    SuperscriptBox["10", 
     RowBox[{"-", "15"}]]}], "]"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"check", "[", 
    RowBox[{
    "v_", ",", "x_", ",", "y_", ",", "L_", ",", "S_", ",", "w_", ",", 
     "\[Gamma]_"}], "]"}], ":=", 
   RowBox[{
    RowBox[{"-", "S"}], "+", 
    FractionBox[
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"L", " ", "w", " ", "x", " ", 
         SuperscriptBox[
          RowBox[{"(", 
           FractionBox["y", "x"], ")"}], "w"]}], "+", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"v", "-", 
           RowBox[{"v", " ", "w"}], "+", "x"}], ")"}], " ", "y", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1"}], "+", "\[Gamma]"}], ")"}]}]}], ")"}], " ", 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{"v", "+", "x"}], ")"}], 
          RowBox[{"-", "w"}]], " ", 
         RowBox[{"(", 
          RowBox[{"L", "-", 
           RowBox[{"v", " ", 
            SuperscriptBox[
             RowBox[{"(", 
              FractionBox["y", "x"], ")"}], 
             RowBox[{"1", "-", "w"}]], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1"}], "+", "\[Gamma]"}], ")"}]}]}], ")"}]}], 
        ")"}], 
       FractionBox["1", 
        RowBox[{"1", "-", "w"}]]]}], 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "1"}], "+", "w"}], ")"}], " ", 
      RowBox[{"(", 
       RowBox[{"v", "+", "x"}], ")"}], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"-", "L"}], " ", "x", " ", 
         SuperscriptBox[
          RowBox[{"(", 
           FractionBox["y", "x"], ")"}], "w"]}], "+", 
        RowBox[{"v", " ", "y", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1"}], "+", "\[Gamma]"}], ")"}]}]}], ")"}]}]]}]}], 
  ";"}], "\n", 
 RowBox[{"check", "[", 
  RowBox[{
   SubscriptBox["O", "X"], ",", 
   SubscriptBox["x", "0"], ",", 
   SubscriptBox["y", "0"], ",", 
   SubscriptBox["L", "0"], ",", 
   SubscriptBox["S", "ext"], ",", 
   SubscriptBox["w", "0"], ",", 
   SubscriptBox["\[Gamma]", "0"]}], "]"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"num", "[", 
    RowBox[{
    "v_", ",", "x_", ",", "y_", ",", "L_", ",", "S_", ",", "w_", ",", 
     "\[Gamma]_"}], "]"}], ":=", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{"L", " ", "w", " ", "x", " ", 
       SuperscriptBox[
        RowBox[{"(", 
         FractionBox["y", "x"], ")"}], "w"]}], "+", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"v", "-", 
         RowBox[{"v", " ", "w"}], "+", "x"}], ")"}], " ", "y", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1"}], "+", "\[Gamma]"}], ")"}]}]}], ")"}], " ", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"v", "+", "x"}], ")"}], 
        RowBox[{"-", "w"}]], " ", 
       RowBox[{"(", 
        RowBox[{"L", "-", 
         RowBox[{"v", " ", 
          SuperscriptBox[
           RowBox[{"(", 
            FractionBox["y", "x"], ")"}], 
           RowBox[{"1", "-", "w"}]], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1"}], "+", "\[Gamma]"}], ")"}]}]}], ")"}]}], ")"}], 
     
     FractionBox["1", 
      RowBox[{"1", "-", "w"}]]]}]}], ";"}], "\n", 
 RowBox[{"num", "[", 
  RowBox[{
   SubscriptBox["O", "X"], ",", 
   SubscriptBox["x", "0"], ",", 
   SubscriptBox["y", "0"], ",", 
   SubscriptBox["L", "0"], ",", 
   SubscriptBox["S", "ext"], ",", 
   SubscriptBox["w", "0"], ",", 
   SubscriptBox["\[Gamma]", "0"]}], "]"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"denom", "[", 
    RowBox[{
    "v_", ",", "x_", ",", "y_", ",", "L_", ",", "S_", ",", "w_", ",", 
     "\[Gamma]_"}], "]"}], ":=", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", "1"}], "+", "w"}], ")"}], " ", 
    RowBox[{"(", 
     RowBox[{"v", "+", "x"}], ")"}], " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       RowBox[{"-", "L"}], " ", "x", " ", 
       SuperscriptBox[
        RowBox[{"(", 
         FractionBox["y", "x"], ")"}], "w"]}], "+", 
      RowBox[{"v", " ", "y", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1"}], "+", "\[Gamma]"}], ")"}]}]}], ")"}]}]}], 
  ";"}], "\n", 
 RowBox[{"denom", "[", 
  RowBox[{
   SubscriptBox["O", "X"], ",", 
   SubscriptBox["x", "0"], ",", 
   SubscriptBox["y", "0"], ",", 
   SubscriptBox["L", "0"], ",", 
   SubscriptBox["S", "ext"], ",", 
   SubscriptBox["w", "0"], ",", 
   SubscriptBox["\[Gamma]", "0"]}], "]"}]}], "Code",
 CellChangeTimes->{{3.911914422645937*^9, 3.911914555345026*^9}, {
   3.911914588999901*^9, 3.91191460090387*^9}, {3.911914673363236*^9, 
   3.911914711242825*^9}, {3.911914790397727*^9, 3.911914808449383*^9}, {
   3.911914911266861*^9, 3.9119149253646173`*^9}, {3.9119153099803047`*^9, 
   3.911915356848312*^9}, {3.911915395365718*^9, 3.911915397737707*^9}, {
   3.911915436220303*^9, 3.911915514601404*^9}, {3.9119162095262337`*^9, 
   3.9119162714050093`*^9}, {3.911930073685734*^9, 3.9119300942727833`*^9}, 
   3.9119301712068167`*^9, {3.916750125402011*^9, 3.916750152368066*^9}, {
   3.9167502280613003`*^9, 3.916750274923284*^9}, {3.916750440937388*^9, 
   3.916750629671793*^9}, {3.916750811189536*^9, 3.9167508209424*^9}, {
   3.916765121182337*^9, 3.916765152172139*^9}, {3.9168278451701593`*^9, 
   3.9168278845934877`*^9}, {3.9168279434370823`*^9, 
   3.9168280951568737`*^9}, {3.9168283033725853`*^9, 3.916828311498711*^9}, {
   3.916828426976664*^9, 3.9168284392552032`*^9}, 3.916828472810547*^9, {
   3.916828513238497*^9, 3.9168287199450808`*^9}, {3.916834831289481*^9, 
   3.916834911904212*^9}},
 CellLabel->
  "In[897]:=",ExpressionUUID->"1a8d1d1f-d7f4-4461-a836-4d4571ea6392"],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    TagBox[
     {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1: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
pfIv8tcy8X815bsR
       "]]},
     Annotation[#, "Charting`Private`Tag$259545#1"]& ]}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{0, 0.2}, {0., 0.010520148912324685`}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.911914527286852*^9, 3.911914556484223*^9}, 
   3.911914602937961*^9, {3.911914661463614*^9, 3.911914711936596*^9}, {
   3.911914754220437*^9, 3.911914809843584*^9}, 3.911914899208049*^9, 
   3.911915250898972*^9, {3.911915316543827*^9, 3.911915323520911*^9}, 
   3.911915360807329*^9, 3.9119154083709097`*^9, {3.911915489070612*^9, 
   3.911915515816107*^9}, 3.9119157954674683`*^9, {3.911916233551607*^9, 
   3.911916271876079*^9}, 3.911930117530851*^9, 3.911930148998386*^9, {
   3.916750105007099*^9, 3.916750152673842*^9}, 3.916750276975298*^9, {
   3.916750502530986*^9, 3.916750515356148*^9}, {3.916750545638653*^9, 
   3.916750605227947*^9}, 3.916750903297716*^9, {3.916755647990355*^9, 
   3.9167556567303333`*^9}, 3.9167583770257893`*^9, {3.916758465880344*^9, 
   3.916758487798298*^9}, 3.9167631028460627`*^9, {3.916765140640353*^9, 
   3.916765152662781*^9}, 3.9168278854749928`*^9, {3.916828046301502*^9, 
   3.916828095819334*^9}, 3.9168283182475452`*^9, 3.91682844008777*^9, 
   3.9168284741286497`*^9, {3.9168285285668287`*^9, 3.9168285374719973`*^9}, {
   3.91682861724232*^9, 3.9168287205299664`*^9}, 3.916834859162019*^9, {
   3.916834900211734*^9, 3.9168349128219757`*^9}},
 CellLabel->
  "Out[899]=",ExpressionUUID->"3378e246-1262-48be-b0b7-94d45b6933b2"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  TagBox["\<\"The optimal amount of X to tender is: \\!\\(\\*SubscriptBox[\\(\
\[CapitalDelta]\\), \\(X\\)]\\) = \"\>",
   "EchoLabel"], "  ", "0.11467362047981638`"}]], "Echo",
 CellChangeTimes->{
  3.916834912844211*^9},ExpressionUUID->"b658ebc2-151c-418c-973c-\
d5e0e4d964d8"],

Cell[BoxData[
 RowBox[{
  TagBox["\<\"The amount out is: \\!\\(\\*SubscriptBox[\\(\[CapitalDelta]\\), \
\\(Y\\)]\\) = \"\>",
   "EchoLabel"], "  ", 
  RowBox[{"-", "0.10225904543925524`"}]}]], "Echo",
 CellChangeTimes->{
  3.916834912851912*^9},ExpressionUUID->"55a812de-1208-4f55-8e9d-\
b4e4514e7630"],

Cell[BoxData[
 RowBox[{
  TagBox["\<\"The resulting reserves are: (\\!\\(\\*SubscriptBox[\\(x\\), \
\\(1\\)]\\),\\!\\(\\*SubscriptBox[\\(y\\), \\(1\\)]\\)) = \"\>",
   "EchoLabel"], "  ", 
  RowBox[{"{", 
   RowBox[{"1.1146736204798164`", ",", "0.8977409545607448`"}], 
   "}"}]}]], "Echo",
 CellChangeTimes->{
  3.916834912876977*^9},ExpressionUUID->"07358447-6489-44b4-8a16-\
082be4915fc9"],

Cell[BoxData[
 RowBox[{
  TagBox["\<\"The marginal price paid was: \\!\\(\\*SubscriptBox[\\(P\\), \
\\(M\\)]\\) = \"\>",
   "EchoLabel"], "  ", "0.8917399224981631`"}]], "Echo",
 CellChangeTimes->{
  3.9168349128862123`*^9},ExpressionUUID->"f3727d26-db14-4c8b-b6a4-\
9d5ec359553d"],

Cell[BoxData[
 RowBox[{
  TagBox["\<\"The final price of the pool is: P = \"\>",
   "EchoLabel"], "  ", "0.8053845879785941`"}]], "Echo",
 CellChangeTimes->{
  3.9168349129089737`*^9},ExpressionUUID->"4b654414-02b2-42a1-918b-\
a9167077c9f9"],

Cell[BoxData[
 RowBox[{
  TagBox["\<\"The equation to do root finding with is: \"\>",
   "EchoLabel"], "  ", 
  RowBox[{
   RowBox[{"-", "S"}], "+", 
   FractionBox[
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{"L", " ", "w", " ", "x", " ", 
        SuperscriptBox[
         RowBox[{"(", 
          FractionBox["y", "x"], ")"}], "w"]}], "+", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"v", "-", 
          RowBox[{"v", " ", "w"}], "+", "x"}], ")"}], " ", "y", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "+", "\[Gamma]"}], ")"}]}]}], ")"}], " ", 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{"v", "+", "x"}], ")"}], 
         RowBox[{"-", "w"}]], " ", 
        RowBox[{"(", 
         RowBox[{"L", "-", 
          RowBox[{"v", " ", 
           SuperscriptBox[
            RowBox[{"(", 
             FractionBox["y", "x"], ")"}], 
            RowBox[{"1", "-", "w"}]], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", "\[Gamma]"}], ")"}]}]}], ")"}]}], ")"}], 
      FractionBox["1", 
       RowBox[{"1", "-", "w"}]]]}], 
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "1"}], "+", "w"}], ")"}], " ", 
     RowBox[{"(", 
      RowBox[{"v", "+", "x"}], ")"}], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        RowBox[{"-", "L"}], " ", "x", " ", 
        SuperscriptBox[
         RowBox[{"(", 
          FractionBox["y", "x"], ")"}], "w"]}], "+", 
       RowBox[{"v", " ", "y", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "+", "\[Gamma]"}], ")"}]}]}], 
      ")"}]}]]}]}]], "Echo",
 CellChangeTimes->{
  3.9168349133239803`*^9},ExpressionUUID->"6311a564-39bd-4cb2-ad64-\
76c78703ff14"]
}, Open  ]],

Cell[BoxData[
 TemplateBox[{
  "General", "ivar", 
   "\"\\!\\(\\*RowBox[{\\\"0.11467362047981638`\\\"}]\\) is not a valid \
variable.\"", 2, 908, 130, 27477114048888041736, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{{3.916828528670616*^9, 3.9168285379869423`*^9}, {
   3.916828617775592*^9, 3.916828721046981*^9}, 3.916834859689291*^9, {
   3.916834900722437*^9, 3.9168349133318243`*^9}},
 CellLabel->
  "During evaluation of \
In[897]:=",ExpressionUUID->"1b75d7f7-93da-4856-868a-f856b1b4da99"],

Cell[BoxData[
 RowBox[{
  TagBox["\<\"The value for diffLower[\\!\\(\\*SubscriptBox[\\(O\\), \\(X\\)]\
\\)] = \"\>",
   "EchoLabel"], "  ", 
  RowBox[{
   SubscriptBox["\[PartialD]", "0.11467362047981638`"], 
   RowBox[{"(", 
    RowBox[{"0.11467362047981638`", " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "S"}], "-", 
       RowBox[{"8.720401394983506`", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "y"}], "+", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"0.11467362047981638`", "\[VeryThinSpace]", "+", "x"}],
                ")"}], 
              RowBox[{"-", "w"}]], " ", 
             RowBox[{"(", 
              RowBox[{"L", "+", 
               RowBox[{"0.11467362047981638`", " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  FractionBox["y", "x"], ")"}], 
                 RowBox[{"1", "-", "w"}]], " ", 
                RowBox[{"(", 
                 RowBox[{"1", "-", "\[Gamma]"}], ")"}]}]}], ")"}]}], ")"}], 
           FractionBox["1", 
            RowBox[{"1", "-", "w"}]]]}], ")"}]}]}], ")"}]}], 
    ")"}]}]}]], "Echo",
 CellChangeTimes->{
  3.916834913392126*^9},ExpressionUUID->"4090aff3-2a47-4993-b974-\
1e47b98cf40c"],

Cell[BoxData[
 RowBox[{"-", "5.336339703454485`*^-9"}]], "Output",
 CellChangeTimes->{{3.911914527286852*^9, 3.911914556484223*^9}, 
   3.911914602937961*^9, {3.911914661463614*^9, 3.911914711936596*^9}, {
   3.911914754220437*^9, 3.911914809843584*^9}, 3.911914899208049*^9, 
   3.911915250898972*^9, {3.911915316543827*^9, 3.911915323520911*^9}, 
   3.911915360807329*^9, 3.9119154083709097`*^9, {3.911915489070612*^9, 
   3.911915515816107*^9}, 3.9119157954674683`*^9, {3.911916233551607*^9, 
   3.911916271876079*^9}, 3.911930117530851*^9, 3.911930148998386*^9, {
   3.916750105007099*^9, 3.916750152673842*^9}, 3.916750276975298*^9, {
   3.916750502530986*^9, 3.916750515356148*^9}, {3.916750545638653*^9, 
   3.916750605227947*^9}, 3.916750903297716*^9, {3.916755647990355*^9, 
   3.9167556567303333`*^9}, 3.9167583770257893`*^9, {3.916758465880344*^9, 
   3.916758487798298*^9}, 3.9167631028460627`*^9, {3.916765140640353*^9, 
   3.916765152662781*^9}, 3.9168278854749928`*^9, {3.916828046301502*^9, 
   3.916828095819334*^9}, 3.9168283182475452`*^9, 3.91682844008777*^9, 
   3.9168284741286497`*^9, {3.9168285285668287`*^9, 3.9168285374719973`*^9}, {
   3.91682861724232*^9, 3.9168287205299664`*^9}, 3.916834859162019*^9, {
   3.916834900211734*^9, 3.916834913423908*^9}},
 CellLabel->
  "Out[911]=",ExpressionUUID->"6d4211e5-999f-4e38-9daa-4e439fc9f4f3"],

Cell[BoxData["0.4460228336084214`"], "Output",
 CellChangeTimes->{{3.911914527286852*^9, 3.911914556484223*^9}, 
   3.911914602937961*^9, {3.911914661463614*^9, 3.911914711936596*^9}, {
   3.911914754220437*^9, 3.911914809843584*^9}, 3.911914899208049*^9, 
   3.911915250898972*^9, {3.911915316543827*^9, 3.911915323520911*^9}, 
   3.911915360807329*^9, 3.9119154083709097`*^9, {3.911915489070612*^9, 
   3.911915515816107*^9}, 3.9119157954674683`*^9, {3.911916233551607*^9, 
   3.911916271876079*^9}, 3.911930117530851*^9, 3.911930148998386*^9, {
   3.916750105007099*^9, 3.916750152673842*^9}, 3.916750276975298*^9, {
   3.916750502530986*^9, 3.916750515356148*^9}, {3.916750545638653*^9, 
   3.916750605227947*^9}, 3.916750903297716*^9, {3.916755647990355*^9, 
   3.9167556567303333`*^9}, 3.9167583770257893`*^9, {3.916758465880344*^9, 
   3.916758487798298*^9}, 3.9167631028460627`*^9, {3.916765140640353*^9, 
   3.916765152662781*^9}, 3.9168278854749928`*^9, {3.916828046301502*^9, 
   3.916828095819334*^9}, 3.9168283182475452`*^9, 3.91682844008777*^9, 
   3.9168284741286497`*^9, {3.9168285285668287`*^9, 3.9168285374719973`*^9}, {
   3.91682861724232*^9, 3.9168287205299664`*^9}, 3.916834859162019*^9, {
   3.916834900211734*^9, 3.9168349134270887`*^9}},
 CellLabel->
  "Out[913]=",ExpressionUUID->"16fa4933-0c43-4c9a-a997-6155cdb07189"],

Cell[BoxData["0.5575285457294789`"], "Output",
 CellChangeTimes->{{3.911914527286852*^9, 3.911914556484223*^9}, 
   3.911914602937961*^9, {3.911914661463614*^9, 3.911914711936596*^9}, {
   3.911914754220437*^9, 3.911914809843584*^9}, 3.911914899208049*^9, 
   3.911915250898972*^9, {3.911915316543827*^9, 3.911915323520911*^9}, 
   3.911915360807329*^9, 3.9119154083709097`*^9, {3.911915489070612*^9, 
   3.911915515816107*^9}, 3.9119157954674683`*^9, {3.911916233551607*^9, 
   3.911916271876079*^9}, 3.911930117530851*^9, 3.911930148998386*^9, {
   3.916750105007099*^9, 3.916750152673842*^9}, 3.916750276975298*^9, {
   3.916750502530986*^9, 3.916750515356148*^9}, {3.916750545638653*^9, 
   3.916750605227947*^9}, 3.916750903297716*^9, {3.916755647990355*^9, 
   3.9167556567303333`*^9}, 3.9167583770257893`*^9, {3.916758465880344*^9, 
   3.916758487798298*^9}, 3.9167631028460627`*^9, {3.916765140640353*^9, 
   3.916765152662781*^9}, 3.9168278854749928`*^9, {3.916828046301502*^9, 
   3.916828095819334*^9}, 3.9168283182475452`*^9, 3.91682844008777*^9, 
   3.9168284741286497`*^9, {3.9168285285668287`*^9, 3.9168285374719973`*^9}, {
   3.91682861724232*^9, 3.9168287205299664`*^9}, 3.916834859162019*^9, {
   3.916834900211734*^9, 3.916834913428172*^9}},
 CellLabel->
  "Out[915]=",ExpressionUUID->"5597452c-82a7-4b41-89e5-d8608aab0653"]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Raise External Price:", "Subsection",
 CellChangeTimes->{{3.9119155525165854`*^9, 
  3.911915558137148*^9}},ExpressionUUID->"f642d822-e56a-4daf-87b3-\
4a7c12588060"],

Cell[CellGroupData[{

Cell[TextData[{
 "Let ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["O", "Y"], TraditionalForm]],ExpressionUUID->
  "eaba641e-4e33-4917-a83f-d6c2123511de"],
 " be the optimal amount of Y token to tender to get max arbitrage profit."
}], "Subsubsection",
 CellChangeTimes->{{3.91191556049035*^9, 
  3.911915572188102*^9}},ExpressionUUID->"53a95604-bde4-406e-8c5f-\
f440053636d6"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   SubscriptBox["S", "ext"], " ", "=", " ", "1.2"}], ";", " ", 
  RowBox[{"Assert", "[", 
   RowBox[{
    SubscriptBox["S", "ext"], " ", ">", " ", 
    SubscriptBox["S", "0"]}], "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   SubscriptBox["Prof", "Raise"], "[", "in_", "]"}], " ", ":=", " ", 
  RowBox[{
   SubscriptBox["V", "A"], "[", 
   RowBox[{
    RowBox[{
     SubscriptBox["P", "M"], "[", 
     RowBox[{
      RowBox[{
       SubscriptBox["\[CapitalDelta]", "X"], "[", 
       RowBox[{"in", ",", 
        SubscriptBox["x", "0"], ",", 
        SubscriptBox["y", "0"], ",", 
        SubscriptBox["L", "0"], ",", 
        SubscriptBox["w", "0"], ",", 
        SubscriptBox["\[Gamma]", "0"]}], "]"}], ",", "in"}], "]"}], ",", " ", 
    
    SubscriptBox["S", "ext"], ",", " ", 
    RowBox[{
     SubscriptBox["\[CapitalDelta]", "X"], "[", 
     RowBox[{"in", ",", 
      SubscriptBox["x", "0"], ",", 
      SubscriptBox["y", "0"], ",", 
      SubscriptBox["L", "0"], ",", 
      SubscriptBox["w", "0"], ",", 
      SubscriptBox["\[Gamma]", "0"]}], "]"}]}], "]"}]}], "\n", 
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{
    SubscriptBox["Prof", "Raise"], "[", "v", "]"}], ",", " ", 
   RowBox[{"{", 
    RowBox[{"v", ",", "0", ",", "0.2"}], "}"}]}], "]"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    SubscriptBox["O", "Y"], " ", "=", " ", 
    RowBox[{"ArgMax", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{
         SubscriptBox["Prof", "Raise"], "[", "y", "]"}], ",", " ", 
        RowBox[{"0", "<=", "y", "<=", "5"}]}], "}"}], ",", " ", "y"}], 
     "]"}]}], ";"}], " "}], "\n", 
 RowBox[{
  RowBox[{"Echo", "[", 
   RowBox[{
    SubscriptBox["O", "Y"], ",", " ", 
    "\"\<The optimal amount of Y to tender is: \!\(\*SubscriptBox[\(\
\[CapitalDelta]\), \(Y\)]\) = \>\""}], "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"Echo", "[", 
   RowBox[{
    RowBox[{"N", "[", 
     RowBox[{
      RowBox[{
       SubscriptBox["\[CapitalDelta]", "X"], "[", 
       RowBox[{
        SubscriptBox["O", "Y"], ",", 
        SubscriptBox["x", "0"], ",", 
        SubscriptBox["y", "0"], ",", 
        SubscriptBox["L", "0"], ",", 
        SubscriptBox["w", "0"], ",", 
        SubscriptBox["\[Gamma]", "0"]}], "]"}], ",", "18"}], "]"}], ",", " ", 
    "\"\<The amount out is: \!\(\*SubscriptBox[\(\[CapitalDelta]\), \(X\)]\) \
= \>\""}], "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"Echo", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{
       SubscriptBox["x", "0"], " ", "+", " ", 
       RowBox[{
        SubscriptBox["\[CapitalDelta]", "X"], "[", 
        RowBox[{
         SubscriptBox["O", "Y"], ",", 
         SubscriptBox["x", "0"], ",", 
         SubscriptBox["y", "0"], ",", 
         SubscriptBox["L", "0"], ",", 
         SubscriptBox["w", "0"], ",", 
         SubscriptBox["\[Gamma]", "0"]}], "]"}]}], ",", " ", 
      RowBox[{
       SubscriptBox["y", "0"], " ", "+", " ", 
       SubscriptBox["O", "Y"]}]}], "}"}], ",", " ", 
    "\"\<The resulting reserves are: (\!\(\*SubscriptBox[\(x\), \(1\)]\),\!\(\
\*SubscriptBox[\(y\), \(1\)]\)) = \>\""}], "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"Echo", "[", 
   RowBox[{
    RowBox[{
     SubscriptBox["P", "M"], "[", 
     RowBox[{
      RowBox[{
       SubscriptBox["\[CapitalDelta]", "X"], "[", 
       RowBox[{
        SubscriptBox["O", "Y"], ",", 
        SubscriptBox["x", "0"], ",", 
        SubscriptBox["y", "0"], ",", 
        SubscriptBox["L", "0"], ",", 
        SubscriptBox["w", "0"], ",", 
        SubscriptBox["\[Gamma]", "0"]}], "]"}], ",", 
      SubscriptBox["O", "Y"]}], "]"}], ",", " ", 
    "\"\<The marginal price paid was: \!\(\*SubscriptBox[\(P\), \(M\)]\) = \>\
\""}], "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   SubscriptBox["P", "F"], " ", "=", " ", 
   RowBox[{"P", "[", 
    RowBox[{
     RowBox[{
      SubscriptBox["x", "0"], " ", "+", " ", 
      RowBox[{
       SubscriptBox["\[CapitalDelta]", "X"], "[", 
       RowBox[{
        SubscriptBox["O", "Y"], ",", 
        SubscriptBox["x", "0"], ",", 
        SubscriptBox["y", "0"], ",", 
        SubscriptBox["L", "0"], ",", 
        SubscriptBox["w", "0"], ",", 
        SubscriptBox["\[Gamma]", "0"]}], "]"}]}], ",", " ", 
     RowBox[{
      SubscriptBox["y", "0"], "+", 
      SubscriptBox["O", "Y"]}], ",", " ", 
     SubscriptBox["w", "0"]}], "]"}]}], ";", " ", 
  RowBox[{"Echo", "[", 
   RowBox[{
    RowBox[{"N", "[", 
     RowBox[{
      SubscriptBox["P", "F"], ",", "18"}], "]"}], ",", " ", 
    "\"\<The final price of the pool is: P = \>\""}], "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"diffRaise", "[", "v_", "]"}], ":=", 
   RowBox[{"D", "[", 
    RowBox[{
     RowBox[{
      SubscriptBox["V", "A"], "[", 
      RowBox[{
       RowBox[{
        SubscriptBox["P", "M"], "[", 
        RowBox[{
         RowBox[{
          SubscriptBox["\[CapitalDelta]", "X"], "[", 
          RowBox[{
          "v", ",", "x", ",", "y", ",", "L", ",", "w", ",", "\[Gamma]"}], 
          "]"}], ",", "v"}], "]"}], ",", " ", "S", ",", " ", 
       RowBox[{
        SubscriptBox["\[CapitalDelta]", "X"], "[", 
        RowBox[{
        "v", ",", "x", ",", "y", ",", "L", ",", "w", ",", "\[Gamma]"}], 
        "]"}]}], "]"}], ",", "v"}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"Echo", "[", 
    RowBox[{
     RowBox[{"FullSimplify", "[", 
      RowBox[{"diffRaise", "[", "v", "]"}], "]"}], ",", " ", 
     "\"\<The equation to do root finding with is: \>\""}], "]"}], ";"}], 
  "\n", 
  RowBox[{"(*", " ", 
   RowBox[{
   "Check", " ", "that", " ", "the", " ", "trading", " ", "function", " ", 
    "is", " ", "invariant", " ", "under", " ", "the", " ", "swap"}], " ", 
   "*)"}]}], "\n", 
 RowBox[{"Assert", "[", 
  RowBox[{
   RowBox[{"Abs", "[", 
    RowBox[{"\[CurlyPhi]", "[", 
     RowBox[{
      RowBox[{
       SubscriptBox["x", "0"], " ", "+", " ", 
       RowBox[{
        SubscriptBox["\[CapitalDelta]", "X"], "[", 
        RowBox[{
         SubscriptBox["O", "Y"], ",", 
         SubscriptBox["x", "0"], ",", 
         SubscriptBox["y", "0"], ",", 
         SubscriptBox["L", "0"], ",", 
         SubscriptBox["w", "0"], ",", 
         SubscriptBox["\[Gamma]", "0"]}], "]"}]}], ",", " ", 
      RowBox[{
       SubscriptBox["y", "0"], " ", "+", " ", 
       SubscriptBox["O", "Y"]}], ",", " ", 
      RowBox[{
       SubscriptBox["L", "0"], " ", "+", " ", 
       RowBox[{
        SubscriptBox["\[Delta]", "LiqX"], "[", 
        RowBox[{
         SubscriptBox["O", "Y"], ",", 
         SubscriptBox["x", "0"], ",", 
         SubscriptBox["y", "0"], ",", 
         SubscriptBox["w", "0"], ",", 
         SubscriptBox["\[Gamma]", "0"]}], "]"}]}], ",", " ", 
      SubscriptBox["w", "0"]}], "]"}], "]"}], " ", "<", " ", 
   SuperscriptBox["10", 
    RowBox[{"-", "15"}]]}], "]"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"checkRaise", "[", 
    RowBox[{
    "v_", ",", "x_", ",", "y_", ",", "L_", ",", "S_", ",", "w_", ",", 
     "\[Gamma]_"}], "]"}], ":=", " ", 
   FractionBox[
    RowBox[{
     RowBox[{"w", " ", 
      RowBox[{"(", 
       RowBox[{"v", "+", "y"}], ")"}], " ", 
      RowBox[{"(", 
       RowBox[{"L", "-", 
        RowBox[{"v", " ", 
         SuperscriptBox[
          RowBox[{"(", 
           FractionBox["x", "y"], ")"}], "w"], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1"}], "+", "\[Gamma]"}], ")"}]}]}], ")"}]}], "+", 
     RowBox[{"S", " ", 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{"v", "+", "y"}], ")"}], 
          RowBox[{
           RowBox[{"-", "1"}], "+", "w"}]], " ", 
         RowBox[{"(", 
          RowBox[{"L", "-", 
           RowBox[{"v", " ", 
            SuperscriptBox[
             RowBox[{"(", 
              FractionBox["x", "y"], ")"}], "w"], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1"}], "+", "\[Gamma]"}], ")"}]}]}], ")"}]}], 
        ")"}], 
       FractionBox["1", "w"]], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"L", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1"}], "+", "w"}], ")"}]}], "-", 
        RowBox[{
         SuperscriptBox[
          RowBox[{"(", 
           FractionBox["x", "y"], ")"}], "w"], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"v", " ", "w"}], "+", "y"}], ")"}], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1"}], "+", "\[Gamma]"}], ")"}]}]}], ")"}]}]}], 
    RowBox[{"w", " ", 
     RowBox[{"(", 
      RowBox[{"v", "+", "y"}], ")"}], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "L"}], "+", 
       RowBox[{"v", " ", 
        SuperscriptBox[
         RowBox[{"(", 
          FractionBox["x", "y"], ")"}], "w"], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "+", "\[Gamma]"}], ")"}]}]}], ")"}]}]]}], 
  ";"}], "\n", 
 RowBox[{"checkRaise", "[", 
  RowBox[{
   SubscriptBox["O", "Y"], ",", 
   SubscriptBox["x", "0"], ",", 
   SubscriptBox["y", "0"], ",", 
   SubscriptBox["L", "0"], ",", 
   SubscriptBox["S", "ext"], ",", 
   SubscriptBox["w", "0"], ",", 
   SubscriptBox["\[Gamma]", "0"]}], "]"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"numRaise", "[", 
    RowBox[{
    "v_", ",", "x_", ",", "y_", ",", "L_", ",", "S_", ",", "w_", ",", 
     "\[Gamma]_"}], "]"}], ":=", " ", 
   RowBox[{
    RowBox[{"w", " ", 
     RowBox[{"(", 
      RowBox[{"v", "+", "y"}], ")"}], " ", 
     RowBox[{"(", 
      RowBox[{"L", "-", 
       RowBox[{"v", " ", 
        SuperscriptBox[
         RowBox[{"(", 
          FractionBox["x", "y"], ")"}], "w"], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "+", "\[Gamma]"}], ")"}]}]}], ")"}]}], "+", 
    RowBox[{"S", " ", 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{"v", "+", "y"}], ")"}], 
         RowBox[{
          RowBox[{"-", "1"}], "+", "w"}]], " ", 
        RowBox[{"(", 
         RowBox[{"L", "-", 
          RowBox[{"v", " ", 
           SuperscriptBox[
            RowBox[{"(", 
             FractionBox["x", "y"], ")"}], "w"], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", "\[Gamma]"}], ")"}]}]}], ")"}]}], ")"}], 
      FractionBox["1", "w"]], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"L", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "+", "w"}], ")"}]}], "-", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"(", 
          FractionBox["x", "y"], ")"}], "w"], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"v", " ", "w"}], "+", "y"}], ")"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "+", "\[Gamma]"}], ")"}]}]}], ")"}]}]}]}], 
  ";"}], "\n", 
 RowBox[{"numRaise", "[", 
  RowBox[{
   SubscriptBox["O", "Y"], ",", 
   SubscriptBox["x", "0"], ",", 
   SubscriptBox["y", "0"], ",", 
   SubscriptBox["L", "0"], ",", 
   SubscriptBox["S", "ext"], ",", 
   SubscriptBox["w", "0"], ",", 
   SubscriptBox["\[Gamma]", "0"]}], "]"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"denomRaise", "[", 
    RowBox[{
    "v_", ",", "x_", ",", "y_", ",", "L_", ",", "S_", ",", "w_", ",", 
     "\[Gamma]_"}], "]"}], ":=", " ", 
   RowBox[{"w", " ", 
    RowBox[{"(", 
     RowBox[{"v", "+", "y"}], ")"}], " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", "L"}], "+", 
      RowBox[{"v", " ", 
       SuperscriptBox[
        RowBox[{"(", 
         FractionBox["x", "y"], ")"}], "w"], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1"}], "+", "\[Gamma]"}], ")"}]}]}], ")"}]}]}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{"denomRaise", "[", 
   RowBox[{
    SubscriptBox["O", "Y"], ",", 
    SubscriptBox["x", "0"], ",", 
    SubscriptBox["y", "0"], ",", 
    SubscriptBox["L", "0"], ",", 
    SubscriptBox["S", "ext"], ",", 
    SubscriptBox["w", "0"], ",", 
    SubscriptBox["\[Gamma]", "0"]}], "]"}], "\n", "\n"}], "\n", 
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{
     RowBox[{"diffLower", "[", "v_", "]"}], ":=", 
     RowBox[{"D", "[", 
      RowBox[{
       RowBox[{
        SubscriptBox["V", "A"], "[", 
        RowBox[{
         RowBox[{
          SubscriptBox["P", "M"], "[", 
          RowBox[{"v", ",", 
           RowBox[{
            SubscriptBox["\[CapitalDelta]", "Y"], "[", 
            RowBox[{
            "v", ",", "x", ",", "y", ",", "L", ",", "w", ",", "\[Gamma]"}], 
            "]"}]}], "]"}], ",", " ", "S", ",", " ", "v"}], "]"}], ",", " ", 
       "v"}], "]"}]}], ";", "\n", 
    RowBox[{"Echo", "[", 
     RowBox[{
      RowBox[{"FullSimplify", "[", 
       RowBox[{"diffLower", "[", "v", "]"}], "]"}], ",", " ", 
      "\"\<The equation to do root finding with is: \>\""}], "]"}], ";"}], 
   "*)"}]}]}], "Code",
 CellChangeTimes->{{3.9119155810024433`*^9, 3.911915714750348*^9}, {
  3.911915807605125*^9, 3.911915819329722*^9}, {3.911915898415785*^9, 
  3.911915941457925*^9}, {3.911916261572165*^9, 3.911916269164069*^9}, {
  3.91675082748877*^9, 3.916750830647251*^9}, {3.916755607350933*^9, 
  3.9167556247681293`*^9}, {3.916837467954167*^9, 3.9168375040876637`*^9}, {
  3.916840006139349*^9, 3.9168400489569063`*^9}, {3.916840492337409*^9, 
  3.916840493344598*^9}, {3.916840601017839*^9, 3.916840601114201*^9}, {
  3.916840694014946*^9, 3.9168407027692823`*^9}, {3.9168408412216988`*^9, 
  3.9168408415590687`*^9}, {3.9168408892290707`*^9, 3.916840890247583*^9}, {
  3.91684092129491*^9, 3.9168409213471937`*^9}, {3.916841127738755*^9, 
  3.916841200194109*^9}, {3.916841307935339*^9, 3.916841324012429*^9}, {
  3.916841359362419*^9, 
  3.916841415683488*^9}},ExpressionUUID->"7a15b2a1-0c7b-4080-9632-\
dc9021620919"],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    TagBox[
     {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1:eJwV13s4VGsbBnDpIJFUchgJpUjIoZSS26G0QwghJKSEKCUisRaJ5BNRQtJG
UsnZrJlBUzkOKmVHxKSi2iqVSgeq791/zfW7rpm11jPzPvfzjKrPAYc9oiIi
IlJTRET+e80f4YbeS9AzObWx7fOEuIRJgOiC25Uy0ljgWHl6Zfsbk3H5yPIz
Mip4/fDSndTW7ybGhSUa0TK6WCSMjC9smIln/zb5HpExxbqhwye+cuVRkfxI
NETGHqHZSwLKijTAEj55GCzjBc/Yt13rqbW4P8ODGyRzEOoG5iHpBn9B5vnW
Hf+7Q0HDacaj6cmuCNHPeTl9OBHBqiUelU3eWBR6+v2DA6ko9nE+2P5sL36G
eP8pacjAzquZsXdl96N0uZR8zr0LGPhYfMzd6SBcpnVZKujkQswrRTz4yiHk
JMrJytRfhpvV/+Y/vBuKb291JdVu5WPL/zS33M4Mw30v59lRI4VIVtZkewYd
RZr+67T+T0UwXVD0T9WfCBzMbQiZ/qEYVutKwsv3HUObQolHmNwNvIqR0nNr
j4L05z9tH1g3IdRITv/4+TgeDuzaWLGlDGK/VFoCpWPQUx6frMSUo2Xd6TKX
KRQuCFdXLKwtR2+G5pIfohTcJF89VuSXo0auJDtrGgWhn6Uyq6Ucd9/R53rE
KAwtEquU7SnH+MfS2s1SFD4mJ/bM+VaOf2Pqu76zKMzyP71YdE0FvBZPpS4Z
UDBWTeO8YlfAQa1Z76c3BRU/lyDj2gp0mCx4H7mbwvSbSovP8iuQOywZ99OX
wv21109vaK3A2TRtjPtR8LJv8MzorYCCE+/HsyAKJ2K+TjOfrECfts6JqAgK
HQM7tuWaVWLVerZd3xkKO7MXjzh2VELhiXLrCi6FSfaHsl2dlVhT6z5gy6OQ
3VV3JPCfSqTaS4wfrKXQLekyJa6/EpXaY3qV9RTsY07LV76rBP1U9rHGXQoW
vl8spWdXYcpQ5KNXbRSW6zQXdGytgpNF7LcrTym0WqX7P9lWhSuChtRr/RT2
+nmtHNpehdLCfp2SAQr5l3/yJnZWwa3wdkTpMwoL5698pBlchRm5CdZXX1KY
8z1T5FRKFURn3Xrj/5bC1zv+Ozc9qEJ93hwXg58U2OM2VVe7qvCQjrimOUHh
6Apd8VlPqiBmealbZZLCz4zx6vuDVfDcZX9H/DcFkX1xkq5jVVBcIuy9N4XG
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
       "]]},
     Annotation[#, "Charting`Private`Tag$297692#1"]& ]}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{0, 0.2}, {-0.0012003592993060877`, 0.008492244754738969}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.9168413278484707`*^9, {3.916841360364497*^9, 3.916841380221867*^9}},
 CellLabel->
  "Out[1111]=",ExpressionUUID->"8c8eaac3-b303-4dbe-bb18-c4132b4bdc74"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  TagBox["\<\"The optimal amount of Y to tender is: \\!\\(\\*SubscriptBox[\\(\
\[CapitalDelta]\\), \\(Y\\)]\\) = \"\>",
   "EchoLabel"], "  ", "0.0921528843667211`"}]], "Echo",
 CellChangeTimes->{
  3.916841380260771*^9},ExpressionUUID->"40c87e12-505d-4678-84e9-\
7c3a7826233a"],

Cell[BoxData[
 RowBox[{
  TagBox["\<\"The amount out is: \\!\\(\\*SubscriptBox[\\(\[CapitalDelta]\\), \
\\(X\\)]\\) = \"\>",
   "EchoLabel"], "  ", 
  RowBox[{"-", "0.08387094146095486`"}]}]], "Echo",
 CellChangeTimes->{
  3.916841380270298*^9},ExpressionUUID->"65c94115-d1b2-4693-841e-\
01425f99fbf4"],

Cell[BoxData[
 RowBox[{
  TagBox["\<\"The resulting reserves are: (\\!\\(\\*SubscriptBox[\\(x\\), \
\\(1\\)]\\),\\!\\(\\*SubscriptBox[\\(y\\), \\(1\\)]\\)) = \"\>",
   "EchoLabel"], "  ", 
  RowBox[{"{", 
   RowBox[{"0.9161290585390451`", ",", "1.0921528843667212`"}], 
   "}"}]}]], "Echo",
 CellChangeTimes->{
  3.91684138029513*^9},ExpressionUUID->"e4c8309b-e859-4a0d-8e2b-fd1d2dfdc598"],

Cell[BoxData[
 RowBox[{
  TagBox["\<\"The marginal price paid was: \\!\\(\\*SubscriptBox[\\(P\\), \
\\(M\\)]\\) = \"\>",
   "EchoLabel"], "  ", "1.0987462732801418`"}]], "Echo",
 CellChangeTimes->{
  3.916841380314311*^9},ExpressionUUID->"ea912911-e079-46a9-b53a-\
a1111d0ae9f8"],

Cell[BoxData[
 RowBox[{
  TagBox["\<\"The final price of the pool is: P = \"\>",
   "EchoLabel"], "  ", "1.1921386776098795`"}]], "Echo",
 CellChangeTimes->{
  3.9168413803348083`*^9},ExpressionUUID->"768c85a7-8050-45eb-b72f-\
401e3a9fd00d"],

Cell[BoxData[
 RowBox[{
  TagBox["\<\"The equation to do root finding with is: \"\>",
   "EchoLabel"], "  ", 
  FractionBox[
   RowBox[{
    RowBox[{"w", " ", 
     RowBox[{"(", 
      RowBox[{"v", "+", "y"}], ")"}], " ", 
     RowBox[{"(", 
      RowBox[{"L", "-", 
       RowBox[{"v", " ", 
        SuperscriptBox[
         RowBox[{"(", 
          FractionBox["x", "y"], ")"}], "w"], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "+", "\[Gamma]"}], ")"}]}]}], ")"}]}], "+", 
    RowBox[{"S", " ", 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{"v", "+", "y"}], ")"}], 
         RowBox[{
          RowBox[{"-", "1"}], "+", "w"}]], " ", 
        RowBox[{"(", 
         RowBox[{"L", "-", 
          RowBox[{"v", " ", 
           SuperscriptBox[
            RowBox[{"(", 
             FractionBox["x", "y"], ")"}], "w"], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", "\[Gamma]"}], ")"}]}]}], ")"}]}], ")"}], 
      FractionBox["1", "w"]], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"L", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "+", "w"}], ")"}]}], "-", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"(", 
          FractionBox["x", "y"], ")"}], "w"], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"v", " ", "w"}], "+", "y"}], ")"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "+", "\[Gamma]"}], ")"}]}]}], ")"}]}]}], 
   RowBox[{"w", " ", 
    RowBox[{"(", 
     RowBox[{"v", "+", "y"}], ")"}], " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", "L"}], "+", 
      RowBox[{"v", " ", 
       SuperscriptBox[
        RowBox[{"(", 
         FractionBox["x", "y"], ")"}], "w"], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1"}], "+", "\[Gamma]"}], ")"}]}]}], ")"}]}]]}]], "Echo",\

 CellChangeTimes->{
  3.9168413807056103`*^9},ExpressionUUID->"4339e2f2-c40f-497d-905d-\
305ad32a4bd1"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"-", "4.232163287864434`*^-9"}]], "Output",
 CellChangeTimes->{
  3.9168413278484707`*^9, {3.916841360364497*^9, 3.9168413807127943`*^9}},
 CellLabel->
  "Out[1122]=",ExpressionUUID->"9b105458-57d5-4e81-9e41-6999e010b196"],

Cell[BoxData[
 RowBox[{"-", "0.0045779883405341615`"}]], "Output",
 CellChangeTimes->{
  3.9168413278484707`*^9, {3.916841360364497*^9, 3.9168413807153788`*^9}},
 CellLabel->
  "Out[1124]=",ExpressionUUID->"40453d5f-56ee-42ce-b709-da2b9394ca5f"],

Cell[BoxData[
 RowBox[{"-", "0.003842346488824888`"}]], "Output",
 CellChangeTimes->{
  3.9168413278484707`*^9, {3.916841360364497*^9, 3.916841380716536*^9}},
 CellLabel->
  "Out[1126]=",ExpressionUUID->"9160fa4f-d88f-4993-bcf5-1ac92b68b4cf"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.916841206392075*^9, 
  3.9168412063947144`*^9}},ExpressionUUID->"47eda75f-6e59-4bb3-b93b-\
e17f0413e24d"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  TagBox["\<\"The optimal amount of Y to tender is: \\!\\(\\*SubscriptBox[\\(\
\[CapitalDelta]\\), \\(Y\\)]\\) = \"\>",
   "EchoLabel"], "  ", "0.0921528843667211`"}]], "Echo",
 CellChangeTimes->{
  3.916841204817339*^9},ExpressionUUID->"0c93eeac-b6d3-4d90-90c1-\
0986d9efdcd7"],

Cell[BoxData[
 RowBox[{
  TagBox["\<\"The amount out is: \\!\\(\\*SubscriptBox[\\(\[CapitalDelta]\\), \
\\(X\\)]\\) = \"\>",
   "EchoLabel"], "  ", 
  RowBox[{"-", "0.08387094146095486`"}]}]], "Echo",
 CellChangeTimes->{
  3.916841204826468*^9},ExpressionUUID->"f25e479d-6129-470b-be52-\
35a6392271dd"],

Cell[BoxData[
 RowBox[{
  TagBox["\<\"The resulting reserves are: (\\!\\(\\*SubscriptBox[\\(x\\), \
\\(1\\)]\\),\\!\\(\\*SubscriptBox[\\(y\\), \\(1\\)]\\)) = \"\>",
   "EchoLabel"], "  ", 
  RowBox[{"{", 
   RowBox[{"0.9161290585390451`", ",", "1.0921528843667212`"}], 
   "}"}]}]], "Echo",
 CellChangeTimes->{
  3.916841204847031*^9},ExpressionUUID->"bba99e56-6377-450d-a3df-\
9f5513918f4c"],

Cell[BoxData[
 RowBox[{
  TagBox["\<\"The marginal price paid was: \\!\\(\\*SubscriptBox[\\(P\\), \
\\(M\\)]\\) = \"\>",
   "EchoLabel"], "  ", "1.0987462732801418`"}]], "Echo",
 CellChangeTimes->{
  3.916841204857058*^9},ExpressionUUID->"cff63817-a30e-40e1-a58b-\
2ab99e19ea08"],

Cell[BoxData[
 RowBox[{
  TagBox["\<\"The final price of the pool is: P = \"\>",
   "EchoLabel"], "  ", "1.1921386776098795`"}]], "Echo",
 CellChangeTimes->{
  3.916841204873465*^9},ExpressionUUID->"c5534489-4c26-4d9d-8d26-\
4a9efe00ab2b"],

Cell[BoxData[
 RowBox[{
  TagBox["\<\"The equation to do root finding with is: \"\>",
   "EchoLabel"], "  ", 
  RowBox[{
   RowBox[{"-", "S"}], "+", 
   FractionBox[
    RowBox[{
     RowBox[{"2", " ", "v", " ", "w", " ", "x", " ", 
      RowBox[{"(", 
       RowBox[{"v", "+", "y"}], ")"}], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "L"}], "+", 
        RowBox[{"v", " ", 
         SuperscriptBox[
          RowBox[{"(", 
           FractionBox["x", "y"], ")"}], "w"], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1"}], "+", "\[Gamma]"}], ")"}]}]}], ")"}]}], "+", 
     RowBox[{"v", " ", 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{"v", "+", "y"}], ")"}], 
          RowBox[{
           RowBox[{"-", "1"}], "+", "w"}]], " ", 
         RowBox[{"(", 
          RowBox[{"L", "-", 
           RowBox[{"v", " ", 
            SuperscriptBox[
             RowBox[{"(", 
              FractionBox["x", "y"], ")"}], "w"], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1"}], "+", "\[Gamma]"}], ")"}]}]}], ")"}]}], 
        ")"}], 
       FractionBox["1", "w"]], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"L", " ", 
         RowBox[{"(", 
          RowBox[{"v", "+", 
           RowBox[{"v", " ", "w"}], "+", 
           RowBox[{"2", " ", "w", " ", "y"}]}], ")"}]}], "-", 
        RowBox[{"v", " ", 
         SuperscriptBox[
          RowBox[{"(", 
           FractionBox["x", "y"], ")"}], "w"], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"v", " ", "w"}], "-", "y", "+", 
           RowBox[{"2", " ", "w", " ", "y"}]}], ")"}], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1"}], "+", "\[Gamma]"}], ")"}]}]}], ")"}]}]}], 
    RowBox[{"w", " ", 
     RowBox[{"(", 
      RowBox[{"v", "+", "y"}], ")"}], " ", 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{"x", "-", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{"v", "+", "y"}], ")"}], 
            RowBox[{
             RowBox[{"-", "1"}], "+", "w"}]], " ", 
           RowBox[{"(", 
            RowBox[{"L", "-", 
             RowBox[{"v", " ", 
              SuperscriptBox[
               RowBox[{"(", 
                FractionBox["x", "y"], ")"}], "w"], " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "1"}], "+", "\[Gamma]"}], ")"}]}]}], ")"}]}], 
          ")"}], 
         FractionBox["1", "w"]]}], ")"}], "2"], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "L"}], "+", 
       RowBox[{"v", " ", 
        SuperscriptBox[
         RowBox[{"(", 
          FractionBox["x", "y"], ")"}], "w"], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "+", "\[Gamma]"}], ")"}]}]}], 
      ")"}]}]]}]}]], "Echo",
 CellChangeTimes->{
  3.916841206154892*^9},ExpressionUUID->"23ab9812-20f2-499f-bd8c-\
0dc9b2e100d0"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"-", "0.008543593387837278`"}]], "Output",
 CellChangeTimes->{3.916841206161566*^9},
 CellLabel->
  "Out[1068]=",ExpressionUUID->"ffde089b-4b9f-4133-b41d-286b30edce98"],

Cell[BoxData[
 RowBox[{"-", "0.0045779883405341615`"}]], "Output",
 CellChangeTimes->{3.916841206164144*^9},
 CellLabel->
  "Out[1070]=",ExpressionUUID->"3f198504-881d-4e9c-8724-d46e28bb7779"],

Cell[BoxData[
 RowBox[{"-", "0.003842346488824888`"}]], "Output",
 CellChangeTimes->{3.9168412061652737`*^9},
 CellLabel->
  "Out[1072]=",ExpressionUUID->"82b1f62d-27d0-462b-961b-b6a3b101c2d1"]
}, Open  ]],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    TagBox[
     {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1:eJwV13s4VGsbBnDpIJFUchgJpUjIoZSS26G0QwghJKSEKCUisRaJ5BNRQtJG
UsnZrJlBUzkOKmVHxKSi2iqVSgeq791/zfW7rpm11jPzPvfzjKrPAYc9oiIi
IlJTRET+e80f4YbeS9AzObWx7fOEuIRJgOiC25Uy0ljgWHl6Zfsbk3H5yPIz
Mip4/fDSndTW7ybGhSUa0TK6WCSMjC9smIln/zb5HpExxbqhwye+cuVRkfxI
NETGHqHZSwLKijTAEj55GCzjBc/Yt13rqbW4P8ODGyRzEOoG5iHpBn9B5vnW
Hf+7Q0HDacaj6cmuCNHPeTl9OBHBqiUelU3eWBR6+v2DA6ko9nE+2P5sL36G
eP8pacjAzquZsXdl96N0uZR8zr0LGPhYfMzd6SBcpnVZKujkQswrRTz4yiHk
JMrJytRfhpvV/+Y/vBuKb291JdVu5WPL/zS33M4Mw30v59lRI4VIVtZkewYd
RZr+67T+T0UwXVD0T9WfCBzMbQiZ/qEYVutKwsv3HUObQolHmNwNvIqR0nNr
j4L05z9tH1g3IdRITv/4+TgeDuzaWLGlDGK/VFoCpWPQUx6frMSUo2Xd6TKX
KRQuCFdXLKwtR2+G5pIfohTcJF89VuSXo0auJDtrGgWhn6Uyq6Ucd9/R53rE
KAwtEquU7SnH+MfS2s1SFD4mJ/bM+VaOf2Pqu76zKMzyP71YdE0FvBZPpS4Z
UDBWTeO8YlfAQa1Z76c3BRU/lyDj2gp0mCx4H7mbwvSbSovP8iuQOywZ99OX
wv21109vaK3A2TRtjPtR8LJv8MzorYCCE+/HsyAKJ2K+TjOfrECfts6JqAgK
HQM7tuWaVWLVerZd3xkKO7MXjzh2VELhiXLrCi6FSfaHsl2dlVhT6z5gy6OQ
3VV3JPCfSqTaS4wfrKXQLekyJa6/EpXaY3qV9RTsY07LV76rBP1U9rHGXQoW
vl8spWdXYcpQ5KNXbRSW6zQXdGytgpNF7LcrTym0WqX7P9lWhSuChtRr/RT2
+nmtHNpehdLCfp2SAQr5l3/yJnZWwa3wdkTpMwoL5698pBlchRm5CdZXX1KY
8z1T5FRKFURn3Xrj/5bC1zv+Ozc9qEJ93hwXg58U2OM2VVe7qvCQjrimOUHh
6Apd8VlPqiBmealbZZLCz4zx6vuDVfDcZX9H/DcFkX1xkq5jVVBcIuy9N4XG
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
       "]]},
     Annotation[#, "Charting`Private`Tag$281369#1"]& ]}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{0, 0.2}, {-0.0012003592993060877`, 0.008492244754738969}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Input",
 CellChangeTimes->{3.916841201429151*^9},
 CellLabel->
  "In[1054]:=",ExpressionUUID->"d7e12e04-83ce-4931-b123-3da7d9fa0126"],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.9168412032056227`*^9, 
  3.9168412032083273`*^9}},ExpressionUUID->"20a015d7-663a-496b-8919-\
b7f3fa82dea5"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]]
},
WindowSize->{3675, 2083},
WindowMargins->{{Automatic, 12}, {Automatic, 12}},
PrintingCopies->1,
PrintingPageRange->{1, Automatic},
FrontEndVersion->"13.2 for Mac OS X ARM (64-bit) (January 31, 2023)",
StyleDefinitions->FrontEnd`FileName[{$RootDirectory, "Users", "colin", 
   "Documents"}, "DarkMode.nb", CharacterEncoding -> "UTF-8"],
ExpressionUUID->"3103eac2-d17e-4a34-a2c9-7112f09edadf"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[583, 22, 189, 3, 194, "Title",ExpressionUUID->"464b00f2-edbc-4299-9ebc-bbbbadc48e36"],
Cell[CellGroupData[{
Cell[797, 29, 177, 3, 134, "Section",ExpressionUUID->"7647c4f8-4fe4-4b60-9236-0948b016bc8d"],
Cell[977, 34, 531, 13, 69, "Code",ExpressionUUID->"90a85ca4-15ef-43a6-a1c9-9ded2b5b4873"],
Cell[CellGroupData[{
Cell[1533, 51, 207, 3, 107, "Subsection",ExpressionUUID->"2a9c67df-985b-48b8-9ff4-a81c2ce2cf78"],
Cell[CellGroupData[{
Cell[1765, 58, 227, 5, 89, "Subsubsection",ExpressionUUID->"a33110f6-a0d7-448f-8bd8-0f79efb458dd"],
Cell[1995, 65, 644, 20, 66, "Text",ExpressionUUID->"9a6a4459-0d52-4b73-811d-1f5b6974a4d1"],
Cell[2642, 87, 1453, 43, 293, "Code",ExpressionUUID->"7253b091-e52f-418b-a1c8-287d88022e6a"]
}, Open  ]],
Cell[CellGroupData[{
Cell[4132, 135, 558, 16, 89, "Subsubsection",ExpressionUUID->"c79752c3-b802-42fd-9612-2c9ed31365e8"],
Cell[4693, 153, 399, 11, 85, "Code",ExpressionUUID->"18a899a0-963a-45c4-a7a0-9fbeda760047"]
}, Open  ]],
Cell[CellGroupData[{
Cell[5129, 169, 182, 2, 89, "Subsubsection",ExpressionUUID->"ccc19f67-4212-4173-8f38-591d9c869a78"],
Cell[5314, 173, 404, 11, 69, "Code",ExpressionUUID->"25e959b2-4561-4b40-a658-c7cf56341acc"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[5779, 191, 237, 6, 134, "Section",ExpressionUUID->"8ecbbf5d-d7c2-4753-8dae-ccd81d3ed5db"],
Cell[CellGroupData[{
Cell[6041, 201, 257, 6, 107, "Subsection",ExpressionUUID->"3778290c-33c8-4669-bd57-a54efc82c76a"],
Cell[CellGroupData[{
Cell[6323, 211, 1089, 29, 175, "Code",ExpressionUUID->"a277fd9d-36f8-4eee-9601-665001bbe972"],
Cell[CellGroupData[{
Cell[7437, 244, 251, 7, 68, "Echo",ExpressionUUID->"df661e36-30a6-48cc-a597-bd774623ab42"],
Cell[7691, 253, 242, 6, 50, "Echo",ExpressionUUID->"21007e40-6f01-4035-bf01-c7cad4e18f67"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[7994, 266, 254, 6, 107, "Subsection",ExpressionUUID->"0e4b0b5f-de16-4a42-af35-cb7f8c5a845c"],
Cell[CellGroupData[{
Cell[8273, 276, 851, 25, 111, "Code",ExpressionUUID->"fabf4afc-21e6-47a6-b63d-ba788b915987"],
Cell[CellGroupData[{
Cell[9149, 305, 268, 7, 50, "Echo",ExpressionUUID->"c143bf05-8e12-4a3a-bc97-610417424ae5"],
Cell[9420, 314, 232, 6, 50, "Echo",ExpressionUUID->"dc2331f0-98a2-40a7-96bf-eea15ea53e75"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[9701, 326, 250, 6, 89, "Subsubsection",ExpressionUUID->"d14796ee-6661-403b-a067-2e1c5a6c6211"],
Cell[CellGroupData[{
Cell[9976, 336, 1297, 39, 111, "Code",ExpressionUUID->"ee083f7c-4161-4e24-8675-42d8b5ffacbe"],
Cell[CellGroupData[{
Cell[11298, 379, 263, 7, 50, "Echo",ExpressionUUID->"3aa24ba0-9c78-4282-89d4-c2141eccdf7b"],
Cell[11564, 388, 273, 7, 50, "Echo",ExpressionUUID->"27235353-104c-4fcc-a264-3f291e61a0d0"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[11898, 402, 225, 4, 89, "Subsubsection",ExpressionUUID->"0a95fd1e-5759-46f5-b752-6b4f74d4268c"],
Cell[CellGroupData[{
Cell[12148, 410, 675, 20, 111, "Code",ExpressionUUID->"9b2bc5ef-d095-45dd-ac2b-15f02684ac4f"],
Cell[12826, 432, 211, 6, 50, "Echo",ExpressionUUID->"e996b162-e3c1-4a32-8fea-9b52421710d1"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[13086, 444, 280, 6, 89, "Subsubsection",ExpressionUUID->"f59add3e-9736-413f-b760-d953f4b2de71"],
Cell[13369, 452, 1145, 38, 128, "Code",ExpressionUUID->"5ace6d65-c46d-491e-a7b3-d364ee7f21fb"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[14575, 497, 153, 3, 134, "Section",ExpressionUUID->"0aa1aa4a-a222-4348-9a33-bdcf246c0ec1"],
Cell[CellGroupData[{
Cell[14753, 504, 208, 3, 107, "Subsection",ExpressionUUID->"a09de9d8-3ec0-4d13-8819-089fc369fa6e"],
Cell[14964, 509, 3454, 96, 377, "Code",ExpressionUUID->"6c9eba4a-50a0-4c93-b07c-3139817809de"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[18467, 611, 156, 3, 134, "Section",ExpressionUUID->"2af33c95-75fa-4c2a-987e-0c0efa8a1771"],
Cell[18626, 616, 515, 12, 67, "Text",ExpressionUUID->"72430652-d39e-479e-8fb5-8c2568d7c943"],
Cell[CellGroupData[{
Cell[19166, 632, 537, 14, 89, "Subsubsection",ExpressionUUID->"a8656622-88c3-4ada-82e5-d33556722b56"],
Cell[19706, 648, 517, 17, 137, "Code",ExpressionUUID->"8864b3f3-1b36-4dcd-99b8-7a357f5a3a30"]
}, Open  ]],
Cell[CellGroupData[{
Cell[20260, 670, 171, 3, 107, "Subsection",ExpressionUUID->"f9739415-ba82-4653-b842-33b37c1cd286"],
Cell[CellGroupData[{
Cell[20456, 677, 400, 11, 89, "Subsubsection",ExpressionUUID->"905228e2-efe5-43aa-9780-0b193149ea3d"],
Cell[CellGroupData[{
Cell[20881, 692, 12537, 373, 1021, "Code",ExpressionUUID->"1a8d1d1f-d7f4-4461-a836-4d4571ea6392"],
Cell[33421, 1067, 8187, 151, 449, "Output",ExpressionUUID->"3378e246-1262-48be-b0b7-94d45b6933b2"],
Cell[CellGroupData[{
Cell[41633, 1222, 303, 7, 50, "Echo",ExpressionUUID->"b658ebc2-151c-418c-973c-d5e0e4d964d8"],
Cell[41939, 1231, 302, 8, 50, "Echo",ExpressionUUID->"55a812de-1208-4f55-8e9d-b4e4514e7630"],
Cell[42244, 1241, 392, 10, 50, "Echo",ExpressionUUID->"07358447-6489-44b4-8a16-082be4915fc9"],
Cell[42639, 1253, 281, 7, 50, "Echo",ExpressionUUID->"f3727d26-db14-4c8b-b6a4-9d5ec359553d"],
Cell[42923, 1262, 241, 6, 50, "Echo",ExpressionUUID->"4b654414-02b2-42a1-918b-a9167077c9f9"],
Cell[43167, 1270, 1825, 60, 108, "Echo",ExpressionUUID->"6311a564-39bd-4cb2-ad64-76c78703ff14"]
}, Open  ]],
Cell[45007, 1333, 522, 11, 56, "Message",ExpressionUUID->"1b75d7f7-93da-4856-868a-f856b1b4da99"],
Cell[45532, 1346, 1324, 38, 75, "Echo",ExpressionUUID->"4090aff3-2a47-4993-b974-1e47b98cf40c"],
Cell[46859, 1386, 1363, 20, 51, "Output",ExpressionUUID->"6d4211e5-999f-4e38-9daa-4e439fc9f4f3"],
Cell[48225, 1408, 1345, 19, 51, "Output",ExpressionUUID->"16fa4933-0c43-4c9a-a997-6155cdb07189"],
Cell[49573, 1429, 1343, 19, 51, "Output",ExpressionUUID->"5597452c-82a7-4b41-89e5-d8608aab0653"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[50977, 1455, 171, 3, 107, "Subsection",ExpressionUUID->"f642d822-e56a-4daf-87b3-4a7c12588060"],
Cell[CellGroupData[{
Cell[51173, 1462, 377, 10, 89, "Subsubsection",ExpressionUUID->"53a95604-bde4-406e-8c5f-f440053636d6"],
Cell[CellGroupData[{
Cell[51575, 1476, 13774, 417, 1149, "Code",ExpressionUUID->"7a15b2a1-0c7b-4080-9632-dc9021620919"],
Cell[65352, 1895, 7296, 139, 462, "Output",ExpressionUUID->"8c8eaac3-b303-4dbe-bb18-c4132b4bdc74"],
Cell[CellGroupData[{
Cell[72673, 2038, 302, 7, 50, "Echo",ExpressionUUID->"40c87e12-505d-4678-84e9-7c3a7826233a"],
Cell[72978, 2047, 302, 8, 50, "Echo",ExpressionUUID->"65c94115-d1b2-4693-841e-01425f99fbf4"],
Cell[73283, 2057, 389, 9, 50, "Echo",ExpressionUUID->"e4c8309b-e859-4a0d-8e2b-fd1d2dfdc598"],
Cell[73675, 2068, 279, 7, 50, "Echo",ExpressionUUID->"ea912911-e079-46a9-b53a-a1111d0ae9f8"],
Cell[73957, 2077, 241, 6, 50, "Echo",ExpressionUUID->"768c85a7-8050-45eb-b72f-401e3a9fd00d"],
Cell[74201, 2085, 2068, 69, 123, "Echo",ExpressionUUID->"4339e2f2-c40f-497d-905d-305ad32a4bd1"]
}, Open  ]],
Cell[76284, 2157, 245, 5, 73, "Output",ExpressionUUID->"9b105458-57d5-4e81-9e41-6999e010b196"],
Cell[76532, 2164, 245, 5, 73, "Output",ExpressionUUID->"40453d5f-56ee-42ce-b709-da2b9394ca5f"],
Cell[76780, 2171, 242, 5, 73, "Output",ExpressionUUID->"9160fa4f-d88f-4993-bcf5-1ac92b68b4cf"]
}, Open  ]],
Cell[CellGroupData[{
Cell[77059, 2181, 154, 3, 49, "Input",ExpressionUUID->"47eda75f-6e59-4bb3-b93b-e17f0413e24d"],
Cell[CellGroupData[{
Cell[77238, 2188, 302, 7, 50, "Echo",ExpressionUUID->"0c93eeac-b6d3-4d90-90c1-0986d9efdcd7"],
Cell[77543, 2197, 302, 8, 50, "Echo",ExpressionUUID->"f25e479d-6129-470b-be52-35a6392271dd"],
Cell[77848, 2207, 392, 10, 50, "Echo",ExpressionUUID->"bba99e56-6377-450d-a3df-9f5513918f4c"],
Cell[78243, 2219, 279, 7, 50, "Echo",ExpressionUUID->"cff63817-a30e-40e1-a58b-2ab99e19ea08"],
Cell[78525, 2228, 239, 6, 50, "Echo",ExpressionUUID->"c5534489-4c26-4d9d-8d26-4a9efe00ab2b"],
Cell[78767, 2236, 3067, 97, 135, "Echo",ExpressionUUID->"23ab9812-20f2-499f-bd8c-0dc9b2e100d0"]
}, Open  ]],
Cell[81849, 2336, 191, 4, 73, "Output",ExpressionUUID->"ffde089b-4b9f-4133-b41d-286b30edce98"],
Cell[82043, 2342, 192, 4, 73, "Output",ExpressionUUID->"3f198504-881d-4e9c-8724-d46e28bb7779"],
Cell[82238, 2348, 193, 4, 73, "Output",ExpressionUUID->"82b1f62d-27d0-462b-961b-b6a3b101c2d1"]
}, Open  ]],
Cell[82446, 2355, 7244, 138, 438, "Input",ExpressionUUID->"d7e12e04-83ce-4931-b123-3da7d9fa0126"],
Cell[89693, 2495, 156, 3, 49, "Input",ExpressionUUID->"20a015d7-663a-496b-8919-b7f3fa82dea5"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}
]
*)


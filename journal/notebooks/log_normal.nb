(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='WolframDesktop 13.2' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       161,          7]
NotebookDataLength[     77893,       2073]
NotebookOptionsPosition[     70345,       1920]
NotebookOutlinePosition[     70899,       1939]
CellTagsIndexPosition[     70856,       1936]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["Log Normal Trading Function Calculations", "Title",
 CellChangeTimes->{{3.911382811596325*^9, 
  3.9113828340058823`*^9}},ExpressionUUID->"2003d08a-fff7-4f74-8623-\
7a0823c9cafa"],

Cell[CellGroupData[{

Cell["\<\
First, we set up the basic functions we need throughout the notebook.\
\>", "Section",
 CellChangeTimes->{{3.911382862311339*^9, 
  3.91138289581577*^9}},ExpressionUUID->"514be430-48c5-4dc6-92af-\
6b1c3a5b8586"],

Cell[CellGroupData[{

Cell["\<\
Before anything, we should set some environment level variables.\
\>", "Subsection",
 CellChangeTimes->{{3.911387263997834*^9, 
  3.9113872765136137`*^9}},ExpressionUUID->"f16f1652-ed41-4414-8c9b-\
6b6d5d8061ac"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"On", "[", "Assert", "]"}], ";"}], " ", 
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{
    "Asserts", " ", "will", " ", "show", " ", "a", " ", "failure", " ", "if", 
     " ", "they", " ", "fail"}], ",", " ", 
    RowBox[{"and", " ", "nothing", " ", "if", " ", "they", " ", 
     RowBox[{"don", "'"}], "t"}]}], " ", "*)"}]}]], "Code",
 CellChangeTimes->{{3.91138727840687*^9, 3.911387281430051*^9}, {
  3.911387543969853*^9, 3.911387555514419*^9}},
 CellLabel->"In[2]:=",ExpressionUUID->"8255c47c-fa0b-4fdd-8638-752453aca613"]
}, Open  ]],

Cell[CellGroupData[{

Cell["First are the CDF and inverse CDF (PPF) functions.", "Subsection",
 CellChangeTimes->{{3.9113829761574574`*^9, 
  3.9113829863941193`*^9}},ExpressionUUID->"b3dd161e-0b53-4183-b30c-\
be7844f26477"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"\[CapitalPhi]", "[", "x_", "]"}], " ", ":=", " ", 
  RowBox[{"CDF", "[", 
   RowBox[{
    RowBox[{"NormalDistribution", "[", 
     RowBox[{"0", ",", "1"}], "]"}], ",", " ", "x"}], "]"}]}], "\n", 
 RowBox[{
  RowBox[{
   SubscriptBox["\[CapitalPhi]", "inv"], "[", "y_", "]"}], " ", ":=", " ", 
  RowBox[{"Quantile", "[", 
   RowBox[{
    RowBox[{"NormalDistribution", "[", 
     RowBox[{"0", ",", " ", "1"}], "]"}], ",", " ", "y"}], "]"}]}]}], "Code",
 CellChangeTimes->{{3.911382903714142*^9, 3.911383006799996*^9}, {
  3.911385117889493*^9, 3.911385119663499*^9}},
 CellLabel->"In[3]:=",ExpressionUUID->"25d6c1c4-f902-41e0-8746-c63f6b03d94e"]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
Next let\[CloseCurlyQuote]s define some helper functions. These will appear \
often in calculations.\
\>", "Subsection",
 CellChangeTimes->{{3.911383043072701*^9, 3.911383082172174*^9}, {
  3.911383316418652*^9, 
  3.9113833317783127`*^9}},ExpressionUUID->"f601d02f-f91e-4780-a166-\
a78097a54f48"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   SubscriptBox["d", "1"], "[", 
   RowBox[{"S_", ",", "K_", ",", "\[Sigma]_", ",", "\[Tau]_"}], "]"}], " ", ":=",
   " ", 
  FractionBox[
   RowBox[{
    RowBox[{"Log", "[", 
     FractionBox["S", "K"], "]"}], " ", "+", " ", 
    RowBox[{
     FractionBox["1", "2"], 
     SuperscriptBox["\[Sigma]", "2"], "\[Tau]"}]}], 
   RowBox[{"\[Sigma]", 
    RowBox[{"\[Sqrt]", "\[Tau]"}]}]]}], "\n", 
 RowBox[{
  RowBox[{
   SubscriptBox["d", "2"], "[", 
   RowBox[{"S_", ",", "K_", ",", "\[Sigma]_", ",", "\[Tau]_"}], "]"}], " ", ":=",
   " ", 
  FractionBox[
   RowBox[{
    RowBox[{"Log", "[", 
     FractionBox["S", "K"], "]"}], " ", "-", " ", 
    RowBox[{
     FractionBox["1", "2"], 
     SuperscriptBox["\[Sigma]", "2"], "\[Tau]"}]}], 
   RowBox[{"\[Sigma]", 
    RowBox[{"\[Sqrt]", "\[Tau]"}]}]]}]}], "Code",
 CellChangeTimes->{{3.911383086202894*^9, 3.911383096527341*^9}, {
  3.911383144055451*^9, 3.911383310823001*^9}, {3.9113851030677443`*^9, 
  3.91138511600043*^9}},
 CellLabel->"In[5]:=",ExpressionUUID->"d5d16a82-3e60-44ff-affc-b50eb9144304"]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
Now let\[CloseCurlyQuote]s define functions that are more explicitly used for \
the DFMM.\
\>", "Subsection",
 CellChangeTimes->{{3.911383368894425*^9, 3.9113833696600657`*^9}, {
  3.911383542720358*^9, 
  3.911383554344432*^9}},ExpressionUUID->"009a24ad-ebe5-4d73-bdda-\
a7839592332a"],

Cell[CellGroupData[{

Cell["\<\
These are functions used to get initial liquidity given a token amount and a \
price.\
\>", "Subsubsection",
 CellChangeTimes->{{3.911383821691424*^9, 
  3.911383842953394*^9}},ExpressionUUID->"3b15f5e3-f420-4095-899a-\
506c7286cc40"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   SubscriptBox["L", "X"], "[", 
   RowBox[{"x_", ",", "S_", ",", "K_", ",", "\[Sigma]_", ",", "\[Tau]_"}], 
   "]"}], " ", ":=", " ", 
  FractionBox["x", 
   RowBox[{"1", " ", "-", " ", 
    RowBox[{"\[CapitalPhi]", "[", 
     RowBox[{
      SubscriptBox["d", "1"], "[", 
      RowBox[{"S", ",", "K", ",", "\[Sigma]", ",", "\[Tau]"}], "]"}], 
     "]"}]}]]}], "\n", 
 RowBox[{
  RowBox[{
   SubscriptBox["L", "Y"], "[", 
   RowBox[{"y_", ",", "S_", ",", "K_", ",", "\[Sigma]_", ",", "\[Tau]_"}], 
   "]"}], " ", ":=", " ", 
  FractionBox["y", 
   RowBox[{"K", " ", 
    RowBox[{"\[CapitalPhi]", "[", 
     RowBox[{
      SubscriptBox["d", "2"], "[", 
      RowBox[{"S", ",", "K", ",", "\[Sigma]", ",", "\[Tau]"}], "]"}], 
     "]"}]}]]}], "\n", 
 RowBox[{
  RowBox[{"X", "[", 
   RowBox[{"y_", ",", "S_", ",", "K_", ",", "\[Sigma]_", ",", "\[Tau]_"}], 
   "]"}], " ", ":=", " ", 
  RowBox[{
   RowBox[{
    SubscriptBox["L", "Y"], "[", 
    RowBox[{"y", ",", "S", ",", "K", ",", "\[Sigma]", ",", "\[Tau]"}], "]"}], 
   " ", 
   RowBox[{"(", 
    RowBox[{"1", " ", "-", " ", 
     RowBox[{"\[CapitalPhi]", "[", 
      RowBox[{
       SubscriptBox["d", "1"], "[", 
       RowBox[{"S", ",", "K", ",", "\[Sigma]", ",", "\[Tau]"}], "]"}], 
      "]"}]}], ")"}]}]}], "\n", 
 RowBox[{
  RowBox[{"Y", "[", 
   RowBox[{"x_", ",", "S_", ",", "K_", ",", "\[Sigma]_", ",", "\[Tau]_"}], 
   "]"}], " ", ":=", " ", 
  RowBox[{"K", " ", 
   RowBox[{
    SubscriptBox["L", "X"], "[", 
    RowBox[{"x", ",", "S", ",", "K", ",", "\[Sigma]", ",", "\[Tau]"}], "]"}], 
   " ", 
   RowBox[{"\[CapitalPhi]", "[", 
    RowBox[{
     SubscriptBox["d", "2"], "[", 
     RowBox[{"S", ",", "K", ",", "\[Sigma]", ",", "\[Tau]"}], "]"}], 
    "]"}]}]}]}], "Code",
 CellChangeTimes->{{3.911383688783895*^9, 3.911383741794456*^9}, {
  3.911383797950727*^9, 3.911383809912835*^9}, {3.9113838491740713`*^9, 
  3.911383864952888*^9}, {3.9113841779644413`*^9, 3.911384322151863*^9}, {
  3.911384433609087*^9, 3.911384448745434*^9}, {3.9113850554248533`*^9, 
  3.911385099649076*^9}, {3.91138525707533*^9, 3.911385263363533*^9}, {
  3.911385324670476*^9, 3.911385325035862*^9}, {3.911409187909778*^9, 
  3.9114091880800257`*^9}},
 CellLabel->
  "In[265]:=",ExpressionUUID->"3950a1e9-9c32-45c4-b5ef-404c37d6ef65"]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
These are functions that are used to get prices from either a balance in X or \
a balance in Y.\
\>", "Subsubsection",
 CellChangeTimes->{{3.91138394332069*^9, 
  3.911383960427863*^9}},ExpressionUUID->"6228385e-cfd2-4bd0-97f4-\
58c98a5a994e"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   SubscriptBox["P", "X"], "[", 
   RowBox[{"x_", ",", "L_", ",", "K_", ",", "\[Sigma]_", ",", "\[Tau]_"}], 
   "]"}], " ", ":=", " ", 
  RowBox[{"K", " ", 
   RowBox[{"Exp", "[", 
    RowBox[{
     RowBox[{
      RowBox[{
       SubscriptBox["\[CapitalPhi]", "inv"], "[", 
       RowBox[{"1", " ", "-", " ", 
        FractionBox["x", "L"]}], "]"}], "\[Sigma]"}], " ", "-", " ", 
     RowBox[{
      FractionBox["1", "2"], 
      SuperscriptBox["\[Sigma]", "2"]}]}], "]"}]}]}], "\n", 
 RowBox[{
  RowBox[{
   SubscriptBox["P", "Y"], "[", 
   RowBox[{"y_", ",", "L_", ",", "K_", ",", "\[Sigma]_", ",", "\[Tau]_"}], 
   "]"}], " ", ":=", " ", 
  RowBox[{"K", " ", 
   RowBox[{"Exp", "[", 
    RowBox[{
     RowBox[{
      RowBox[{
       SubscriptBox["\[CapitalPhi]", "inv"], "[", 
       FractionBox["y", 
        RowBox[{"K", " ", "L"}]], "]"}], "\[Sigma]"}], " ", "+", " ", 
     RowBox[{
      FractionBox["1", "2"], 
      SuperscriptBox["\[Sigma]", "2"]}]}], "]"}]}]}]}], "Code",
 CellChangeTimes->{{3.9113839769604807`*^9, 3.911384029460125*^9}, {
  3.911385062781126*^9, 3.911385091502931*^9}},
 CellLabel->
  "In[269]:=",ExpressionUUID->"cdbca2c9-2426-4adf-8516-6c22e3b352b1"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Then we have the trading function", "Subsubsection",
 CellChangeTimes->{{3.9114107980754547`*^9, 
  3.911410804009096*^9}},ExpressionUUID->"18015876-38da-4fa9-82b7-\
a417d745ef90"],

Cell[BoxData[
 RowBox[{
  RowBox[{"\[CurlyPhi]", "[", 
   RowBox[{
   "x_", ",", "y_", ",", "L_", ",", "K_", ",", "\[Sigma]_", ",", "\[Tau]_"}], 
   "]"}], " ", ":=", " ", 
  RowBox[{
   RowBox[{
    SubscriptBox["\[CapitalPhi]", "inv"], "[", 
    FractionBox["x", "L"], "]"}], "+", 
   RowBox[{
    SubscriptBox["\[CapitalPhi]", "inv"], "[", 
    FractionBox["y", 
     RowBox[{"K", " ", "L"}]], "]"}], "+", 
   RowBox[{"\[Sigma]", 
    RowBox[{"\[Sqrt]", "\[Tau]"}]}]}]}]], "Code",
 CellChangeTimes->{{3.911410806554799*^9, 3.911410882453505*^9}, {
  3.9114109468550673`*^9, 3.9114109866059113`*^9}},
 CellLabel->
  "In[380]:=",ExpressionUUID->"a65cb5ec-cdac-40e0-bb49-f3d8157592d9"]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
Let\[CloseCurlyQuote]s initialize a pool with some constants and some \
liquidity. \
\>", "Section",
 CellChangeTimes->{{3.911384055956565*^9, 3.911384066810919*^9}, {
  3.911384711690135*^9, 
  3.911384714277852*^9}},ExpressionUUID->"da815218-0c74-4720-a5c9-\
76f45781c5e2"],

Cell[CellGroupData[{

Cell["\<\
First, let\[CloseCurlyQuote]s set the parameters for our curve, including the \
fee parameter \[Gamma]\
\>", "Subsection",
 CellChangeTimes->{{3.911384725040826*^9, 3.911384731518064*^9}, {
  3.9113851982356*^9, 
  3.911385205023809*^9}},ExpressionUUID->"d461a415-44ca-4804-8248-\
6137a0f9449f"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      SubscriptBox["K", "0"], ",", " ", 
      SubscriptBox["\[Sigma]", "0"], ",", " ", 
      SubscriptBox["\[Tau]", "0"], ",", " ", 
      SubscriptBox["\[Gamma]", "0"]}], "}"}], " ", "=", " ", 
    RowBox[{"{", 
     RowBox[{"3", ",", " ", 
      FractionBox["1", "4"], ",", " ", "1", ",", " ", "1"}], "}"}]}], ";"}], 
  " "}], "\n", 
 RowBox[{
  RowBox[{"Echo", "[", 
   RowBox[{
    SubscriptBox["K", "0"], ",", " ", 
    "\"\<\!\(\*SubscriptBox[\(K\), \(0\)]\) = \>\""}], "]"}], ";", " ", 
  RowBox[{"Echo", "[", 
   RowBox[{
    SubscriptBox["\[Sigma]", "0"], ",", " ", 
    "\"\<\!\(\*SubscriptBox[\(\[Sigma]\), \(0\)]\) = \>\""}], "]"}], ";", " ", 
  RowBox[{"Echo", "[", 
   RowBox[{
    SubscriptBox["\[Tau]", "0"], ",", " ", 
    "\"\<\!\(\*SubscriptBox[\(\[Tau]\), \(0\)]\) = \>\""}], "]"}], ";", " ", 
  RowBox[{"Echo", "[", 
   RowBox[{
    SubscriptBox["\[Gamma]", "0"], ",", " ", 
    "\"\<\!\(\*SubscriptBox[\(\[Gamma]\), \(0\)]\) = \>\""}], "]"}], 
  ";"}]}], "Code",
 CellChangeTimes->{
  3.91138448247676*^9, {3.9113845136096563`*^9, 3.911384540517331*^9}, {
   3.911384579083336*^9, 3.911384646274679*^9}, {3.911384706054633*^9, 
   3.911384732869401*^9}, {3.911385194438079*^9, 3.9113852384442177`*^9}, 
   3.911387336640081*^9, {3.911408996136958*^9, 3.9114090092659817`*^9}},
 CellLabel->
  "In[271]:=",ExpressionUUID->"8d262a91-37a1-41fb-b1b3-ae8191b1ccda"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  TagBox["\<\"\\!\\(\\*SubscriptBox[\\(K\\), \\(0\\)]\\) = \"\>",
   "EchoLabel"], "  ", "3"}]], "Echo",
 CellChangeTimes->{
  3.91140919241201*^9},ExpressionUUID->"2bc55663-903b-4d2f-a2e5-98e371efe26a"],

Cell[BoxData[
 RowBox[{
  TagBox["\<\"\\!\\(\\*SubscriptBox[\\(\[Sigma]\\), \\(0\\)]\\) = \"\>",
   "EchoLabel"], "  ", 
  FractionBox["1", "4"]}]], "Echo",
 CellChangeTimes->{
  3.9114091924485826`*^9},ExpressionUUID->"2c2a8ad1-515c-4567-a2fe-\
f0133dd48ea4"],

Cell[BoxData[
 RowBox[{
  TagBox["\<\"\\!\\(\\*SubscriptBox[\\(\[Tau]\\), \\(0\\)]\\) = \"\>",
   "EchoLabel"], "  ", "1"}]], "Echo",
 CellChangeTimes->{
  3.91140919246002*^9},ExpressionUUID->"c91143fb-b30d-45fc-a7da-812a2f35b0c6"],

Cell[BoxData[
 RowBox[{
  TagBox["\<\"\\!\\(\\*SubscriptBox[\\(\[Gamma]\\), \\(0\\)]\\) = \"\>",
   "EchoLabel"], "  ", "1"}]], "Echo",
 CellChangeTimes->{
  3.9114091924821587`*^9},ExpressionUUID->"b62e4971-2c43-46d4-9102-\
4af4235a9d74"]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
Now, let\[CloseCurlyQuote]s set the initial liquidity by providing an amount \
of X and a price S.\
\>", "Subsection",
 CellChangeTimes->{{3.9113847363117323`*^9, 3.911384755116337*^9}, {
  3.911384849366685*^9, 
  3.9113848505774117`*^9}},ExpressionUUID->"a6874bc0-590c-4cb3-9d20-\
f010a014a154"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      SubscriptBox["x", "0"], ",", 
      SubscriptBox["S", "0"]}], "}"}], " ", "=", " ", 
    RowBox[{"{", 
     RowBox[{"1", ",", " ", "2"}], "}"}]}], ";"}], " "}], "\n", 
 RowBox[{
  RowBox[{"Echo", "[", 
   RowBox[{
    SubscriptBox["x", "0"], ",", " ", 
    "\"\<The initial X-reserve balance is: \!\(\*SubscriptBox[\(x\), \(0\)]\) \
= \>\""}], "]"}], ";", " ", 
  RowBox[{"Echo", "[", 
   RowBox[{
    SubscriptBox["S", "0"], ",", " ", 
    "\"\<\!\(\*SubscriptBox[\(S\), \(0\)]\) = \>\""}], "]"}], ";"}]}], "Code",\

 CellChangeTimes->{{3.911384757671178*^9, 3.911384806225191*^9}, {
   3.911386982132729*^9, 3.911386989059497*^9}, 3.91138734111685*^9, {
   3.9114090196649647`*^9, 3.9114090339697657`*^9}},
 CellLabel->
  "In[273]:=",ExpressionUUID->"085ca656-cc94-43cf-a8c6-c116e23e4910"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  TagBox["\<\"The initial X-reserve balance is: \
\\!\\(\\*SubscriptBox[\\(x\\), \\(0\\)]\\) = \"\>",
   "EchoLabel"], "  ", "1"}]], "Echo",
 CellChangeTimes->{
  3.9114091947481833`*^9},ExpressionUUID->"3a4c83fa-034b-4672-96e5-\
0ec0bf7bc925"],

Cell[BoxData[
 RowBox[{
  TagBox["\<\"\\!\\(\\*SubscriptBox[\\(S\\), \\(0\\)]\\) = \"\>",
   "EchoLabel"], "  ", "2"}]], "Echo",
 CellChangeTimes->{
  3.911409194786644*^9},ExpressionUUID->"a42467cc-0d04-43c8-99ce-\
4289a5ae6c25"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
From this, let\[CloseCurlyQuote]s see what we will get for the initial amount \
of Y and L.\
\>", "Subsubsection",
 CellChangeTimes->{{3.9113848345992517`*^9, 
  3.91138485967836*^9}},ExpressionUUID->"d0f44536-b00f-4974-8c75-\
dd65dd319645"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      SubscriptBox["L", "0"], ",", " ", 
      SubscriptBox["y", "0"]}], "}"}], " ", "=", " ", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{
       SubscriptBox["L", "X"], "[", 
       RowBox[{
        SubscriptBox["x", "0"], ",", 
        SubscriptBox["S", "0"], ",", 
        SubscriptBox["K", "0"], ",", 
        SubscriptBox["\[Sigma]", "0"], ",", 
        SubscriptBox["\[Tau]", "0"]}], "]"}], ",", " ", 
      RowBox[{"Y", "[", 
       RowBox[{
        SubscriptBox["x", "0"], ",", 
        SubscriptBox["S", "0"], ",", 
        SubscriptBox["K", "0"], ",", 
        SubscriptBox["\[Sigma]", "0"], ",", 
        SubscriptBox["\[Tau]", "0"]}], "]"}]}], "}"}]}], ";"}], " "}], "\n", 
 RowBox[{
  RowBox[{"Echo", "[", 
   RowBox[{
    RowBox[{"N", "[", 
     RowBox[{
      SubscriptBox["L", "0"], ",", " ", "18"}], "]"}], ",", " ", 
    "\"\<The initial liquidity is: \!\(\*SubscriptBox[\(L\), \(0\)]\) = \
\>\""}], "]"}], ";", " ", 
  RowBox[{"Echo", "[", 
   RowBox[{
    RowBox[{"N", "[", 
     RowBox[{
      SubscriptBox["L", "0"], ",", " ", "18"}], "]"}], ",", " ", 
    "\"\<The initial Y-reserve balance is: \!\(\*SubscriptBox[\(y\), \(0\)]\) \
= \>\""}], "]"}], ";"}]}], "Code",
 CellChangeTimes->{{3.911384864489366*^9, 3.911384942301722*^9}, {
  3.911384992602735*^9, 3.9113850128379593`*^9}, {3.911385047347066*^9, 
  3.9113850518014383`*^9}, {3.9113851385254107`*^9, 3.9113851753238697`*^9}, {
  3.91138696634296*^9, 3.911386992951726*^9}, {3.911387349621842*^9, 
  3.911387398394403*^9}},
 CellLabel->
  "In[275]:=",ExpressionUUID->"57112165-db6f-447c-9713-f9c85c6d4828"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  TagBox["\<\"The initial liquidity is: \\!\\(\\*SubscriptBox[\\(L\\), \
\\(0\\)]\\) = \"\>",
   "EchoLabel"], "  ", 
  "1.07205816303780375296378681139341832344`18."}]], "Echo",
 CellChangeTimes->{
  3.911409198284244*^9},ExpressionUUID->"eedb6e16-4bb8-430f-be32-\
631487ba6c3a"],

Cell[BoxData[
 RowBox[{
  TagBox["\<\"The initial Y-reserve balance is: \
\\!\\(\\*SubscriptBox[\\(y\\), \\(0\\)]\\) = \"\>",
   "EchoLabel"], "  ", 
  "1.07205816303780375296378681139341832344`18."}]], "Echo",
 CellChangeTimes->{
  3.9114091983208723`*^9},ExpressionUUID->"fdc29d2a-eb44-4ea7-a0ac-\
849a099a36a3"]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Let\[CloseCurlyQuote]s check that the prices are correct after the \
fact.", "Subsubsection",
 CellChangeTimes->{{3.911385351666885*^9, 
  3.91138536037985*^9}},ExpressionUUID->"0dabba71-0908-48dd-b11c-\
9fc06ac2d79b"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Assert", "[", 
  RowBox[{
   RowBox[{
    SubscriptBox["P", "X"], "[", 
    RowBox[{
     SubscriptBox["x", "0"], ",", 
     SubscriptBox["L", "0"], ",", 
     SubscriptBox["K", "0"], ",", 
     SubscriptBox["\[Sigma]", "0"], ",", 
     SubscriptBox["\[Tau]", "0"]}], "]"}], " ", "==", " ", 
   RowBox[{
    SubscriptBox["P", "Y"], "[", 
    RowBox[{
     SubscriptBox["y", "0"], ",", 
     SubscriptBox["L", "0"], ",", 
     SubscriptBox["K", "0"], ",", 
     SubscriptBox["\[Sigma]", "0"], ",", 
     SubscriptBox["\[Tau]", "0"]}], "]"}]}], "]"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"Echo", "[", 
    RowBox[{
     RowBox[{
      SubscriptBox["P", "X"], "[", 
      RowBox[{
       SubscriptBox["x", "0"], ",", 
       SubscriptBox["L", "0"], ",", 
       SubscriptBox["K", "0"], ",", 
       SubscriptBox["\[Sigma]", "0"], ",", 
       SubscriptBox["\[Tau]", "0"]}], "]"}], ",", " ", 
     "\"\<The initial price is: P = \>\""}], "]"}], ";"}], " "}]}], "Code",
 CellChangeTimes->{{3.9113853639105387`*^9, 3.9113854185634947`*^9}, {
  3.9113869483534203`*^9, 3.911386962492029*^9}, {3.911386994813387*^9, 
  3.911387177122032*^9}, {3.911387291516371*^9, 3.911387309281919*^9}},
 CellLabel->
  "In[277]:=",ExpressionUUID->"05df5500-1e66-49a9-afd7-256365f8b6dc"],

Cell[BoxData[
 RowBox[{
  TagBox["\<\"The initial price is: P = \"\>",
   "EchoLabel"], "  ", "2"}]], "Echo",
 CellChangeTimes->{
  3.911409200296558*^9},ExpressionUUID->"0fced0fb-8e92-49e7-aad3-\
ea8b95cd73ff"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
Just to verify that we could have done this the other way, and show the flow, \
let\[CloseCurlyQuote]s do that real fast.\
\>", "Subsubsection",
 CellChangeTimes->{{3.9113853013290577`*^9, 
  3.9113853161239634`*^9}},ExpressionUUID->"6c78f375-83c5-40c5-a26f-\
9dfafb83427b"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     SubscriptBox["L", 
      SubscriptBox["0", "y"]], ",", " ", 
     SubscriptBox["x", 
      SubscriptBox["0", "y"]]}], "}"}], " ", "=", " ", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      SubscriptBox["L", "Y"], "[", 
      RowBox[{
       SubscriptBox["y", "0"], ",", 
       SubscriptBox["S", "0"], ",", 
       SubscriptBox["K", "0"], ",", 
       SubscriptBox["\[Sigma]", "0"], ",", 
       SubscriptBox["\[Tau]", "0"]}], "]"}], ",", " ", 
     RowBox[{"X", "[", 
      RowBox[{
       SubscriptBox["y", "0"], ",", 
       SubscriptBox["S", "0"], ",", 
       SubscriptBox["K", "0"], ",", 
       SubscriptBox["\[Sigma]", "0"], ",", 
       SubscriptBox["\[Tau]", "0"]}], "]"}]}], "}"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"Assert", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      SubscriptBox["L", 
       SubscriptBox["0", "y"]], ",", 
      SubscriptBox["x", 
       SubscriptBox["0", "y"]]}], "}"}], " ", "==", " ", 
    RowBox[{"{", 
     RowBox[{
      SubscriptBox["L", "0"], ",", 
      SubscriptBox["x", "0"]}], "}"}]}], "]"}], ";"}]}], "Code",
 CellChangeTimes->{{3.911387447754344*^9, 3.911387533259612*^9}, {
  3.911409113951961*^9, 3.911409136342054*^9}, {3.911409206127439*^9, 
  3.911409206365666*^9}},
 CellLabel->
  "In[282]:=",ExpressionUUID->"05cdeb1a-e1b0-40a7-af51-51ab9b75cc2e"]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Swapping", "Section",
 CellChangeTimes->{{3.911387861088531*^9, 
  3.9113878701923523`*^9}},ExpressionUUID->"e0558e89-2c12-471a-af64-\
7b6a1457eb4d"],

Cell[CellGroupData[{

Cell["\<\
Now we need to set up the swap logic. We will use R to denote an arbitrary \
reserve.\
\>", "Subsection",
 CellChangeTimes->{{3.911387873703059*^9, 3.911387883191267*^9}, {
  3.911388058682213*^9, 
  3.911388067027336*^9}},ExpressionUUID->"2f7348b3-443c-4a22-943e-\
943b7962999e"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   SubscriptBox["\[Delta]", "in"], "[", 
   RowBox[{"\[CapitalDelta]_", ",", "\[Gamma]_"}], "]"}], " ", ":=", " ", 
  RowBox[{
   RowBox[{"(", 
    RowBox[{"1", "-", "\[Gamma]"}], ")"}], "\[CapitalDelta]"}]}], "\n", 
 RowBox[{
  RowBox[{
   SubscriptBox["\[Delta]", "Liq"], "[", 
   RowBox[{"\[CapitalDelta]_", ",", "R_", ",", "L_", ",", "\[Gamma]_"}], 
   "]"}], " ", ":=", " ", 
  RowBox[{
   RowBox[{
    SubscriptBox["\[Delta]", "in"], "[", 
    RowBox[{"\[CapitalDelta]", ",", "\[Gamma]"}], "]"}], 
   FractionBox["L", "R"]}]}], "\n", 
 RowBox[{
  RowBox[{
   SubscriptBox["\[CapitalDelta]", "X"], "[", 
   RowBox[{
   "\[CapitalDelta]_", ",", "x_", ",", "y_", ",", "L_", ",", "K_", ",", 
    "\[Sigma]_", ",", "\[Tau]_", ",", "\[Gamma]_"}], "]"}], " ", ":=", " ", 
  RowBox[{
   RowBox[{
    RowBox[{"(", 
     RowBox[{"L", "+", 
      RowBox[{
       SubscriptBox["\[Delta]", "Liq"], "[", 
       RowBox[{"\[CapitalDelta]", ",", "y", ",", "L", ",", "\[Gamma]"}], 
       "]"}]}], ")"}], 
    RowBox[{"\[CapitalPhi]", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"-", "\[Sigma]"}], 
       RowBox[{"\[Sqrt]", "\[Tau]"}]}], "  ", "-", " ", 
      RowBox[{
       SubscriptBox["\[CapitalPhi]", "inv"], "[", 
       FractionBox[
        RowBox[{"y", "+", "\[CapitalDelta]"}], 
        RowBox[{"K", 
         RowBox[{"(", 
          RowBox[{"L", "+", 
           RowBox[{
            SubscriptBox["\[Delta]", "Liq"], "[", 
            RowBox[{"\[CapitalDelta]", ",", "x", ",", "L", ",", "\[Gamma]"}], 
            "]"}]}], ")"}]}]], "]"}]}], "]"}]}], "-", "x"}]}], "\n", 
 RowBox[{
  RowBox[{
   SubscriptBox["\[CapitalDelta]", "Y"], "[", 
   RowBox[{
   "\[CapitalDelta]_", ",", "x_", ",", "y_", ",", "L_", ",", "K_", ",", 
    "\[Sigma]_", ",", "\[Tau]_", ",", "\[Gamma]_"}], "]"}], " ", ":=", " ", 
  RowBox[{
   RowBox[{"K", 
    RowBox[{"(", 
     RowBox[{"L", "+", 
      RowBox[{
       SubscriptBox["\[Delta]", "Liq"], "[", 
       RowBox[{"\[CapitalDelta]", ",", "x", ",", "L", ",", "\[Gamma]"}], 
       "]"}]}], ")"}], 
    RowBox[{"\[CapitalPhi]", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"-", "\[Sigma]"}], 
       RowBox[{"\[Sqrt]", "\[Tau]"}]}], " ", "-", " ", 
      RowBox[{
       SubscriptBox["\[CapitalPhi]", "inv"], "[", 
       FractionBox[
        RowBox[{"x", "+", "\[CapitalDelta]"}], 
        RowBox[{"L", "+", 
         RowBox[{
          SubscriptBox["\[Delta]", "Liq"], "[", 
          RowBox[{"\[CapitalDelta]", ",", "x", ",", "L", ",", "\[Gamma]"}], 
          "]"}]}]], "]"}]}], "]"}]}], "-", "y"}]}]}], "Code",
 CellChangeTimes->{{3.9113879019426517`*^9, 3.91138810608572*^9}, {
  3.911388182414874*^9, 3.911388482660475*^9}, {3.911388787674255*^9, 
  3.911388979350903*^9}, {3.911389141187207*^9, 3.911389159323999*^9}, {
  3.911390630736039*^9, 3.911390698837728*^9}, {3.911408926773992*^9, 
  3.911408926935534*^9}},
 CellLabel->
  "In[284]:=",ExpressionUUID->"0716117c-5381-46be-8b57-f2cefa727879"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Arbitrage", "Section",
 CellChangeTimes->{{3.91138759286382*^9, 3.9113876060914783`*^9}, {
  3.911387637205267*^9, 
  3.911387638219921*^9}},ExpressionUUID->"65d2b88d-22b2-481a-935c-\
71bdce9f21f1"],

Cell[TextData[{
 "We will assume there is some external price ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["S", "ext"], TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "cd8c38a7-d91f-4b2c-a735-67538238c600"],
 "that we are given and decide whether or not to perform an arbitrage and, if \
so, to get the optimal trade size. That is, the trade that gives the \
arbitrageur maximal profit."
}], "Text",
 CellChangeTimes->{{3.9113876414292507`*^9, 3.9113877131079063`*^9}, {
  3.911388488238481*^9, 
  3.911388489476202*^9}},ExpressionUUID->"f20cba79-bbb2-4d1b-9349-\
a349e8b0b7a4"],

Cell[CellGroupData[{

Cell[TextData[{
 "We will need the marginal price ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["P", "M"], TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "17089434-c32f-45ea-a26f-0d3ed9139695"],
 " of a swap to compute optimal arbitrages and a profit calculation ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["V", "A"], TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "72aada08-6991-4530-9774-3dd0a302c916"]
}], "Subsubsection",
 CellChangeTimes->{{3.9113884927083406`*^9, 3.911388517540121*^9}, {
  3.911388583492565*^9, 3.911388585552403*^9}, {3.9113886383414087`*^9, 
  3.911388651317487*^9}},ExpressionUUID->"d7131855-64d1-451f-98f3-\
152b4aa9f3a5"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   SubscriptBox["P", "M"], "[", 
   RowBox[{"dX_", ",", "dY_"}], "]"}], " ", ":=", " ", 
  FractionBox[
   RowBox[{"-", "dY"}], "dX"]}], "\n", 
 RowBox[{
  RowBox[{
   SubscriptBox["V", "A"], "[", 
   RowBox[{"Pm_", ",", "Pext_", ",", "\[CapitalDelta]_"}], "]"}], " ", ":=", 
  " ", 
  RowBox[{
   RowBox[{"(", 
    RowBox[{"Pm", " ", "-", " ", "Pext"}], ")"}], 
   "\[CapitalDelta]"}]}]}], "Code",
 CellChangeTimes->{{3.911388520734275*^9, 3.911388754553933*^9}, {
  3.911408038142099*^9, 3.9114080663589067`*^9}, {3.9114081240293818`*^9, 
  3.91140812426967*^9}},
 CellLabel->
  "In[288]:=",ExpressionUUID->"fadd5b7c-a968-401d-9e42-d6ca30b3a2a6"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Lower External Price:", "Subsection",
 CellChangeTimes->{{3.911387716836122*^9, 3.9113877303598022`*^9}, {
  3.911389282458209*^9, 
  3.911389285697858*^9}},ExpressionUUID->"eed8b815-af5d-458f-8082-\
a956f0fb88b9"],

Cell[CellGroupData[{

Cell[TextData[{
 "We\[CloseCurlyQuote]ll let ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["O", "X"], TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "bea8f527-9f1f-453d-b766-3832796355bb"],
 " be the optimal amount of X token to tender to achieve maximal arbitrage \
profit."
}], "Subsubsection",
 CellChangeTimes->{{3.911389287836197*^9, 3.911389310066874*^9}, {
  3.911389351175222*^9, 
  3.911389351682972*^9}},ExpressionUUID->"b20dcf41-6dfe-404c-8167-\
50b070efca5f"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   SubscriptBox["S", "ext"], " ", "=", " ", "1.6"}], ";", " ", 
  RowBox[{"Assert", "[", 
   RowBox[{
    SubscriptBox["S", "ext"], " ", "<", " ", 
    SubscriptBox["S", "0"]}], "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   SubscriptBox["Prof", "Lower"], "[", "in_", "]"}], " ", ":=", " ", 
  RowBox[{
   SubscriptBox["V", "A"], "[", 
   RowBox[{
    RowBox[{
     SubscriptBox["P", "M"], "[", 
     RowBox[{"in", ",", 
      RowBox[{
       SubscriptBox["\[CapitalDelta]", "Y"], "[", 
       RowBox[{"in", ",", 
        SubscriptBox["x", "0"], ",", 
        SubscriptBox["y", "0"], ",", 
        SubscriptBox["L", "0"], ",", 
        SubscriptBox["K", "0"], ",", 
        SubscriptBox["\[Sigma]", "0"], ",", 
        SubscriptBox["\[Tau]", "0"], ",", 
        SubscriptBox["\[Gamma]", "0"]}], "]"}]}], "]"}], ",", " ", 
    SubscriptBox["S", "ext"], ",", " ", "in"}], "]"}]}], "\n", 
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{
    SubscriptBox["Prof", "Lower"], "[", "v", "]"}], ",", " ", 
   RowBox[{"{", 
    RowBox[{"v", ",", "0", ",", "0.2"}], "}"}]}], "]"}], "\n", 
 RowBox[{
  RowBox[{
   SubscriptBox["O", "X"], " ", "=", " ", 
   RowBox[{"ArgMax", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        SubscriptBox["Prof", "Lower"], "[", "x", "]"}], ",", " ", 
       RowBox[{"0", "<=", "x", "<=", 
        RowBox[{
         SubscriptBox["L", "0"], "-", 
         SubscriptBox["x", "0"]}]}]}], "}"}], ",", " ", "x"}], "]"}]}], ";", 
  " ", 
  RowBox[{"Echo", "[", 
   RowBox[{
    SubscriptBox["O", "X"], ",", " ", 
    "\"\<The optimal amount of X to tender is: \!\(\*SubscriptBox[\(\
\[CapitalDelta]\), \(X\)]\) = \>\""}], "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   SubscriptBox["P", "F"], " ", "=", " ", 
   RowBox[{
    SubscriptBox["P", "X"], "[", 
    RowBox[{
     RowBox[{
      SubscriptBox["x", "0"], " ", "+", " ", 
      SubscriptBox["O", "X"]}], ",", " ", 
     RowBox[{
      SubscriptBox["L", "0"], " ", "+", " ", 
      RowBox[{
       SubscriptBox["\[Delta]", "Liq"], "[", 
       RowBox[{
        SubscriptBox["O", "X"], ",", 
        SubscriptBox["x", "0"], ",", 
        SubscriptBox["L", "0"], ",", 
        SubscriptBox["\[Gamma]", "0"]}], "]"}]}], ",", " ", 
     SubscriptBox["K", "0"], ",", " ", 
     SubscriptBox["\[Sigma]", "0"], ",", " ", 
     SubscriptBox["\[Tau]", "0"]}], "]"}]}], ";", " ", 
  RowBox[{"Echo", "[", 
   RowBox[{
    RowBox[{"N", "[", 
     RowBox[{
      SubscriptBox["P", "F"], ",", "18"}], "]"}], ",", " ", 
    "\"\<The final price of the pool is: P = \>\""}], "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"FullSimplify", "[", 
   RowBox[{"D", "[", 
    RowBox[{
     RowBox[{
      SubscriptBox["V", "A"], "[", 
      RowBox[{
       RowBox[{
        SubscriptBox["P", "M"], "[", 
        RowBox[{"v", ",", 
         RowBox[{
          SubscriptBox["\[CapitalDelta]", "Y"], "[", 
          RowBox[{
          "v", ",", "x", ",", "y", ",", "L", ",", "K", ",", "\[Sigma]", ",", 
           "\[Tau]", ",", "\[Gamma]"}], "]"}]}], "]"}], ",", " ", "S", ",", 
       " ", "v"}], "]"}], ",", "v"}], "]"}], "]"}], "\n", 
  RowBox[{"(*", " ", 
   RowBox[{
   "Check", " ", "that", " ", "the", " ", "trading", " ", "function", " ", 
    "is", " ", "invariant", " ", "under", " ", "the", " ", "swap"}], " ", 
   "*)"}]}], "\n", 
 RowBox[{"Assert", "[", 
  RowBox[{
   RowBox[{"\[CurlyPhi]", "[", 
    RowBox[{
     RowBox[{
      SubscriptBox["x", "0"], " ", "+", " ", 
      SubscriptBox["O", "X"]}], ",", " ", 
     RowBox[{
      SubscriptBox["y", "0"], " ", "+", " ", 
      RowBox[{
       SubscriptBox["\[CapitalDelta]", "Y"], "[", 
       RowBox[{
        SubscriptBox["O", "X"], ",", 
        SubscriptBox["x", "0"], ",", 
        SubscriptBox["y", "0"], ",", 
        SubscriptBox["L", "0"], ",", 
        SubscriptBox["K", "0"], ",", 
        SubscriptBox["\[Sigma]", "0"], ",", 
        SubscriptBox["\[Tau]", "0"], ",", 
        SubscriptBox["\[Gamma]", "0"]}], "]"}]}], ",", " ", 
     RowBox[{
      SubscriptBox["L", "0"], " ", "+", " ", 
      RowBox[{
       SubscriptBox["\[Delta]", "Liq"], "[", 
       RowBox[{
        SubscriptBox["O", "X"], ",", 
        SubscriptBox["x", "0"], ",", 
        SubscriptBox["L", "0"], ",", 
        SubscriptBox["\[Gamma]", "0"]}], "]"}]}], ",", " ", 
     SubscriptBox["K", "0"], ",", 
     SubscriptBox["\[Sigma]", "0"], ",", 
     SubscriptBox["\[Tau]", "0"]}], "]"}], " ", "==", " ", "0"}], 
  "]"}]}], "Code",
 CellChangeTimes->{{3.9113877530057907`*^9, 3.911387759870617*^9}, {
   3.911387791900612*^9, 3.911387835019555*^9}, {3.911389040938622*^9, 
   3.911389111156786*^9}, {3.911389254777446*^9, 3.9113892749054213`*^9}, {
   3.911389313552825*^9, 3.9113896479421587`*^9}, {3.911389684738289*^9, 
   3.911389710567501*^9}, {3.911389764399426*^9, 3.911390120184866*^9}, {
   3.911390172200013*^9, 3.9113903097104073`*^9}, {3.9113903414495697`*^9, 
   3.911390422476118*^9}, {3.9113904688729887`*^9, 3.911390469654806*^9}, {
   3.911390530287198*^9, 3.9113905408414717`*^9}, {3.9113907054945307`*^9, 
   3.91139073520191*^9}, {3.91139090146146*^9, 3.911390906904234*^9}, {
   3.911390946256706*^9, 3.911391064802693*^9}, {3.911391222082168*^9, 
   3.9113912438598137`*^9}, {3.9114061934461813`*^9, 3.911406197897942*^9}, {
   3.911409265595838*^9, 3.911409282641177*^9}, {3.9114093384435053`*^9, 
   3.911409346040655*^9}, {3.911409904932541*^9, 3.911409910625359*^9}, 
   3.911410010310408*^9, {3.9114111732761717`*^9, 3.911411210958044*^9}, {
   3.911411248268466*^9, 
   3.911411313752475*^9}},ExpressionUUID->"6bec84e7-f813-4bb5-9a1e-\
8a3d86e897da"],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    TagBox[
     {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1: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
       "]]},
     Annotation[#, "Charting`Private`Tag$609233#1"]& ]}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{0, 0.2}, {0., 0.015535687121405753`}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.911389104096118*^9, 3.911389111550847*^9}, {
   3.9113891526061077`*^9, 3.911389164744322*^9}, 3.911389552246285*^9, 
   3.91138959150823*^9, 3.911389712678022*^9, {3.9113897671549683`*^9, 
   3.911389782107748*^9}, 3.911389832026404*^9, {3.9113899337331533`*^9, 
   3.91138996541642*^9}, {3.911390000025588*^9, 3.9113900702476053`*^9}, {
   3.911390218556164*^9, 3.911390238764408*^9}, {3.9113902716444387`*^9, 
   3.911390278307877*^9}, 3.911390310168391*^9, 3.911390361421632*^9, {
   3.9113904023228903`*^9, 3.911390423130724*^9}, 3.911390470269574*^9, 
   3.9113905904100113`*^9, {3.9113907120741158`*^9, 3.911390744925076*^9}, 
   3.911390878546479*^9, 3.911390914981597*^9, {3.911390966164982*^9, 
   3.91139097295128*^9}, 3.9113910044570913`*^9, {3.9113910348514357`*^9, 
   3.9113910657011347`*^9}, {3.911391239355248*^9, 3.911391244382763*^9}, 
   3.9114061982841*^9, 3.911408930500123*^9, {3.911409250577818*^9, 
   3.911409283297037*^9}, 3.911409346540897*^9, 3.9114099115589027`*^9, 
   3.9114112983998833`*^9},
 CellLabel->
  "Out[383]=",ExpressionUUID->"905cf4ec-722f-4c10-9384-815ca2ccb410"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  TagBox["\<\"The optimal amount of X to tender is: \\!\\(\\*SubscriptBox[\\(\
\[CapitalDelta]\\), \\(X\\)]\\) = \"\>",
   "EchoLabel"], "  ", "0.06301303060700708`"}]], "Echo",
 CellChangeTimes->{
  3.9114112984922953`*^9},ExpressionUUID->"c9963fd8-6162-4022-93e0-\
d5f28deab419"],

Cell[BoxData[
 RowBox[{
  TagBox["\<\"The final price of the pool is: P = \"\>",
   "EchoLabel"], "  ", "1.6000000467681044`"}]], "Echo",
 CellChangeTimes->{
  3.911411298499815*^9},ExpressionUUID->"9b74b631-4e4b-4b6f-9df6-\
9ab627cf835b"]
}, Open  ]],

Cell[BoxData[
 TemplateBox[{
   RowBox[{
     RowBox[{"-", "S"}], "+", 
     FractionBox[
      RowBox[{
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{
           RowBox[{"-", 
             FractionBox[
              RowBox[{
                SuperscriptBox["\[Sigma]", "2"], " ", "\[Tau]"}], "2"]}], "+", 
           RowBox[{
             SqrtBox["2"], " ", "\[Sigma]", " ", 
             SqrtBox["\[Tau]"], " ", 
             RowBox[{"InverseErfc", "[", 
               FractionBox[
                RowBox[{"2", " ", "x", " ", 
                  RowBox[{"(", 
                    RowBox[{"v", "+", "x"}], ")"}]}], 
                RowBox[{"L", " ", 
                  RowBox[{"(", 
                    RowBox[{"v", "+", "x", "-", 
                    RowBox[{"v", " ", "\[Gamma]"}]}], ")"}]}]], "]"}]}]}]], 
        " ", "K", " ", "x", " ", "\[Gamma]"}], 
      RowBox[{"v", "+", "x", "-", 
        RowBox[{"v", " ", "\[Gamma]"}]}]], "+", 
     FractionBox[
      RowBox[{"K", " ", "L", " ", 
        RowBox[{"(", 
          RowBox[{
            RowBox[{"-", "1"}], "+", "\[Gamma]"}], ")"}], " ", 
        RowBox[{"Erfc", "[", 
          RowBox[{
            FractionBox[
             RowBox[{"\[Sigma]", " ", 
               SqrtBox["\[Tau]"]}], 
             SqrtBox["2"]], "-", 
            RowBox[{"InverseErfc", "[", 
              FractionBox[
               RowBox[{"2", " ", "x", " ", 
                 RowBox[{"(", 
                   RowBox[{"v", "+", "x"}], ")"}]}], 
               RowBox[{"L", " ", 
                 RowBox[{"(", 
                   RowBox[{"v", "+", "x", "-", 
                    RowBox[{"v", " ", "\[Gamma]"}]}], ")"}]}]], "]"}]}], 
          "]"}]}], 
      RowBox[{"2", " ", "x"}]]}], 
   RowBox[{"0", "\[LessEqual]", 
     FractionBox[
      RowBox[{"x", " ", 
        RowBox[{"(", 
          RowBox[{"v", "+", "x"}], ")"}]}], 
      RowBox[{"L", " ", 
        RowBox[{"(", 
          RowBox[{"v", "+", "x", "-", 
            RowBox[{"v", " ", "\[Gamma]"}]}], ")"}]}]], "\[LessEqual]", "1"}]},
  "ConditionalExpression"]], "Output",
 CellChangeTimes->{{3.911389104096118*^9, 3.911389111550847*^9}, {
   3.9113891526061077`*^9, 3.911389164744322*^9}, 3.911389552246285*^9, 
   3.91138959150823*^9, 3.911389712678022*^9, {3.9113897671549683`*^9, 
   3.911389782107748*^9}, 3.911389832026404*^9, {3.9113899337331533`*^9, 
   3.91138996541642*^9}, {3.911390000025588*^9, 3.9113900702476053`*^9}, {
   3.911390218556164*^9, 3.911390238764408*^9}, {3.9113902716444387`*^9, 
   3.911390278307877*^9}, 3.911390310168391*^9, 3.911390361421632*^9, {
   3.9113904023228903`*^9, 3.911390423130724*^9}, 3.911390470269574*^9, 
   3.9113905904100113`*^9, {3.9113907120741158`*^9, 3.911390744925076*^9}, 
   3.911390878546479*^9, 3.911390914981597*^9, {3.911390966164982*^9, 
   3.91139097295128*^9}, 3.9113910044570913`*^9, {3.9113910348514357`*^9, 
   3.9113910657011347`*^9}, {3.911391239355248*^9, 3.911391244382763*^9}, 
   3.9114061982841*^9, 3.911408930500123*^9, {3.911409250577818*^9, 
   3.911409283297037*^9}, 3.911409346540897*^9, 3.9114099115589027`*^9, 
   3.911411298945746*^9},
 CellLabel->
  "Out[386]=",ExpressionUUID->"9d94a9a6-5bfc-4293-bf88-7f8681d6855b"]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Raise External Price:", "Subsection",
 CellChangeTimes->{{3.9114058960816593`*^9, 
  3.911405902149222*^9}},ExpressionUUID->"d44a8cc6-b4f0-4204-b250-\
e68ad4e19d99"],

Cell[CellGroupData[{

Cell[TextData[{
 "Let ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["O", "Y"], TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "daf8aba3-0522-4fdc-b0f6-095c37f44dc7"],
 " be the optimal amount of Y token to tender to get max arbitrage profit."
}], "Subsubsection",
 CellChangeTimes->{{3.9114059041043043`*^9, 
  3.9114059228094807`*^9}},ExpressionUUID->"800e047e-b69c-4509-bda4-\
30799fa9a63e"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   SubscriptBox["S", "ext"], " ", "=", " ", "2.3"}], ";", " ", 
  RowBox[{"Assert", "[", 
   RowBox[{
    SubscriptBox["S", "ext"], " ", ">", " ", 
    SubscriptBox["S", "0"]}], "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   SubscriptBox["Prof", "Raise"], "[", "in_", "]"}], " ", ":=", " ", 
  RowBox[{
   SubscriptBox["V", "A"], "[", 
   RowBox[{
    RowBox[{
     SubscriptBox["P", "M"], "[", 
     RowBox[{
      RowBox[{
       SubscriptBox["\[CapitalDelta]", "X"], "[", 
       RowBox[{"in", ",", 
        SubscriptBox["x", "0"], ",", 
        SubscriptBox["y", "0"], ",", 
        SubscriptBox["L", "0"], ",", 
        SubscriptBox["K", "0"], ",", 
        SubscriptBox["\[Sigma]", "0"], ",", 
        SubscriptBox["\[Tau]", "0"], ",", 
        SubscriptBox["\[Gamma]", "0"]}], "]"}], ",", "in"}], "]"}], ",", " ", 
    
    SubscriptBox["S", "ext"], ",", " ", 
    RowBox[{
     SubscriptBox["\[CapitalDelta]", "X"], "[", 
     RowBox[{"in", ",", 
      SubscriptBox["x", "0"], ",", 
      SubscriptBox["y", "0"], ",", 
      SubscriptBox["L", "0"], ",", 
      SubscriptBox["K", "0"], ",", 
      SubscriptBox["\[Sigma]", "0"], ",", 
      SubscriptBox["\[Tau]", "0"], ",", 
      SubscriptBox["\[Gamma]", "0"]}], "]"}]}], "]"}]}], "\n", 
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{
    SubscriptBox["Prof", "Raise"], "[", "v", "]"}], ",", " ", 
   RowBox[{"{", 
    RowBox[{"v", ",", "0", ",", "0.5"}], "}"}]}], "]"}], "\n", 
 RowBox[{
  RowBox[{
   SubscriptBox["O", "Y"], " ", "=", " ", 
   RowBox[{"ArgMax", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        SubscriptBox["Prof", "Raise"], "[", "y", "]"}], ",", " ", 
       RowBox[{"0", "<=", "y", "<=", 
        RowBox[{
         RowBox[{
          SubscriptBox["K", "0"], 
          SubscriptBox["L", "0"]}], "-", 
         SubscriptBox["y", "0"]}]}]}], "}"}], ",", " ", "y"}], "]"}]}], ";", 
  " ", 
  RowBox[{"Echo", "[", 
   RowBox[{
    SubscriptBox["O", "Y"], ",", " ", 
    "\"\<The optimal amount of Y to tender is: \!\(\*SubscriptBox[\(\
\[CapitalDelta]\), \(Y\)]\) = \>\""}], "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   SubscriptBox["P", "F"], " ", "=", " ", 
   RowBox[{
    SubscriptBox["P", "Y"], "[", 
    RowBox[{
     RowBox[{
      SubscriptBox["y", "0"], " ", "+", " ", 
      SubscriptBox["O", "Y"]}], ",", " ", 
     RowBox[{
      SubscriptBox["L", "0"], " ", "+", " ", 
      RowBox[{
       SubscriptBox["\[Delta]", "Liq"], "[", 
       RowBox[{
        SubscriptBox["O", "Y"], ",", 
        SubscriptBox["y", "0"], ",", 
        SubscriptBox["L", "0"], ",", 
        SubscriptBox["\[Gamma]", "0"]}], "]"}]}], ",", " ", 
     SubscriptBox["K", "0"], ",", " ", 
     SubscriptBox["\[Sigma]", "0"], ",", " ", 
     SubscriptBox["\[Tau]", "0"]}], "]"}]}], ";", " ", 
  RowBox[{"Echo", "[", 
   RowBox[{
    RowBox[{"N", "[", 
     RowBox[{
      SubscriptBox["P", "F"], ",", " ", "18"}], "]"}], ",", " ", 
    "\"\<The final price of the pool is: P = \>\""}], "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"FullSimplify", "[", 
   RowBox[{"D", "[", 
    RowBox[{
     RowBox[{
      SubscriptBox["V", "A"], "[", 
      RowBox[{
       RowBox[{
        SubscriptBox["P", "M"], "[", 
        RowBox[{
         RowBox[{
          SubscriptBox["\[CapitalDelta]", "X"], "[", 
          RowBox[{
          "v", ",", "x", ",", "y", ",", "L", ",", "K", ",", "\[Sigma]", ",", 
           "\[Tau]", ",", "\[Gamma]"}], "]"}], ",", "v"}], "]"}], ",", " ", 
       SubscriptBox["S", "ext"], ",", " ", 
       RowBox[{
        SubscriptBox["\[CapitalDelta]", "X"], "[", 
        RowBox[{
        "v", ",", "x", ",", "y", ",", "L", ",", "K", ",", "\[Sigma]", ",", 
         "\[Tau]", ",", "\[Gamma]"}], "]"}]}], "]"}], ",", "v"}], "]"}], 
   "]"}], "\n", 
  RowBox[{"(*", " ", 
   RowBox[{
   "Check", " ", "that", " ", "the", " ", "trading", " ", "function", " ", 
    "is", " ", "invariant", " ", "under", " ", "the", " ", "swap"}], " ", 
   "*)"}]}], "\n", 
 RowBox[{"Assert", "[", 
  RowBox[{
   RowBox[{"\[CurlyPhi]", "[", 
    RowBox[{
     RowBox[{
      SubscriptBox["x", "0"], " ", "+", " ", 
      RowBox[{
       SubscriptBox["\[CapitalDelta]", "X"], "[", 
       RowBox[{
        SubscriptBox["O", "Y"], ",", 
        SubscriptBox["x", "0"], ",", 
        SubscriptBox["y", "0"], ",", 
        SubscriptBox["L", "0"], ",", 
        SubscriptBox["K", "0"], ",", 
        SubscriptBox["\[Sigma]", "0"], ",", 
        SubscriptBox["\[Tau]", "0"], ",", 
        SubscriptBox["\[Gamma]", "0"]}], "]"}]}], ",", " ", 
     RowBox[{
      SubscriptBox["y", "0"], " ", "+", " ", 
      SubscriptBox["O", "Y"]}], ",", " ", 
     RowBox[{
      SubscriptBox["L", "0"], " ", "+", " ", 
      RowBox[{
       SubscriptBox["\[Delta]", "Liq"], "[", 
       RowBox[{
        SubscriptBox["O", "Y"], ",", 
        SubscriptBox["y", "0"], ",", 
        SubscriptBox["L", "0"], ",", 
        SubscriptBox["\[Gamma]", "0"]}], "]"}]}], ",", " ", 
     SubscriptBox["K", "0"], ",", 
     SubscriptBox["\[Sigma]", "0"], ",", 
     SubscriptBox["\[Tau]", "0"]}], "]"}], " ", "==", " ", "0"}], 
  "]"}]}], "Code",
 CellChangeTimes->{{3.9114059364103317`*^9, 3.9114061324463778`*^9}, {
  3.9114062028664722`*^9, 3.911406217366438*^9}, {3.911406305775117*^9, 
  3.9114063088376923`*^9}, {3.9114064854064817`*^9, 3.9114064994368277`*^9}, {
  3.911408148175353*^9, 3.911408152435102*^9}, {3.911408185924809*^9, 
  3.911408195108179*^9}, {3.911408290175568*^9, 3.911408383764887*^9}, {
  3.911408414628379*^9, 3.911408468204883*^9}, {3.9114087405187902`*^9, 
  3.911408821637364*^9}, {3.911409368766801*^9, 3.9114093886236067`*^9}, {
  3.91140946602731*^9, 3.911409597226123*^9}, {3.911409645148349*^9, 
  3.911409671577567*^9}, {3.911411344026142*^9, 3.911411390031069*^9}},
 CellLabel->
  "In[388]:=",ExpressionUUID->"7ca95c98-841f-4a4d-8646-7ee5087c0cbe"],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    TagBox[
     {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1:eJwV13k4FV0cB3BKRcoWr0gke6lU2iRfWSspIlosRQspIdKOsscdvW1SRHkr
SylUiCj77d47cy8phVtCEhKVyPKe/prn85x5ZuacOfP7fUfd4/CWvRNERERk
REVE/h437O3kl32xNJE31tifb6NsImau7CdU0oTUTuPiV7N+myy9mXgjT8kQ
SY3Dx5xnisOG+yY3WckCd5ZF3i2VnQnnPYMl/yo5Iqt875PnYrpoXhRlHq+0
Bxb1P+17ulYgVWFzZKxSIC7seZBe+dQaYeJ5OjFK4dBc8UhjiYMztm1Py+n7
fgn2O0VDKgP2Q3I8zMVa9SY82pykdzb6Qcu+t7P8fDo0i0dqrGKDEMxbhcQf
GYjMh+cDqxNQzJdtERXNQeyy4sCS3WfwpNWcQxvnwsXUubnYNAwvDyTP2t6d
j9dJh95zVM/hp/Ya6fuHniKlerTdrygcE4ayZGZpFeFwe1j+kGMklo/veuLw
oBiakockO/OiwAk35FXNK8XV9XddK3ujoZbwdSijtww/Cuw/dWrG4uugsOW1
wUv4Wi0IK9U7j/SuZ2wpVjm6mvPqvbXjIDX77re2tgpkeB2ZOFE0HnHej/el
alZBbZnd+f158fhlmtXmFVKNF6Ejej3bWShO/3o9OLwayutPVWi7sHBWXN8h
MqYaSVLen9zcWJBisl/cvliNA00GOWwPFrTdH6S03K0GP2fquQQfFpxOP9rm
yFTj5h9b09enWHhc+JQD9RoMtS5aYpHCQuCSivx/ymug3LLmfVkTC/sM56Re
qKlB6bnrsRUtLGxbfur8NF4NimONo6s+sLDayNBjQmMNAr/LHK5sY2GCWbp0
b28NKt4e73vQzQJlH36gUrkW6V8begxGWMj0s5gTGFALo/X++v1KFG4EpEp+
C67FuKKZWNksCvGBI7+8T9fC70yIQdxsCn7H8rnu0bU42ykapaZOYUWo5kmb
lFo02R9evESXQgUl1jCXXYv6t/J3piynIHxQcZ6vzsb3rPWugXYUmB6x7iU6
bEj6z8+dtIVCmb7lxkv6bPzi3PG77EAhNbNymvMKNhp+zJr/0ImCx52q+KaN
bOzzbkwSuFDoSK6hPgez8UBiXdwrLwo9cZyLo1w2gn36v7BCKLS8mvbDrY6N
nw/WV/eEUuBNtXUse8tGn3XeDJuzFB5Ec+XPfWIjjO09LBJB5hPOuyw+xMb1
GkWxHbEUfpxkrs7QfIWmxQMLXlyi8OdA/XW9E6+w663HpL33KDgud72wMOQV
Dqnm9J3OoJAt2hG5NPwVlGrunbucScEtcdB/DesVEkX008qyKbyoVF5nf+sV
yndpP5/8iELUnN0/jrHJeH1g8pZCCjMaejbWKHOgJbGm6UsNhYNpR824ahw0
z94z9qaWrOfB8RUCTQ6MR/ZzKtgUjk6U1WhayIHa1NiDSRwKjQaGQ9/MOBAt
5JctYyjcPH/iP0UfDqIy9Br031CYv3bK2L5nHIQMbEmc3UbhYWaWztsyDgZ0
9rV9JzaUt7NfX8VBnrjffxXtFIw/J6bP53Nw30syau9nCpvi59n0dXDg8PEN
51IXhYBG28TjclxIcHZHZvRR+GXW/6JLkYuoTb8N936ncDL7yteds7nYe1V6
p1o/hfAQoYmJLhdLC3dLUQMUrmj5t08w4UK6cFjB5ReFQv9LS+K8uagNlOdk
/6Fg8n6ly6gvFwWR0ZPsRii8tGiO8A3kgjU2WvCdmK2o3WgXwoXV8HmWwRiF
ppKnIQqXuSicYzliK5IAkanvOSllXPxZY//z0oQEhB8J+SVdxcW6oZ0+74gl
mjXmhL3iwkn6tpraxATIPTx4xLOBC42rhuZ3iDWdxpR0u7nInBV9LEssAda3
1Pc/UuShx3s4+8LkBBgmSmlXqfBQwNlhXU08h/Wn7Z06D5puH1aNEA8ff+0h
ps/DyeZrOnumJOC+fYybsykP94xP6+iLJyDJ+ujsg5Y8TFB9Hu5CHLnGsyl0
Aw/+wWlGccS79NbsyHTkQe17/MMvxDNEv28d9eLBVTK36oYEmd9gs7ycLzn/
eVFXNXF3N7tO+wgPujta9/cTV71Nt7c7zYOoJeeQ5dQEHH+4zfb2BR7uTy7O
+EQsdC+zWF/Eg4RlzDeRaQngbL0/0a2Uh+2/irPViQtskl4GVPCQOjypYi3x
vysCTW/weHBUVxANJbaU1jX+1kruZ1v35AfxkkkKfyZ28nB1qquVzPQEqP4R
LZrZw0OYwlGD+cS/O96vMBsk93/zr7w7cdZzaullSRo7rqmplhIn5p/qz5Ch
8cuXc+41cXim96PnCjTYZWEWX4ndrpgv6lSjoWFo9kZeKgE2cQa9I5rEJ3wy
dIlXnp19X3YejWORjQ2riWV9B+etNqRRrVxmvot4zLPty+ZVNKoeOJ3zJ+7a
zr+3x4RGxhxf1bPEFZZZ2qx1NJou7dyfRvxodWL7LVsas2M2KzwkTlkckf50
C42ta0XUnhMHz3af+9GFRszzOsu3xB52Bk5Nu2nQoi912og3nRONfbOPxqQT
Ege/ERs9EZQIfGgkLiqQGybW/nL7O9ePRq1u0ywxabL/VIK0aoNoaHudi5pO
PLrJanvFCRopvc+2/kNcn99ZVhRO41vZTGVt4rLPhT8ex9BYOb5NZgFxlvJ5
3UcsGhu9PLyXEl+xdXHJvkjm22OmtYr4bOiChLuJNDJPi1uYEPvmjZXfSqbx
c9KLSjPi7R30YPItGl6+JzKtiC2U0uZfu0tjcopZ/3pig40B7peyaaw9ppO8
kVglxPwi9YjGs5blWZuIp+TKV8c+odF//4yKHXF/W/twxDMaG15O+/7XLYpP
F4aV0VAa6NW1J2ZviPY4VUmjTWFpxd/xx6e3Xwlm07g42vFyM3Hqw3nsAJpG
+vGZWn+vH/fpz+ihehqM8+suG+Jj/3AXezfSiN09X/7v83muT9m7p4XGPjfd
NEviTacOX3P/ROOj3LsLa4mNcky5Ozpp9Jlu6jAm1m6VFXXqofH+7r8pK4hl
FT4Z2vfTCJjwuGgx8Yh1vtfGQRrjkuVG84k7T0TcsB6h4XOcrapJ3OU03ytN
hIGkSOM+FeJdfTMmqE1ksG7ziJw8cUPMyPUbkxi8+8dMQ5LYRqN9mbI4gwjR
gquif99fMZe+OpVB21Mfv0GyH5Y7PfFWmM5A+sOB+93Ec2OikmXkGGyTOev4
mjhxrt8KljwDR6fHz2uIpYq38SUVGXjHHoh/RjzUqzdpigqDEOUL224SM46c
g6NaDDr5G+66E1v15k8+qctA5aLEik3ExVHJqb/nMZB4+mS+MfHdIt/6gUUM
LujLWfxDfGaOrHHXKgZWe6yXlJPv70fh0Ov9xgy6PvR3ZRMfcGg93G7CYCzy
t/gV4q2Rebc/mDN4OWIdtI9Yv3ur5BtbBi0VvjIixAWOG0tj7RhkxJ1JayX1
wrzE7IiJAwNri2mnK4h3sBa9/28bg/zk9hmRxDEGElmBngwyv/m8/Fuf5K+N
u+nuY2C71jqjWZLsD9Ffck1eDFbv1H1fSFwgaD1h7ssgLgZz/Ig7Aos3yB1n
8DshaXE9qXcBzbljlScZ9PafCsgiHrXMyD1+hsEkie6xMGJ5xSvKH88xKDqb
N6xPbF54uCuHxcDfqCTkBKmnqaNzY23TGexycuENkHquv0/JRPQuA2XrVrqU
+ClPuj8/g8FJKRHV88S8myPbVXIYjPtapqoRj65t0PtayODP8yoTU9IfdkTG
1EbTDIzs5PrdSX/p6A05bSxg0G1UVzGH2N/56OK+ega4sLT9A+lH0bqe15zf
MXD4OkPanfgJ29hbu52B+3EVCQfSz2ZI94lXDDMofxWbrkT6n6AkNmr9KIN6
88mZ98Yp/HtQazI9zmAgSbJBhViOvWPiOzE+ClaVUKKkf8pFVI5+k+IjK/la
XDHpvzJ/kvpnafDxZrFs+W/Sn6d9tmw6YsPHSHDZ29huCpzLH3YM2fJhJVvI
a/xKIc7iZOMZOz6KJotd1CGWvPWwIWYrH7U+g5GlXyhMdZ3Fv+nOx8ISNbWP
HRTE6/oqXx3hY2BRufbXDxTESq/naNzgI6rkqcWsegrvjC3WCVP4WPVo1twl
dRRyiro/JKWRcWvdG9YCCjuerJGTu8vHysSifb4k7zy6LwwUyeXDmDbenkXy
kNsNDaPmaj6EZgfo1goKBcezKq4M8KG69U7TunwKrEEH1y2/+OjvMY1bmkfB
M2jk5/QhPpa7+Tep5FKQ8rfViRjj406RtPvXHAp7vb7FHJEQYG5mel9wFlkv
56Wb7dQEWEnr79p8i4KP4bNGCRsBgnScrH+zSJ5lXmcX2Aqwce4VzZJ4CgqH
+kL22wkw3VKQGxpHofQ/Le3KrQKMbX7UOpHkzRmKCQGhuwToitW7OBxO4dnQ
HsnBIAEU5To3Z5wg61kqtaYtVYCM36lj0/ZSyFrvkfr8lwC5+e82DSwj+U1f
3QRDArTUr1UONaTwXOrD+9I/Aqi8tqiRXErydp2r4guROsi8PMpRMyD51nU7
q3xqHTyjB4KN5pG8FWB3qka1Dg4p8b5GquT8JJNtAqs6NLRsP7J3EoWfX5Vl
Oq7UwTVD/epBhvyfOFhPvGRRj37j305xm1gIWRdxM7+jHvPb1xjNLI+HevOG
t7cjXqMw08M6TS8eRivCLyktacD0so9Xs/3i4KJKD4nWNWDJhjuhKnnn8ZMd
3+oX9gbiu+P0vOpikSjmFrhF8y0CPFNs87/HYEbL41sTKt6CJbVnWrdYDCad
DnNc5d+I6LL2TNGBKIhkuOW0yr2Dtem1wxc/RSIgKSde7uU7RPVGUKHZESiZ
Hy0u6/se89ymVq86EA7ZDQH6Z6Wa0GvlMrls4Tk0LWDqjhc3ofJPh2NhTRge
pkCzza0Zq77sfpHrEwrXnOWys8eaSb4QUS+TPoPQiLSwpswWDHebZh3rOYH7
nbOvS20Ugp9mptjaFozo5IhdLZuEiG+WylV6E4w9W3q0HtiTcW7Jqs21wVAp
Ln5o6yzEoSAjmfz7wYildlbFeQixsKi7ac/RYHgtv/Z96nEh1uQpSHtOCcbc
cPl1U+4IYfr5ZrpA5yjGVp6a/uaeEEdv98rXKB1FY88nwZ0sIa77cIOeSR5F
gnOeq9UjIQTlORI3vgVhfN6WIxHFQhy+vPy0xdMgNPGplIl1QrS3Ps1eYhVE
cvagZ91rIZIX3ls6ZWUQLq1217v9Voiegd/ZjXpBsPlvYb5ZixB7/RYFH5se
hKJj3NqwL0LMnTXzUHJ9IK4sWEbZdwvxQscwdndVIPxbbziqfxNizo6rSRoF
gdDdeFBY9kOIMK07l9OuB0JMtD49YVCIj6vOh7rGB+LD49UHdg0LYew5z10x
JBDFB24vMhgVYptD6mLaLxBX1SR/jo8L8emJxO9wj0D8DxksKRY=
       "]]},
     Annotation[#, "Charting`Private`Tag$616463#1"]& ]}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{0, 0.5}, {0., 0.015683429835678362`}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.911408195557987*^9, 3.911408316023435*^9, {3.9114083708396797`*^9, 
   3.9114083846313763`*^9}, 3.9114084326549387`*^9, 3.911408469000113*^9, 
   3.911408932881949*^9, {3.911409373307332*^9, 3.911409389518962*^9}, 
   3.911409537230049*^9, {3.9114095872537603`*^9, 3.911409597626522*^9}, 
   3.911409645954843*^9, {3.911409712176511*^9, 3.9114097177243147`*^9}, 
   3.911411391617824*^9},
 CellLabel->
  "Out[390]=",ExpressionUUID->"2288c76a-263d-45f4-950e-bb1b76ff85c1"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  TagBox["\<\"The optimal amount of Y to tender is: \\!\\(\\*SubscriptBox[\\(\
\[CapitalDelta]\\), \\(Y\\)]\\) = \"\>",
   "EchoLabel"], "  ", "0.2480405052824803`"}]], "Echo",
 CellChangeTimes->{
  3.911411391721108*^9},ExpressionUUID->"f4de47bf-df1c-4107-a630-\
2555fb30f314"],

Cell[BoxData[
 RowBox[{
  TagBox["\<\"The final price of the pool is: P = \"\>",
   "EchoLabel"], "  ", "2.300000004558009`"}]], "Echo",
 CellChangeTimes->{
  3.911411391728581*^9},ExpressionUUID->"d708b679-8eec-41b7-8c10-\
97f926b76890"]
}, Open  ]],

Cell[BoxData[
 TemplateBox[{
   RowBox[{
     RowBox[{"(", 
       RowBox[{
         RowBox[{
           RowBox[{"-", "1.`"}], " ", 
           RowBox[{"(", 
             RowBox[{
               RowBox[{"2", " ", 
                 SuperscriptBox["\[ExponentialE]", 
                  RowBox[{
                    RowBox[{"-", 
                    FractionBox[
                    RowBox[{
                    SuperscriptBox["\[Sigma]", "2"], " ", "\[Tau]"}], "2"]}], 
                    "+", 
                    RowBox[{
                    SqrtBox["2"], " ", "\[Sigma]", " ", 
                    SqrtBox["\[Tau]"], " ", 
                    RowBox[{"InverseErfc", "[", 
                    RowBox[{"-", 
                    FractionBox[
                    RowBox[{"2", " ", "x", " ", 
                    RowBox[{"(", 
                    RowBox[{"v", "+", "y"}], ")"}]}], 
                    RowBox[{
                    RowBox[{
                    RowBox[{"-", "K"}], " ", "L", " ", 
                    RowBox[{"(", 
                    RowBox[{"v", "+", "x"}], ")"}]}], "+", 
                    RowBox[{"K", " ", "L", " ", "v", " ", "\[Gamma]"}]}]]}], 
                    "]"}]}]}]], " ", "x", " ", 
                 RowBox[{"(", 
                   RowBox[{"x", "+", 
                    RowBox[{"y", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "1"}], "+", "\[Gamma]"}], ")"}]}]}], ")"}], 
                 " ", 
                 RowBox[{"(", 
                   RowBox[{"v", "+", "y", "-", 
                    RowBox[{"v", " ", "\[Gamma]"}]}], ")"}]}], "+", 
               RowBox[{"K", " ", "L", " ", 
                 RowBox[{"(", 
                   RowBox[{
                    RowBox[{"-", "1"}], "+", "\[Gamma]"}], ")"}], " ", 
                 SuperscriptBox[
                  RowBox[{"(", 
                    RowBox[{"v", "+", "x", "-", 
                    RowBox[{"v", " ", "\[Gamma]"}]}], ")"}], "2"], " ", 
                 RowBox[{"Erfc", "[", 
                   RowBox[{
                    FractionBox[
                    RowBox[{"\[Sigma]", " ", 
                    SqrtBox["\[Tau]"]}], 
                    SqrtBox["2"]], "-", 
                    RowBox[{"InverseErfc", "[", 
                    RowBox[{"-", 
                    FractionBox[
                    RowBox[{"2", " ", "x", " ", 
                    RowBox[{"(", 
                    RowBox[{"v", "+", "y"}], ")"}]}], 
                    RowBox[{
                    RowBox[{
                    RowBox[{"-", "K"}], " ", "L", " ", 
                    RowBox[{"(", 
                    RowBox[{"v", "+", "x"}], ")"}]}], "+", 
                    RowBox[{"K", " ", "L", " ", "v", " ", "\[Gamma]"}]}]]}], 
                    "]"}]}], "]"}]}]}], ")"}], " ", 
           RowBox[{"(", 
             RowBox[{
               RowBox[{"v", " ", "y"}], "-", 
               RowBox[{"2.3`", " ", "x", " ", "y"}], "+", 
               RowBox[{"1.15`", " ", "L", " ", 
                 RowBox[{"(", 
                   RowBox[{"v", "+", "y", "-", 
                    RowBox[{"1.`", " ", "v", " ", "\[Gamma]"}]}], ")"}], " ", 
                 
                 RowBox[{"Erfc", "[", 
                   RowBox[{
                    FractionBox[
                    RowBox[{"\[Sigma]", " ", 
                    SqrtBox["\[Tau]"]}], 
                    SqrtBox["2"]], "-", 
                    RowBox[{"InverseErfc", "[", 
                    RowBox[{"-", 
                    FractionBox[
                    RowBox[{"2", " ", "x", " ", 
                    RowBox[{"(", 
                    RowBox[{"v", "+", "y"}], ")"}]}], 
                    RowBox[{
                    RowBox[{
                    RowBox[{"-", "K"}], " ", "L", " ", 
                    RowBox[{"(", 
                    RowBox[{"v", "+", "x"}], ")"}]}], "+", 
                    RowBox[{"K", " ", "L", " ", "v", " ", "\[Gamma]"}]}]]}], 
                    "]"}]}], "]"}]}]}], ")"}]}], "-", 
         RowBox[{"1.`", " ", "y", " ", 
           RowBox[{"(", 
             RowBox[{
               RowBox[{"2", " ", 
                 SuperscriptBox["\[ExponentialE]", 
                  RowBox[{
                    RowBox[{"-", 
                    FractionBox[
                    RowBox[{
                    SuperscriptBox["\[Sigma]", "2"], " ", "\[Tau]"}], "2"]}], 
                    "+", 
                    RowBox[{
                    SqrtBox["2"], " ", "\[Sigma]", " ", 
                    SqrtBox["\[Tau]"], " ", 
                    RowBox[{"InverseErfc", "[", 
                    RowBox[{"-", 
                    FractionBox[
                    RowBox[{"2", " ", "x", " ", 
                    RowBox[{"(", 
                    RowBox[{"v", "+", "y"}], ")"}]}], 
                    RowBox[{
                    RowBox[{
                    RowBox[{"-", "K"}], " ", "L", " ", 
                    RowBox[{"(", 
                    RowBox[{"v", "+", "x"}], ")"}]}], "+", 
                    RowBox[{"K", " ", "L", " ", "v", " ", "\[Gamma]"}]}]]}], 
                    "]"}]}]}]], " ", "v", " ", "x", " ", 
                 RowBox[{"(", 
                   RowBox[{
                    RowBox[{"-", "y"}], "+", 
                    RowBox[{"v", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "1"}], "+", "\[Gamma]"}], ")"}]}]}], ")"}], 
                 " ", 
                 RowBox[{"(", 
                   RowBox[{"x", "+", 
                    RowBox[{"y", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "1"}], "+", "\[Gamma]"}], ")"}]}]}], ")"}]}],
                "+", 
               RowBox[{"K", " ", "y", " ", 
                 SuperscriptBox[
                  RowBox[{"(", 
                    RowBox[{"v", "+", "x", "-", 
                    RowBox[{"v", " ", "\[Gamma]"}]}], ")"}], "2"], " ", 
                 RowBox[{"(", 
                   RowBox[{
                    RowBox[{"2", " ", "x"}], "-", 
                    RowBox[{"L", " ", 
                    RowBox[{"Erfc", "[", 
                    RowBox[{
                    FractionBox[
                    RowBox[{"\[Sigma]", " ", 
                    SqrtBox["\[Tau]"]}], 
                    SqrtBox["2"]], "-", 
                    RowBox[{"InverseErfc", "[", 
                    RowBox[{"-", 
                    FractionBox[
                    RowBox[{"2", " ", "x", " ", 
                    RowBox[{"(", 
                    RowBox[{"v", "+", "y"}], ")"}]}], 
                    RowBox[{
                    RowBox[{
                    RowBox[{"-", "K"}], " ", "L", " ", 
                    RowBox[{"(", 
                    RowBox[{"v", "+", "x"}], ")"}]}], "+", 
                    RowBox[{"K", " ", "L", " ", "v", " ", "\[Gamma]"}]}]]}], 
                    "]"}]}], "]"}]}]}], ")"}]}]}], ")"}]}]}], ")"}], "/", 
     RowBox[{"(", 
       RowBox[{"K", " ", "y", " ", 
         SuperscriptBox[
          RowBox[{"(", 
            RowBox[{"v", "+", "x", "-", 
              RowBox[{"v", " ", "\[Gamma]"}]}], ")"}], "2"], " ", 
         RowBox[{"(", 
           RowBox[{
             RowBox[{"2", " ", "x", " ", "y"}], "-", 
             RowBox[{"L", " ", 
               RowBox[{"(", 
                 RowBox[{"v", "+", "y", "-", 
                   RowBox[{"v", " ", "\[Gamma]"}]}], ")"}], " ", 
               RowBox[{"Erfc", "[", 
                 RowBox[{
                   FractionBox[
                    RowBox[{"\[Sigma]", " ", 
                    SqrtBox["\[Tau]"]}], 
                    SqrtBox["2"]], "-", 
                   RowBox[{"InverseErfc", "[", 
                    RowBox[{"-", 
                    FractionBox[
                    RowBox[{"2", " ", "x", " ", 
                    RowBox[{"(", 
                    RowBox[{"v", "+", "y"}], ")"}]}], 
                    RowBox[{
                    RowBox[{
                    RowBox[{"-", "K"}], " ", "L", " ", 
                    RowBox[{"(", 
                    RowBox[{"v", "+", "x"}], ")"}]}], "+", 
                    RowBox[{"K", " ", "L", " ", "v", " ", "\[Gamma]"}]}]]}], 
                    "]"}]}], "]"}]}]}], ")"}]}], ")"}]}], 
   RowBox[{"0", "\[LessEqual]", 
     FractionBox[
      RowBox[{"x", " ", 
        RowBox[{"(", 
          RowBox[{"v", "+", "y"}], ")"}]}], 
      RowBox[{"K", " ", "L", " ", 
        RowBox[{"(", 
          RowBox[{"v", "+", "x", "-", 
            RowBox[{"v", " ", "\[Gamma]"}]}], ")"}]}]], "\[LessEqual]", "1"}]},
  "ConditionalExpression"]], "Output",
 CellChangeTimes->{
  3.911408195557987*^9, 3.911408316023435*^9, {3.9114083708396797`*^9, 
   3.9114083846313763`*^9}, 3.9114084326549387`*^9, 3.911408469000113*^9, 
   3.911408932881949*^9, {3.911409373307332*^9, 3.911409389518962*^9}, 
   3.911409537230049*^9, {3.9114095872537603`*^9, 3.911409597626522*^9}, 
   3.911409645954843*^9, {3.911409712176511*^9, 3.9114097177243147`*^9}, 
   3.9114113970503407`*^9},
 CellLabel->
  "Out[393]=",ExpressionUUID->"40b47ffa-66ee-410b-8ac1-faa147ab9a12"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Parameter Updates", "Section",
 CellChangeTimes->{{3.9114106614664173`*^9, 
  3.911410663603334*^9}},ExpressionUUID->"b9760121-93f2-4105-bc65-\
e6b3dbe04aec"],

Cell[CellGroupData[{

Cell["\<\
We want to let parameters change, then determine the new L from them.\
\>", "Subsection",
 CellChangeTimes->{{3.9114115124928417`*^9, 
  3.911411520281617*^9}},ExpressionUUID->"bf3ecf5a-6ea2-4f9a-a236-\
2d3956e9c134"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     SubscriptBox["K", "1"], ",", 
     SubscriptBox["\[Sigma]", "1"], ",", 
     SubscriptBox["\[Tau]", "1"]}], "}"}], " ", "=", " ", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      SubscriptBox["K", "0"], " ", "+", " ", 
      FractionBox["1", "10"]}], ",", " ", 
     RowBox[{
      SubscriptBox["\[Sigma]", "0"], " ", "-", " ", 
      FractionBox["1", "20"]}], ",", " ", 
     SubscriptBox["\[Tau]", "0"]}], "}"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   SubscriptBox["L", "1"], " ", "=", " ", 
   RowBox[{"L", " ", "/.", " ", 
    RowBox[{"FindRoot", "[", 
     RowBox[{
      RowBox[{"\[CurlyPhi]", "[", 
       RowBox[{
        SubscriptBox["x", "0"], ",", 
        SubscriptBox["y", "0"], ",", "L", ",", 
        SubscriptBox["K", "1"], ",", 
        SubscriptBox["\[Sigma]", "1"], ",", 
        SubscriptBox["\[Tau]", "1"]}], "]"}], ",", " ", 
      RowBox[{"{", 
       RowBox[{"L", ",", 
        SubscriptBox["L", "0"]}], "}"}]}], "]"}]}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"Echo", "[", 
   RowBox[{
    RowBox[{"N", "[", 
     RowBox[{
      SubscriptBox["L", "0"], ",", "18"}], "]"}], ",", " ", 
    "\"\<The original liquidity was: \!\(\*SubscriptBox[\(L\), \(0\)]\) = \
\>\""}], "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"Echo", "[", 
   RowBox[{
    RowBox[{"N", "[", 
     RowBox[{
      SubscriptBox["L", "1"], ",", "18"}], "]"}], ",", " ", 
    "\"\<The new liquidity after parameter changes is: \!\(\*SubscriptBox[\(L\
\), \(1\)]\) = \>\""}], "]"}], ";"}]}], "Code",
 CellChangeTimes->{{3.911411526467024*^9, 3.911411558889496*^9}, {
  3.911411603270329*^9, 3.911411726104031*^9}, {3.911411854447959*^9, 
  3.911411871785728*^9}, {3.911412038711419*^9, 3.9114121340202703`*^9}, {
  3.911412179397016*^9, 3.91141220168312*^9}, {3.911412234164196*^9, 
  3.9114122397709723`*^9}, {3.911412325036952*^9, 3.9114123356623907`*^9}, {
  3.91141236997156*^9, 3.911412427698132*^9}, {3.911412458150606*^9, 
  3.911412466280922*^9}, {3.9114126475927057`*^9, 3.9114126927861547`*^9}},
 CellLabel->
  "In[477]:=",ExpressionUUID->"88153533-d3ba-42e3-8671-5c87d6eba466"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  TagBox["\<\"The original liquidity was: \\!\\(\\*SubscriptBox[\\(L\\), \\(0\
\\)]\\) = \"\>",
   "EchoLabel"], "  ", 
  "1.07205816303780375296378578465914117862`18."}]], "Echo",
 CellChangeTimes->{
  3.911412693179192*^9},ExpressionUUID->"9c86a598-6ad7-4cdc-b7d3-\
f17754fbb4f8"],

Cell[BoxData[
 RowBox[{
  TagBox["\<\"The new liquidity after parameter changes is: \
\\!\\(\\*SubscriptBox[\\(L\\), \\(1\\)]\\) = \"\>",
   "EchoLabel"], "  ", "1.0633573081332175`"}]], "Echo",
 CellChangeTimes->{
  3.9114126932060432`*^9},ExpressionUUID->"edb1d49d-7246-436e-85d1-\
f3028622cb8d"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]]
},
WindowSize->{998, 1233},
WindowMargins->{{Automatic, 12}, {Automatic, 12}},
PrintingCopies->1,
PrintingPageRange->{1, Automatic},
FrontEndVersion->"13.2 for Mac OS X ARM (64-bit) (January 31, 2023)",
StyleDefinitions->FrontEnd`FileName[{$RootDirectory, "Users", "colin", 
   "Documents"}, "DarkMode.nb", CharacterEncoding -> "UTF-8"],
ExpressionUUID->"ffe9a21f-ecc2-4baf-8c91-6ae011a1be1d"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[583, 22, 185, 3, 200, "Title",ExpressionUUID->"2003d08a-fff7-4f74-8623-7a0823c9cafa"],
Cell[CellGroupData[{
Cell[793, 29, 221, 5, 132, "Section",ExpressionUUID->"514be430-48c5-4dc6-92af-6b1c3a5b8586"],
Cell[CellGroupData[{
Cell[1039, 38, 222, 5, 67, "Subsection",ExpressionUUID->"f16f1652-ed41-4414-8c9b-6b6d5d8061ac"],
Cell[1264, 45, 573, 13, 43, "Code",ExpressionUUID->"8255c47c-fa0b-4fdd-8638-752453aca613"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1874, 63, 202, 3, 67, "Subsection",ExpressionUUID->"b3dd161e-0b53-4183-b30c-be7844f26477"],
Cell[2079, 68, 679, 16, 70, "Code",ExpressionUUID->"25d6c1c4-f902-41e0-8746-c63f6b03d94e"]
}, Open  ]],
Cell[CellGroupData[{
Cell[2795, 89, 307, 7, 67, "Subsection",ExpressionUUID->"f601d02f-f91e-4780-a166-a78097a54f48"],
Cell[3105, 98, 1088, 32, 139, "Code",ExpressionUUID->"d5d16a82-3e60-44ff-affc-b50eb9144304"]
}, Open  ]],
Cell[CellGroupData[{
Cell[4230, 135, 296, 7, 67, "Subsection",ExpressionUUID->"009a24ad-ebe5-4d73-bdda-a7839592332a"],
Cell[CellGroupData[{
Cell[4551, 146, 244, 6, 56, "Subsubsection",ExpressionUUID->"3b15f5e3-f420-4095-899a-506c7286cc40"],
Cell[4798, 154, 2312, 63, 163, "Code",ExpressionUUID->"3950a1e9-9c32-45c4-b5ef-404c37d6ef65"]
}, Open  ]],
Cell[CellGroupData[{
Cell[7147, 222, 253, 6, 89, "Subsubsection",ExpressionUUID->"6228385e-cfd2-4bd0-97f4-58c98a5a994e"],
Cell[7403, 230, 1219, 36, 105, "Code",ExpressionUUID->"cdbca2c9-2426-4adf-8516-6c22e3b352b1"]
}, Open  ]],
Cell[CellGroupData[{
Cell[8659, 271, 186, 3, 56, "Subsubsection",ExpressionUUID->"18015876-38da-4fa9-82b7-a417d745ef90"],
Cell[8848, 276, 685, 19, 57, "Code",ExpressionUUID->"a65cb5ec-cdac-40e0-bb49-f3d8157592d9"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[9594, 302, 285, 7, 84, "Section",ExpressionUUID->"da815218-0c74-4720-a5c9-76f45781c5e2"],
Cell[CellGroupData[{
Cell[9904, 313, 305, 7, 67, "Subsection",ExpressionUUID->"d461a415-44ca-4804-8248-6137a0f9449f"],
Cell[CellGroupData[{
Cell[10234, 324, 1463, 38, 89, "Code",ExpressionUUID->"8d262a91-37a1-41fb-b1b3-ae8191b1ccda"],
Cell[CellGroupData[{
Cell[11722, 366, 227, 5, 32, "Echo",ExpressionUUID->"2bc55663-903b-4d2f-a2e5-98e371efe26a"],
Cell[11952, 373, 260, 7, 46, "Echo",ExpressionUUID->"2c2a8ad1-515c-4567-a2fe-f0133dd48ea4"],
Cell[12215, 382, 232, 5, 32, "Echo",ExpressionUUID->"c91143fb-b30d-45fc-a7da-812a2f35b0c6"],
Cell[12450, 389, 239, 6, 32, "Echo",ExpressionUUID->"b62e4971-2c43-46d4-9102-4af4235a9d74"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[12750, 402, 307, 7, 67, "Subsection",ExpressionUUID->"a6874bc0-590c-4cb3-9d20-f010a014a154"],
Cell[CellGroupData[{
Cell[13082, 413, 877, 25, 70, "Code",ExpressionUUID->"085ca656-cc94-43cf-a8c6-c116e23e4910"],
Cell[CellGroupData[{
Cell[13984, 442, 268, 7, 32, "Echo",ExpressionUUID->"3a4c83fa-034b-4672-96e5-0ec0bf7bc925"],
Cell[14255, 451, 230, 6, 32, "Echo",ExpressionUUID->"a42467cc-0d04-43c8-99ce-4289a5ae6c25"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[14534, 463, 251, 6, 56, "Subsubsection",ExpressionUUID->"d0f44536-b00f-4974-8c75-dd65dd319645"],
Cell[CellGroupData[{
Cell[14810, 473, 1671, 46, 70, "Code",ExpressionUUID->"57112165-db6f-447c-9713-f9c85c6d4828"],
Cell[CellGroupData[{
Cell[16506, 523, 304, 8, 32, "Echo",ExpressionUUID->"eedb6e16-4bb8-430f-be32-631487ba6c3a"],
Cell[16813, 533, 314, 8, 32, "Echo",ExpressionUUID->"fdc29d2a-eb44-4ea7-a0ac-849a099a36a3"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[17188, 548, 224, 4, 56, "Subsubsection",ExpressionUUID->"0dabba71-0908-48dd-b11c-9fc06ac2d79b"],
Cell[CellGroupData[{
Cell[17437, 556, 1291, 36, 70, "Code",ExpressionUUID->"05df5500-1e66-49a9-afd7-256365f8b6dc"],
Cell[18731, 594, 211, 6, 32, "Echo",ExpressionUUID->"0fced0fb-8e92-49e7-aad3-ea8b95cd73ff"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[18991, 606, 284, 6, 89, "Subsubsection",ExpressionUUID->"6c78f375-83c5-40c5-a26f-9dfafb83427b"],
Cell[19278, 614, 1387, 43, 81, "Code",ExpressionUUID->"05cdeb1a-e1b0-40a7-af51-51ab9b75cc2e"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[20726, 664, 155, 3, 84, "Section",ExpressionUUID->"e0558e89-2c12-471a-af64-7b6a1457eb4d"],
Cell[CellGroupData[{
Cell[20906, 671, 290, 7, 67, "Subsection",ExpressionUUID->"2f7348b3-443c-4a22-943e-943b7962999e"],
Cell[21199, 680, 2987, 82, 191, "Code",ExpressionUUID->"0716117c-5381-46be-8b57-f2cefa727879"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[24235, 768, 204, 4, 84, "Section",ExpressionUUID->"65d2b88d-22b2-481a-935c-71bdce9f21f1"],
Cell[24442, 774, 599, 14, 67, "Text",ExpressionUUID->"f20cba79-bbb2-4d1b-9349-a349e8b0b7a4"],
Cell[CellGroupData[{
Cell[25066, 792, 692, 17, 91, "Subsubsection",ExpressionUUID->"d7131855-64d1-451f-98f3-152b4aa9f3a5"],
Cell[25761, 811, 684, 20, 91, "Code",ExpressionUUID->"fadd5b7c-a968-401d-9e42-d6ca30b3a2a6"]
}, Open  ]],
Cell[CellGroupData[{
Cell[26482, 836, 220, 4, 67, "Subsection",ExpressionUUID->"eed8b815-af5d-458f-8082-a956f0fb88b9"],
Cell[CellGroupData[{
Cell[26727, 844, 491, 13, 90, "Subsubsection",ExpressionUUID->"b20dcf41-6dfe-404c-8167-50b070efca5f"],
Cell[CellGroupData[{
Cell[27243, 861, 5625, 150, 230, "Code",ExpressionUUID->"6bec84e7-f813-4bb5-9a1e-8a3d86e897da"],
Cell[32871, 1013, 6456, 123, 282, "Output",ExpressionUUID->"905cf4ec-722f-4c10-9384-815ca2ccb410"],
Cell[CellGroupData[{
Cell[39352, 1140, 305, 7, 32, "Echo",ExpressionUUID->"c9963fd8-6162-4022-93e0-d5f28deab419"],
Cell[39660, 1149, 239, 6, 32, "Echo",ExpressionUUID->"9b74b631-4e4b-4b6f-9df6-9ab627cf835b"]
}, Open  ]],
Cell[39914, 1158, 3211, 75, 136, "Output",ExpressionUUID->"9d94a9a6-5bfc-4293-bf88-7f8681d6855b"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[43186, 1240, 171, 3, 67, "Subsection",ExpressionUUID->"d44a8cc6-b4f0-4204-b250-e68ad4e19d99"],
Cell[CellGroupData[{
Cell[43382, 1247, 413, 11, 57, "Subsubsection",ExpressionUUID->"800e047e-b69c-4509-bda4-30799fa9a63e"],
Cell[CellGroupData[{
Cell[43820, 1262, 5867, 163, 230, "Code",ExpressionUUID->"7ca95c98-841f-4a4d-8646-7ee5087c0cbe"],
Cell[49690, 1427, 7603, 144, 283, "Output",ExpressionUUID->"2288c76a-263d-45f4-950e-bb1b76ff85c1"],
Cell[CellGroupData[{
Cell[57318, 1575, 302, 7, 32, "Echo",ExpressionUUID->"f4de47bf-df1c-4107-a630-2555fb30f314"],
Cell[57623, 1584, 238, 6, 32, "Echo",ExpressionUUID->"d708b679-8eec-41b7-8c10-97f926b76890"]
}, Open  ]],
Cell[57876, 1593, 9114, 218, 525, "Output",ExpressionUUID->"40b47ffa-66ee-410b-8ac1-faa147ab9a12"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[67063, 1819, 164, 3, 84, "Section",ExpressionUUID->"b9760121-93f2-4105-bc65-e6b3dbe04aec"],
Cell[CellGroupData[{
Cell[67252, 1826, 227, 5, 67, "Subsection",ExpressionUUID->"bf3ecf5a-6ea2-4f9a-a236-2d3956e9c134"],
Cell[CellGroupData[{
Cell[67504, 1835, 2145, 57, 142, "Code",ExpressionUUID->"88153533-d3ba-42e3-8671-5c87d6eba466"],
Cell[CellGroupData[{
Cell[69674, 1896, 306, 8, 32, "Echo",ExpressionUUID->"9c86a598-6ad7-4cdc-b7d3-f17754fbb4f8"],
Cell[69983, 1906, 298, 7, 32, "Echo",ExpressionUUID->"edb1d49d-7246-436e-85d1-f3028622cb8d"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}
]
*)


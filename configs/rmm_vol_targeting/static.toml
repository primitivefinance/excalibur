simulation = "RmmVolatilityTargeting"
output_directory = "analysis/rmm/vol_targeting/static"
# max_parallel = 5


[agent.block_admin.BlockAdmin]
timestep_size = 15

[agent.token_admin.TokenAdmin.arbx]
name = "Arbiter Token X"
symbol = "ARBX"
decimals = 18

[agent.token_admin.TokenAdmin.arby]
name = "Arbiter Token Y"
symbol = "ARBY"
decimals = 18

# Price process parameters
[agent.price_changer.PriceChanger]
# The seed to use (optional)
seed = 1
# The number of steps in the process
num_steps = 36500# 1825 (10 steps per month)
# The number of distinct paths to use
num_paths = 5
# The initial price of the asset
initial_price.fixed = 1.0
# The start time of the process
t_0.fixed = 0.0
# The end time of the process
t_n.fixed = 24.0 #1.0 (24 months)
## Parameters for the type of process to use.
# The drift for GBM
process.OU.mean.fixed = 0 
# The volatility for GBM
process.OU.volatility.fixed = 0.01 # 0.01 per month
# The mean reversion rate for OU
process.OU.mean_reversion_rate.fixed = 0.1 

# Rmm portfolio manager params 
[agent.portfolio_manager.RmmPortfolioManager]
sigma.fixed = 1.0
tau.fixed = 100000.0
strike_price.fixed = 1.0
fee.fixed = 30
## Volatility targeting specialty settings
# The frequency which weights are updated
# update_frequency = 450 # 1 update per 30 timestep day
# update_frequency = 300 # 1 update per 20 timestep day
# update_frequency = 150 # 1 update per 10 timestep day
specialty.VolatilityTargeting.update_frequency.fixed = 75 # 1 update per 5 timestep day
# The target volatility
specialty.VolatilityTargeting.target_volatility.fixed = 0.15

# Liquidity provider settings
[agent.lp.RmmLiquidityProvider]
# The amount of `token_x` to provide in ether
x_liquidity.fixed = 1
# The initial price of the pair
initial_price.fixed = 1.0

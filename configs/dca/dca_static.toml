scenario = "Dca"
output_directory = "analysis/dca/linear_dca/static"

[agent.block_admin.BlockAdmin]
timestep_size = 15

[agent.token_admin.TokenAdmin.arbx]
name = "Arbiter Token X"
symbol = "ARBX"
decimals = 18

[agent.token_admin.TokenAdmin.arby]
name = "Arbiter Token Y"
symbol = "ARBY"
decimals = 18

# Price process parameters
[agent.price_changer.PriceChanger]
# True is we want to use historical daily average price data
backtest = false
# The seed to use (optional)
seed = 2
# The number of steps in the process
# num_steps = 1000
num_steps = 1825
# The number of distinct paths to use
num_paths = 1
# The initial price of the asset
initial_price.fixed = 1.0
# The start time of the process
t_0.fixed = 0.0
# The end time of the process
t_n.fixed = 1.0
## Parameters for the type of process to use.
# # The drift for GBM
process.GBM.drift.fixed = 0.1
# # The volatility for GBM
process.GBM.volatility.fixed = 0.35
# process.OU.mean.fixed = 1.0
# The volatility for GBM
#process.OU.volatility.fixed = 0.1
# The mean reversion rate for OU
#process.OU.theta.fixed = 10

# Liquidity provider settings
[agent.dca_swapper.DcaSwapper]
num_swaps.fixed = 12
start_timestamp = 15
end_timestamp = 30_000
initial_balance = 1.0
swap_direction = false

[agent.g3m_lp.DcaG3mLiquidityProvider]
# The amount of `token_x` to provide in ether
initial_x_amount.fixed = 100
# The initial price of the pair
initial_price.fixed = 1.0
end_timestamp.fixed = 30_000
